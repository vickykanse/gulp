{"version":3,"sources":["Ajquery-2.2.4.js","chart.js","jquery-2.2.4.js","other.js"],"names":["a","b","module","exports","document","Error","window","this","c","d","e","slice","f","concat","g","push","h","indexOf","i","j","toString","k","hasOwnProperty","l","m","n","fn","init","o","p","q","r","toUpperCase","s","length","type","isWindow","prototype","jquery","constructor","selector","toArray","call","get","pushStack","merge","prevObject","context","each","map","apply","arguments","first","eq","last","end","sort","splice","extend","isFunction","isPlainObject","isArray","expando","Math","random","replace","isReady","error","noop","Array","isNumeric","parseFloat","nodeType","isEmptyObject","globalEval","eval","trim","createElement","text","head","appendChild","parentNode","removeChild","camelCase","nodeName","toLowerCase","makeArray","Object","inArray","grep","guid","proxy","now","Date","support","Symbol","iterator","split","t","u","v","w","x","y","ga","z","A","B","C","D","E","F","pop","G","H","I","J","K","L","M","N","O","P","RegExp","Q","R","S","T","U","V","W","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","X","Y","Z","$","_","aa","ba","ca","String","fromCharCode","da","childNodes","ea","fa","ownerDocument","exec","getElementById","id","getElementsByTagName","getElementsByClassName","qsa","test","getAttribute","setAttribute","qa","join","oa","querySelectorAll","removeAttribute","cacheLength","shift","ha","ia","ja","attrHandle","ka","sourceIndex","nextSibling","la","ma","na","isXML","documentElement","setDocument","defaultView","top","addEventListener","attachEvent","attributes","className","createComment","getById","getElementsByName","find","filter","getAttributeNode","value","innerHTML","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","contains","sortDetached","unshift","attr","specified","uniqueSort","detectDuplicates","sortStable","getText","textContent","firstChild","nodeValue","selectors","createPseudo","match","relative","dir","preFilter","lastChild","uniqueID","pseudos","setFilters","not","has","innerText","lang","target","location","hash","root","focus","activeElement","hasFocus","href","tabIndex","enabled","disabled","checked","selected","selectedIndex","empty","parent","header","input","button","even","odd","lt","gt","nth","radio","checkbox","file","password","image","submit","reset","pa","ra","sa","ua","va","ta","wa","xa","filters","tokenize","compile","select","defaultValue","expr","unique","isXMLDoc","is","parseHTML","ready","children","contents","next","prev","closest","index","prevAll","add","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","siblings","contentDocument","reverse","removeEventListener","Callbacks","once","stopOnFalse","memory","remove","disable","lock","locked","fireWith","fire","fired","Deferred","state","always","done","fail","then","promise","progress","notify","resolve","reject","pipe","when","notifyWith","resolveWith","readyWait","holdReady","triggerHandler","off","readyState","doScroll","setTimeout","uid","register","defineProperty","writable","configurable","cache","set","access","hasData","parseJSON","data","removeData","_data","_removeData","name","queue","dequeue","_queueHooks","stop","clearQueue","source","css","cur","cssNumber","style","unit","start","option","thead","col","tr","td","_default","optgroup","tbody","tfoot","colgroup","caption","th","createDocumentFragment","htmlPrefilter","createTextNode","checkClone","cloneNode","noCloneChecked","event","global","handler","events","handle","triggered","dispatch","special","delegateType","bindType","origType","namespace","delegateCount","setup","teardown","removeEvent","fix","delegateTarget","preDispatch","handlers","isPropagationStopped","currentTarget","elem","isImmediatePropagationStopped","rnamespace","handleObj","result","preventDefault","stopPropagation","postDispatch","isNaN","props","fixHooks","keyHooks","which","charCode","keyCode","mouseHooks","pageX","clientX","body","scrollLeft","clientLeft","pageY","clientY","scrollTop","clientTop","Event","load","noBubble","trigger","blur","click","beforeunload","originalEvent","returnValue","isDefaultPrevented","defaultPrevented","timeStamp","isSimulated","stopImmediatePropagation","mouseenter","mouseleave","pointerenter","pointerleave","relatedTarget","on","one","html","clone","src","_evalUrl","cleanData","domManip","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","HTML","BODY","ya","za","write","close","Aa","Ba","Ca","opener","getComputedStyle","Da","Ea","Fa","getPropertyValue","pixelMarginRight","width","minWidth","maxWidth","Ga","cssText","marginLeft","marginRight","backgroundClip","clearCloneStyle","pixelPosition","boxSizingReliable","reliableMarginLeft","reliableMarginRight","Ha","Ia","position","visibility","display","Ja","letterSpacing","fontWeight","Ka","La","Ma","Na","max","Oa","Pa","offsetWidth","offsetHeight","Qa","Ra","cssHooks","opacity","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","cssProps","float","isFinite","getBoundingClientRect","left","margin","padding","border","expand","show","hide","toggle","Tween","prop","easing","options","propHooks","run","duration","pos","step","fx","linear","swing","cos","PI","Sa","Ta","Ua","Va","Wa","Xa","height","Ya","_a","tweeners","prefilters","startTime","tweens","opts","specialEasing","originalProperties","originalOptions","createTween","rejectWith","$a","timer","anim","complete","Animation","tweener","unqueued","overflow","overflowX","overflowY","hidden","prefilter","speed","speeds","old","fadeTo","animate","finish","timers","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","tick","interval","setInterval","clearInterval","slow","fast","delay","clearTimeout","checkOn","optSelected","optDisabled","radioValue","ab","bb","removeAttr","attrHooks","propFix","cb","db","removeProp","parseInt","for","class","eb","fb","addClass","removeClass","toggleClass","hasClass","gb","hb","val","valHooks","ib","isTrigger","parentWindow","simulate","hover","focusin","jb","kb","lb","JSON","parse","parseXML","DOMParser","parseFromString","mb","nb","ob","qb","rb","sb","tb","ub","vb","wb","xb","dataTypes","yb","ajaxSettings","flatOptions","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","xml","json","responseFields","converters","ajaxSetup","ajaxPrefilter","ajaxTransport","ajax","statusCode","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","mimeType","status","abort","success","method","dataType","crossDomain","host","param","traditional","hasContent","ifModified","headers","beforeSend","timeout","send","zb","dataFilter","Ab","statusText","getJSON","getScript","throws","wrapAll","firstElementChild","wrapInner","wrap","unwrap","visible","getClientRects","Bb","Cb","Db","Eb","Fb","Gb","encodeURIComponent","serialize","serializeArray","xhr","XMLHttpRequest","Hb","Ib","cors","open","username","xhrFields","onload","onerror","onabort","onreadystatechange","responseType","responseText","binary","response","script","charset","scriptCharset","Jb","Kb","jsonp","jsonpCallback","Lb","Mb","animated","offset","setOffset","using","pageYOffset","pageXOffset","offsetParent","scrollTo","Height","Width","content","bind","unbind","delegate","undelegate","size","andSelf","define","amd","Nb","jQuery","Ob","noConflict","self","Chart","require","code","colorNames","getRgba","string","rgb","round","scale","getHsla","alpha","getHwb","rgbaString","rgba","undefined","percentaString","hslaString","hsla","num","min","hexDouble","str","getRgb","getHsl","getAlpha","vals","hexString","rgbString","percentString","hslString","hwbString","hwb","keyword","reverseNames","convert","Color","obj","valid","values","hsl","hsv","cmyk","setValues","red","lightness","whiteness","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","rgbNumber","luminosity","lum","chan","pow","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","toJSON","console","spaces","maxes","getValues","space","charAt","capped","chans","sname","args","svalues","rgb2hsl","delta","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","reverseKeywords","stringify","rgb2xyz","rgb2lab","xyz","hsl2rgb","t1","t2","t3","hsv2rgb","hi","floor","hwb2rgb","wh","bl","cmyk2rgb","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","atan2","sqrt","lab2rgb","lch2lab","lch","hr","sin","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","key","conversions","Converter","func","arg","pair","from","to","convs","routeSpace","fspace","forEach","plugins","Bar","config","Bubble","Doughnut","Line","PolarArea","Radar","defaults","scatter","mode","scales","xAxes","yAxes","tooltips","callbacks","title","label","tooltipItem","xLabel","yLabel","controllers","line","Scatter","helpers","bar","categoryPercentage","barPercentage","gridLines","offsetGridLines","DatasetController","dataElementType","elements","Rectangle","initialize","meta","me","getMeta","stack","getDataset","update","ilen","_ruler","getRuler","updateElement","rectangle","chart","dataset","custom","rectangleOptions","_xScale","getScaleForId","xAxisID","_yScale","yAxisID","_datasetIndex","_index","_model","datasetLabel","labels","borderSkipped","backgroundColor","getValueAtIndexOrDefault","borderColor","borderWidth","updateElementGeometry","pivot","model","vscale","getValueScale","base","getBasePixel","horizontal","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","center","getValueScaleId","getIndexScaleId","getIndexScale","getStackCount","stacked","datasets","stacks","getDatasetMeta","isDatasetVisible","getStackIndex","datasetIndex","stackCount","tickSize","ticks","categorySize","fullBarSize","barSize","categorySpacing","getValueOrDefault","barThickness","maxBarThickness","Infinity","barSpacing","imeta","ivalue","Number","controller","getPixelForValue","isCombo","stackIndex","draw","canvas","clipArea","ctx","chartArea","unclipArea","setHoverStyle","hoverBackgroundColor","getHoverColor","hoverBorderColor","hoverBorderWidth","removeHoverStyle","rectangleElementOptions","horizontalBar","tooltipItems","bubble","dataPoint","Point","points","point","xScale","yScale","pointElementOptions","dsIndex","getPixelForDecimal","NaN","radius","getRadius","hitRadius","skip","hoverRadius","dataVal","doughnut","animation","animateRotate","animateScale","aspectRatio","legendCallback","legend","generateLabels","ds","arc","arcOpts","fillStyle","strokeStyle","lineWidth","onClick","legendItem","cutoutPercentage","rotation","circumference","dataLabel","pie","Arc","linkScales","getRingIndex","ringIndex","availableWidth","right","availableHeight","bottom","minSize","startAngle","endAngle","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","valueAtIndexOrDefault","element","abs","hoverWidth","_chart","lineEnabled","showLine","showLines","spanGaps","datasetElementType","lineElementOptions","tension","lineTension","_scale","_children","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","pointOptions","includeOffset","pointRadius","pointHitRadius","calculatePointY","pointStyle","dsMeta","sumPos","sumNeg","stackedRightValue","getRightValue","rightValue","controlPoints","area","capControlPoint","pt","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","controlPointNextY","capBezierPoints","canvasHelpers","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","polarArea","angleLines","circular","pointLabels","beginAtZero","count","countVisibleElements","xCenter","yCenter","visibleCount","datasetStartAngle","distance","getDistanceFromCenterForValue","resetRadius","radar","_loop","pointPosition","getPointPositionForValue","onProgress","onComplete","Element","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","animationService","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","framesToDrop","advance","endTime","callback","drawPoint","edgeLength","xOffset","yOffset","beginPath","closePath","moveTo","lineTo","SQRT2","fillRect","strokeRect","leftX","topY","sideSize","drawRoundedRectangle","stroke","drawImage","save","rect","clip","restore","flip","bezierCurveTo","platform","positionIsHorizontal","types","instances","construct","item","configMerge","initConfig","acquireContext","_bufferedRender","retinaScale","bindEvents","responsive","resize","ensureScalesHaveIDs","buildScales","initToolTip","clear","silent","maintainAspectRatio","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","items","dtype","dposition","isDefault","scaleType","scaleClass","scaleService","getScaleConstructor","addScalesToLayout","buildOrUpdateControllers","newControllers","updateIndex","ControllerClass","resetElements","tooltip","animationDuration","newOptions","_options","updateConfig","buildOrUpdateElements","updateLayout","updateDatasets","_bufferedRequest","layoutService","updateDataset","animationOptions","animationObject","easingFunction","easingEffects","stepDecimal","easingValue","transition","boxes","box","drawDatasets","drawDataset","getElementAtEvent","Interaction","modes","single","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","getDatasetAtEvent","_meta","generateLegend","destroy","unbindEvents","releaseContext","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","listener","eventHandler","updateHoverStyle","changed","handleEvent","bufferedRequest","hoverOptions","lastActive","onHover","native","arrayEquals","Controller","arrayEvents","unlistenArrayEvents","array","stub","_chartjs","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","enumerable","res","object","resyncElements","elementOpts","valueOrDefault","numMeta","numData","insertElements","onDataPush","onDataPop","onDataShift","onDataSplice","onDataUnshift","inherits","color","configuration","_view","_start","ease","view","actual","origin","c0","c1","keys","interpolate","tooltipPosition","hasValue","isNumber","loopable","len","objClone","setFn","_base","extension","baseHasProperty","baseVal","scaleMerge","getScaleDefaults","valueObj","axisType","axisDefaults","where","collection","filterCallback","filtered","scope","findNextWhere","arrayToSearch","startIndex","currentItem","findPreviousWhere","extensions","ChartElement","Surrogate","__super__","almostEquals","epsilon","almostWhole","rounded","reduce","NEGATIVE_INFINITY","POSITIVE_INFINITY","sign","log10","log","LN10","toRadians","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","distanceBetweenPoints","pt1","pt2","aliasPixel","pixelWidth","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","deltaX","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","range","exponent","fraction","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","constrainedNode","constrainedContainer","hasCNode","hasCContainer","infinity","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","getRelativePosition","evt","mouseX","mouseY","srcElement","boundingRect","touches","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","addEvent","eventType","detachEvent","getConstraintWidth","getConstraintHeight","container","clientWidth","cw","clientHeight","ch","el","property","currentStyle","pixelRatio","devicePixelRatio","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","quadraticCurveTo","CanvasGradient","defaultColor","a0","a1","v0","v1","thisArg","colorValue","CanvasPattern","callCallback","parseVisibleItems","jlen","getIntersectItems","inRange","getNearestItems","distanceMetric","minDistance","nearestItems","getCenterPoint","indexMode","nearest","ret","getArea","intersectsItem","inXRange","inYRange","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","filterByPosition","sortByWeight","_tmpIndex_","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","layout","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","_plugins","_cacheId","plugin","unregister","idx","getAll","hook","descriptor","params","descriptors","pluginService","PluginBase","computeTextSize","parseFontOptions","globalDefaults","fontSize","family","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","Ticks","formatters","Scale","beforeUpdate","maxHeight","margins","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","getPixelForTick","angleRadians","scaleLabelOpts","gridLineOpts","scaleLabelFontSize","isFullWidth","largestTextWidth","tallestLabelHeightInLines","lineSpace","longestLabelWidth","labelHeight","firstTick","firstLabelWidth","lastTick","lastLabelWidth","handleMargins","rawValue","getLabelForIndex","getValueForPixel","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","skipRatio","maxTicks","optionTicks","isRotated","useAutoskipper","maxTicksLimit","tickFontColor","fontColor","tl","scaleLabelFontColor","scaleLabelFont","labelRotationRadians","longestRotatedLabel","itemsToDraw","xTickStart","xTickEnd","yTickStart","yTickEnd","isLastTick","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","zeroLineIndex","textAlign","textBaseline","xLineValue","labelXOffset","isLeft","tickPadding","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","setLineDash","lineDashOffset","translate","fillText","scaleLabelX","scaleLabelY","constructors","registerScaleType","scaleConstructor","updateScaleDefaults","additions","generators","generationOptions","dataRange","spacing","stepSize","niceRange","niceMin","niceMax","ceil","numSpaces","logarithmic","exp","significand","tickVal","endExp","endSignificand","minNotZero","tickValue","logDelta","tickString","numDecimal","toFixed","remain","toExponential","mergeOpacity","colorString","pushOrConcat","toPush","getBaseModel","tooltipOpts","xPadding","yPadding","xAlign","yAlign","bodyFontColor","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyAlign","bodyFontSize","bodySpacing","titleFontColor","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontStyle","titleFontSize","_titleAlign","titleAlign","titleSpacing","titleMarginBottom","footerFontColor","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontStyle","footerFontSize","_footerAlign","footerAlign","footerSpacing","footerMarginTop","caretSize","cornerRadius","legendColorBackground","multiKeyBackground","displayColors","caretPadding","beforeTitle","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","positioners","_eventPosition","itemSort","dataPoints","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","vm","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","textColor","xLinePadding","fillLineOfText","drawColorBoxes","drawFooter","drawBackground","hasTooltipContent","_lastActive","average","eventPosition","nearestElement","tp","globalOpts","inLabelRange","chartX","chartY","pointRelativePosition","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","lineJoin","currentVM","globalOptionLineElements","lastDrawnIndex","lineCap","xRange","errMargin","isVertical","getBarBounds","halfWidth","halfHeight","signX","signY","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","eventTypeMap","touchstart","touchmove","touchend","pointerdown","pointermove","pointerup","pointerout","readUsedSize","createEvent","nativeEvent","addResizeListener","iframe","ticking","resizer","contentWindow","getContext","renderHeight","renderWidth","initial","displayWidth","displayHeight","initCanvas","proxies","fromNativeEvent","removeResizeListener","implementation","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","sources","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","span","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","createNewLegendAndAttach","legendOpts","Legend","ci","lineDash","legendHitBoxes","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","globalDefault","itemOrDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","drawLegendBox","lh","hitBox","beforeInit","afterEvent","createNewTitleBlockAndAttach","titleOpts","Title","titleBlock","titleX","titleY","titleFont","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","defaultConfig","LinearScale","LinearScaleBase","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","tickFontSize","handleDirectionalChanges","innerDimension","ticksAsNumbers","minSign","maxSign","suggestedMin","suggestedMax","numericGeneratorOptions","fixedStepSize","LogarithmicScale","tickValues","newVal","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","LinearRadialScale","drawingArea","largestPossibleRadius","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","distanceFromCenter","thisAngle","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","yHeight","drawRadiusLine","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","millisecond","steps","second","minute","hour","day","week","maxStep","month","quarter","year","parseTime","axis","timeOpts","time","parser","getMonth","format","warn","isoWeekday","startOf","valueOf","realMax","generateTicks","TimeScale","timestamp","dataMin","MAX_SAFE_INTEGER","dataMax","MIN_SAFE_INTEGER","chartData","parsedData","labelIndex","labelMoment","timestamps","dataIndex","dataMoment","_parsedData","minTimestamp","maxTimestamp","minMoment","getLabelCapacity","minUnit","units","numUnits","unitDetails","determineUnit","displayFormat","displayFormats","unitDefinition","unitSizeInMilliSeconds","sizeInUnits","multiplier","determineStepSize","tooltipFormat","tickFormatFunction","formattedTick","ticksAsTimestamps","getPixelForOffset","epochWidth","getLabelWidth","tickLabelWidth","sinRotation","exampleTime","exampleLabel","_stroke","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","dChart","datasetRadiusBuffer","Counter"],"mappings":"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","file":"script.js","sourcesContent":["/*! jQuery v2.2.4 | (c) jQuery Foundation | jquery.org/license */\r\n!function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=a.document,e=c.slice,f=c.concat,g=c.push,h=c.indexOf,i={},j=i.toString,k=i.hasOwnProperty,l={},m=\"2.2.4\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return e.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:e.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a){return n.each(this,a)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(e.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:g,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){var b=a&&a.toString();return!n.isArray(a)&&b-parseFloat(b)+1>=0},isPlainObject:function(a){var b;if(\"object\"!==n.type(a)||a.nodeType||n.isWindow(a))return!1;if(a.constructor&&!k.call(a,\"constructor\")&&!k.call(a.constructor.prototype||{},\"isPrototypeOf\"))return!1;for(b in a);return void 0===b||k.call(a,b)},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?i[j.call(a)]||\"object\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\"use strict\")?(b=d.createElement(\"script\"),b.text=a,d.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b){var c,d=0;if(s(a)){for(c=a.length;c>d;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):g.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:h.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,g=0,h=[];if(s(a))for(d=a.length;d>g;g++)e=b(a[g],g,c),null!=e&&h.push(e);else for(g in a)e=b(a[g],g,c),null!=e&&h.push(e);return f.apply([],h)},guid:1,proxy:function(a,b){var c,d,f;return\"string\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(d=e.call(arguments,2),f=function(){return a.apply(b||this,d.concat(e.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:l}),\"function\"==typeof Symbol&&(n.fn[Symbol.iterator]=c[Symbol.iterator]),n.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(a,b){i[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=ga(),z=ga(),A=ga(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",L=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",M=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",N=\"\\\\[\"+L+\"*(\"+M+\")(?:\"+L+\"*([*^$|!~]?=)\"+L+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+M+\"))|)\"+L+\"*\\\\]\",O=\":(\"+M+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+N+\")*)|.*)\\\\)|)\",P=new RegExp(L+\"+\",\"g\"),Q=new RegExp(\"^\"+L+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+L+\"+$\",\"g\"),R=new RegExp(\"^\"+L+\"*,\"+L+\"*\"),S=new RegExp(\"^\"+L+\"*([>+~]|\"+L+\")\"+L+\"*\"),T=new RegExp(\"=\"+L+\"*([^\\\\]'\\\"]*?)\"+L+\"*\\\\]\",\"g\"),U=new RegExp(O),V=new RegExp(\"^\"+M+\"$\"),W={ID:new RegExp(\"^#(\"+M+\")\"),CLASS:new RegExp(\"^\\\\.(\"+M+\")\"),TAG:new RegExp(\"^(\"+M+\"|[*])\"),ATTR:new RegExp(\"^\"+N),PSEUDO:new RegExp(\"^\"+O),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+L+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+L+\"*(?:([+-]|)\"+L+\"*(\\\\d+)|))\"+L+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+K+\")$\",\"i\"),needsContext:new RegExp(\"^\"+L+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+L+\"*((?:-\\\\d)?\\\\d*)\"+L+\"*\\\\)|)(?=[^-]|$)\",\"i\")},X=/^(?:input|select|textarea|button)$/i,Y=/^h\\d$/i,Z=/^[^{]+\\{\\s*\\[native \\w/,$=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,_=/[+~]/,aa=/'|\\\\/g,ba=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+L+\"?|(\"+L+\")|.)\",\"ig\"),ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},da=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(ea){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function ha(a){return a[u]=!0,a}function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}c=fa.support={},f=fa.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\"HTML\"!==b.nodeName:!1},m=fa.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener(\"unload\",da,!1):e.attachEvent&&e.attachEvent(\"onunload\",da)),c.attributes=ia(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ia(function(a){return a.appendChild(n.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=Z.test(n.getElementsByClassName),c.getById=ia(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ba,ca);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ba,ca);return function(a){var c=\"undefined\"!=typeof a.getAttributeNode&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\"undefined\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return\"undefined\"!=typeof b.getElementsByClassName&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=Z.test(n.querySelectorAll))&&(ia(function(a){o.appendChild(a).innerHTML=\"<a id='\"+u+\"'></a><select id='\"+u+\"-\\r\\\\' msallowcapture=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowcapture^='']\").length&&q.push(\"[*^$]=\"+L+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+L+\"*(?:value|\"+K+\")\"),a.querySelectorAll(\"[id~=\"+u+\"-]\").length||q.push(\"~=\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\"),a.querySelectorAll(\"a#\"+u+\"+*\").length||q.push(\".#.+[+~]\")}),ia(function(a){var b=n.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+L+\"*[*^$|!~]?=\"),a.querySelectorAll(\":enabled\").length||q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=Z.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ia(function(a){c.disconnectedMatch=s.call(a,\"div\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",O)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=Z.test(o.compareDocumentPosition),t=b||Z.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return ka(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?ka(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},fa.matches=function(a,b){return fa(a,null,null,b)},fa.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(T,\"='$1']\"),c.matchesSelector&&p&&!A[b+\" \"]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return fa(b,n,null,[a]).length>0},fa.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},fa.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},fa.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},fa.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=fa.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=fa.selectors={cacheLength:50,createPseudo:ha,match:W,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ba,ca),a[3]=(a[3]||a[4]||a[5]||\"\").replace(ba,ca),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||fa.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&fa.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return W.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&U.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ba,ca).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+L+\")\"+a+\"(\"+L+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||\"undefined\"!=typeof a.getAttribute&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=fa.attr(d,a);return null==e?\"!=\"===b:b?(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e.replace(P,\" \")+\" \").indexOf(c)>-1:\"|=\"===b?e===c||e.slice(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||fa.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ha(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ha(function(a){var b=[],c=[],d=h(a.replace(Q,\"$1\"));return d[u]?ha(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ha(function(a){return function(b){return fa(a,b).length>0}}),contains:ha(function(a){return a=a.replace(ba,ca),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ha(function(a){return V.test(a||\"\")||fa.error(\"unsupported lang: \"+a),a=a.replace(ba,ca).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Y.test(a.nodeName)},input:function(a){return X.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:na(function(){return[0]}),last:na(function(a,b){return[b-1]}),eq:na(function(a,b,c){return[0>c?c+b:c]}),even:na(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:na(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:na(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:na(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=la(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=ma(b);function pa(){}pa.prototype=d.filters=d.pseudos,d.setFilters=new pa,g=fa.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=R.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=S.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(Q,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=W[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?fa.error(a):z(a,i).slice(0)};function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}return h=fa.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=wa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,xa(e,d)),f.selector=a}return f},i=fa.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ba,ca),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=W.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(ba,ca),_.test(j[0].type)&&oa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&qa(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,!b||_.test(a)&&oa(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ia(function(a){return 1&a.compareDocumentPosition(n.createElement(\"div\"))}),ia(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||ja(\"type|href|height|width\",function(a,b,c){return c?void 0:a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ia(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||ja(\"value\",function(a,b,c){return c||\"input\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ia(function(a){return null==a.getAttribute(\"disabled\")})||ja(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),fa}(a);n.find=t,n.expr=t.selectors,n.expr[\":\"]=n.expr.pseudos,n.uniqueSort=n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},w=n.expr.match.needsContext,x=/^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/,y=/^.[^:#\\[\\.,]*$/;function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return h.call(b,a)>-1!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if(\"string\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+\" \"+a:a,d},filter:function(a){return this.pushStack(z(this,a||[],!1))},not:function(a){return this.pushStack(z(this,a||[],!0))},is:function(a){return!!z(this,\"string\"==typeof a&&w.test(a)?n(a):a||[],!1).length}});var A,B=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,C=n.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||A,\"string\"==typeof a){if(e=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:B.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),x.test(e[1])&&n.isPlainObject(b))for(e in b)n.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&f.parentNode&&(this.length=1,this[0]=f),this.context=d,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?void 0!==c.ready?c.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};C.prototype=n.fn,A=n(d);var D=/^(?:parents|prev(?:Until|All))/,E={children:!0,contents:!0,next:!0,prev:!0};n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=w.test(a)||\"string\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.uniqueSort(f):f)},index:function(a){return a?\"string\"==typeof a?h.call(n(a),this[0]):h.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.uniqueSort(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function F(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return u(a,\"parentNode\")},parentsUntil:function(a,b,c){return u(a,\"parentNode\",c)},next:function(a){return F(a,\"nextSibling\")},prev:function(a){return F(a,\"previousSibling\")},nextAll:function(a){return u(a,\"nextSibling\")},prevAll:function(a){return u(a,\"previousSibling\")},nextUntil:function(a,b,c){return u(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return u(a,\"previousSibling\",c)},siblings:function(a){return v((a.parentNode||{}).firstChild,a)},children:function(a){return v(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(E[a]||n.uniqueSort(e),D.test(a)&&e.reverse()),this.pushStack(e)}});var G=/\\S+/g;function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\"string\"==typeof a?H(a):n.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function d(b){n.each(b,function(b,c){n.isFunction(c)?a.unique&&j.has(c)||f.push(c):c&&c.length&&\"string\"!==n.type(c)&&d(c)})}(arguments),c&&!b&&i()),this},remove:function(){return n.each(arguments,function(a,b){var c;while((c=n.inArray(b,f,c))>-1)f.splice(c,1),h>=c&&h--}),this},has:function(a){return a?n.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c=\"\",this},disabled:function(){return!f},lock:function(){return e=g=[],c||(f=c=\"\"),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j},n.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",n.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",n.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",n.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().progress(c.notify).done(c.resolve).fail(c.reject):c[f[0]+\"With\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\"With\"](this===e?d:this,arguments),this},e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=e.call(arguments),d=c.length,f=1!==d||a&&n.isFunction(a.promise)?d:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(d>1)for(i=new Array(d),j=new Array(d),k=new Array(d);d>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().progress(h(b,j,i)).done(h(b,k,c)).fail(g.reject):--f;return f||g.resolveWith(k,c),g.promise()}});var I;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(I.resolveWith(d,[n]),n.fn.triggerHandler&&(n(d).triggerHandler(\"ready\"),n(d).off(\"ready\"))))}});function J(){d.removeEventListener(\"DOMContentLoaded\",J),a.removeEventListener(\"load\",J),n.ready()}n.ready.promise=function(b){return I||(I=n.Deferred(),\"complete\"===d.readyState||\"loading\"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(n.ready):(d.addEventListener(\"DOMContentLoaded\",J),a.addEventListener(\"load\",J))),I.promise(b)},n.ready.promise();var K=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)K(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},L=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function M(){this.expando=n.expando+M.uid++}M.uid=1,M.prototype={register:function(a,b){var c=b||{};return a.nodeType?a[this.expando]=c:Object.defineProperty(a,this.expando,{value:c,writable:!0,configurable:!0}),a[this.expando]},cache:function(a){if(!L(a))return{};var b=a[this.expando];return b||(b={},L(a)&&(a.nodeType?a[this.expando]=b:Object.defineProperty(a,this.expando,{value:b,configurable:!0}))),b},set:function(a,b,c){var d,e=this.cache(a);if(\"string\"==typeof b)e[b]=c;else for(d in b)e[d]=b[d];return e},get:function(a,b){return void 0===b?this.cache(a):a[this.expando]&&a[this.expando][b]},access:function(a,b,c){var d;return void 0===b||b&&\"string\"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=a[this.expando];if(void 0!==f){if(void 0===b)this.register(a);else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in f?d=[b,e]:(d=e,d=d in f?[d]:d.match(G)||[])),c=d.length;while(c--)delete f[d[c]]}(void 0===b||n.isEmptyObject(f))&&(a.nodeType?a[this.expando]=void 0:delete a[this.expando])}},hasData:function(a){var b=a[this.expando];return void 0!==b&&!n.isEmptyObject(b)}};var N=new M,O=new M,P=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,Q=/[A-Z]/g;function R(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(Q,\"-$&\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:P.test(c)?n.parseJSON(c):c;\r\n}catch(e){}O.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return O.hasData(a)||N.hasData(a)},data:function(a,b,c){return O.access(a,b,c)},removeData:function(a,b){O.remove(a,b)},_data:function(a,b,c){return N.access(a,b,c)},_removeData:function(a,b){N.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=O.get(f),1===f.nodeType&&!N.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=n.camelCase(d.slice(5)),R(f,d,e[d])));N.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){O.set(this,a)}):K(this,function(b){var c,d;if(f&&void 0===b){if(c=O.get(f,a)||O.get(f,a.replace(Q,\"-$&\").toLowerCase()),void 0!==c)return c;if(d=n.camelCase(a),c=O.get(f,d),void 0!==c)return c;if(c=R(f,d,void 0),void 0!==c)return c}else d=n.camelCase(a),this.each(function(){var c=O.get(this,d);O.set(this,d,b),a.indexOf(\"-\")>-1&&void 0!==c&&O.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){O.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\"fx\")+\"queue\",d=N.get(a,b),c&&(!d||n.isArray(c)?d=N.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\"fx\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return N.get(a,c)||N.access(a,c,{empty:n.Callbacks(\"once memory\").add(function(){N.remove(a,[b+\"queue\",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=N.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var S=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,T=new RegExp(\"^(?:([+-])=|)(\"+S+\")([a-z%]*)$\",\"i\"),U=[\"Top\",\"Right\",\"Bottom\",\"Left\"],V=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)};function W(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&T.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}var X=/^(?:checkbox|radio)$/i,Y=/<([\\w:-]+)/,Z=/^$|\\/(?:java|ecma)script/i,$={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};$.optgroup=$.option,$.tbody=$.tfoot=$.colgroup=$.caption=$.thead,$.th=$.td;function _(a,b){var c=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function aa(a,b){for(var c=0,d=a.length;d>c;c++)N.set(a[c],\"globalEval\",!b||N.get(b[c],\"globalEval\"))}var ba=/<|&#?\\w+;/;function ca(a,b,c,d,e){for(var f,g,h,i,j,k,l=b.createDocumentFragment(),m=[],o=0,p=a.length;p>o;o++)if(f=a[o],f||0===f)if(\"object\"===n.type(f))n.merge(m,f.nodeType?[f]:f);else if(ba.test(f)){g=g||l.appendChild(b.createElement(\"div\")),h=(Y.exec(f)||[\"\",\"\"])[1].toLowerCase(),i=$[h]||$._default,g.innerHTML=i[1]+n.htmlPrefilter(f)+i[2],k=i[0];while(k--)g=g.lastChild;n.merge(m,g.childNodes),g=l.firstChild,g.textContent=\"\"}else m.push(b.createTextNode(f));l.textContent=\"\",o=0;while(f=m[o++])if(d&&n.inArray(f,d)>-1)e&&e.push(f);else if(j=n.contains(f.ownerDocument,f),g=_(l.appendChild(f),\"script\"),j&&aa(g),c){k=0;while(f=g[k++])Z.test(f.type||\"\")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement(\"div\")),c=d.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),l.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",l.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var da=/^key/,ea=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,fa=/^([^.]*)(?:\\.(.+)|)/;function ga(){return!0}function ha(){return!1}function ia(){try{return d.activeElement}catch(a){}}function ja(a,b,c,d,e,f){var g,h;if(\"object\"==typeof b){\"string\"!=typeof c&&(d=d||c,c=void 0);for(h in b)ja(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&(\"string\"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=ha;else if(!e)return a;return 1===f&&(g=e,e=function(a){return n().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=n.guid++)),a.each(function(){n.event.add(this,b,e,d,c)})}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=N.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return\"undefined\"!=typeof n&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(G)||[\"\"],j=b.length;while(j--)h=fa.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\".\")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=N.hasData(a)&&N.get(a);if(r&&(i=r.events)){b=(b||\"\").match(G)||[\"\"],j=b.length;while(j--)if(h=fa.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+p.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&N.remove(a,\"handle events\")}},dispatch:function(a){a=n.event.fix(a);var b,c,d,f,g,h=[],i=e.call(arguments),j=(N.get(this,\"events\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())a.rnamespace&&!a.rnamespace.test(g.namespace)||(a.handleObj=g,a.data=g.data,d=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==d&&(a.result=d)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(\"click\"!==a.type||isNaN(a.button)||a.button<1))for(;i!==this;i=i.parentNode||this)if(1===i.nodeType&&(i.disabled!==!0||\"click\"!==a.type)){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\" \",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>-1:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:\"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,b){var c,e,f,g=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||d,e=c.documentElement,f=c.body,a.pageX=b.clientX+(e&&e.scrollLeft||f&&f.scrollLeft||0)-(e&&e.clientLeft||f&&f.clientLeft||0),a.pageY=b.clientY+(e&&e.scrollTop||f&&f.scrollTop||0)-(e&&e.clientTop||f&&f.clientTop||0)),a.which||void 0===g||(a.which=1&g?1:2&g?3:4&g?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,e,f=a.type,g=a,h=this.fixHooks[f];h||(this.fixHooks[f]=h=ea.test(f)?this.mouseHooks:da.test(f)?this.keyHooks:{}),e=h.props?this.props.concat(h.props):this.props,a=new n.Event(g),b=e.length;while(b--)c=e[b],a[c]=g[c];return a.target||(a.target=d),3===a.target.nodeType&&(a.target=a.target.parentNode),h.filter?h.filter(a,g):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==ia()&&this.focus?(this.focus(),!1):void 0},delegateType:\"focusin\"},blur:{trigger:function(){return this===ia()&&this.blur?(this.blur(),!1):void 0},delegateType:\"focusout\"},click:{trigger:function(){return\"checkbox\"===this.type&&this.click&&n.nodeName(this,\"input\")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?ga:ha):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={constructor:n.Event,isDefaultPrevented:ha,isPropagationStopped:ha,isImmediatePropagationStopped:ha,isSimulated:!1,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=ga,a&&!this.isSimulated&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=ga,a&&!this.isSimulated&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=ga,a&&!this.isSimulated&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||n.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),n.fn.extend({on:function(a,b,c,d){return ja(this,a,b,c,d)},one:function(a,b,c,d){return ja(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return b!==!1&&\"function\"!=typeof b||(c=b,b=void 0),c===!1&&(c=ha),this.each(function(){n.event.remove(this,a,c,b)})}});var ka=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,la=/<script|<style|<link/i,ma=/checked\\s*(?:[^=]|=\\s*.checked.)/i,na=/^true\\/(.*)/,oa=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;function pa(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}function qa(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function ra(a){var b=na.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function sa(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(N.hasData(a)&&(f=N.access(a),g=N.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}O.hasData(a)&&(h=O.access(a),i=n.extend({},h),O.set(b,i))}}function ta(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&X.test(a.type)?b.checked=a.checked:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}function ua(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&ma.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),ua(f,b,c,d)});if(o&&(e=ca(b,a[0].ownerDocument,!1,a,d),g=e.firstChild,1===e.childNodes.length&&(e=g),g||d)){for(h=n.map(_(e,\"script\"),qa),i=h.length;o>m;m++)j=e,m!==p&&(j=n.clone(j,!0,!0),i&&n.merge(h,_(j,\"script\"))),c.call(a[m],j,m);if(i)for(k=h[h.length-1].ownerDocument,n.map(h,ra),m=0;i>m;m++)j=h[m],Z.test(j.type||\"\")&&!N.access(j,\"globalEval\")&&n.contains(k,j)&&(j.src?n._evalUrl&&n._evalUrl(j.src):n.globalEval(j.textContent.replace(oa,\"\")))}return a}function va(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(_(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&aa(_(d,\"script\")),d.parentNode.removeChild(d));return a}n.extend({htmlPrefilter:function(a){return a.replace(ka,\"<$1></$2>\")},clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(l.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=_(h),f=_(a),d=0,e=f.length;e>d;d++)ta(f[d],g[d]);if(b)if(c)for(f=f||_(a),g=g||_(h),d=0,e=f.length;e>d;d++)sa(f[d],g[d]);else sa(a,h);return g=_(h,\"script\"),g.length>0&&aa(g,!i&&_(a,\"script\")),h},cleanData:function(a){for(var b,c,d,e=n.event.special,f=0;void 0!==(c=a[f]);f++)if(L(c)){if(b=c[N.expando]){if(b.events)for(d in b.events)e[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);c[N.expando]=void 0}c[O.expando]&&(c[O.expando]=void 0)}}}),n.fn.extend({domManip:ua,detach:function(a){return va(this,a,!0)},remove:function(a){return va(this,a)},text:function(a){return K(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=a)})},null,a,arguments.length)},append:function(){return ua(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=pa(this,a);b.appendChild(a)}})},prepend:function(){return ua(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=pa(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return ua(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return ua(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(_(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return K(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!la.test(a)&&!$[(Y.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=n.htmlPrefilter(a);try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(_(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return ua(this,arguments,function(b){var c=this.parentNode;n.inArray(this,a)<0&&(n.cleanData(_(this)),c&&c.replaceChild(b,this))},a)}}),n.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),f=e.length-1,h=0;f>=h;h++)c=h===f?this:this.clone(!0),n(e[h])[b](c),g.apply(d,c.get());return this.pushStack(d)}});var wa,xa={HTML:\"block\",BODY:\"block\"};function ya(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}function za(a){var b=d,c=xa[a];return c||(c=ya(a,b),\"none\"!==c&&c||(wa=(wa||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=wa[0].contentDocument,b.write(),b.close(),c=ya(a,b),wa.detach()),xa[a]=c),c}var Aa=/^margin/,Ba=new RegExp(\"^(\"+S+\")(?!px)[a-z%]+$\",\"i\"),Ca=function(b){var c=b.ownerDocument.defaultView;return c&&c.opener||(c=a),c.getComputedStyle(b)},Da=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e},Ea=d.documentElement;!function(){var b,c,e,f,g=d.createElement(\"div\"),h=d.createElement(\"div\");if(h.style){h.style.backgroundClip=\"content-box\",h.cloneNode(!0).style.backgroundClip=\"\",l.clearCloneStyle=\"content-box\"===h.style.backgroundClip,g.style.cssText=\"border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute\",g.appendChild(h);function i(){h.style.cssText=\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",h.innerHTML=\"\",Ea.appendChild(g);var d=a.getComputedStyle(h);b=\"1%\"!==d.top,f=\"2px\"===d.marginLeft,c=\"4px\"===d.width,h.style.marginRight=\"50%\",e=\"4px\"===d.marginRight,Ea.removeChild(g)}n.extend(l,{pixelPosition:function(){return i(),b},boxSizingReliable:function(){return null==c&&i(),c},pixelMarginRight:function(){return null==c&&i(),e},reliableMarginLeft:function(){return null==c&&i(),f},reliableMarginRight:function(){var b,c=h.appendChild(d.createElement(\"div\"));return c.style.cssText=h.style.cssText=\"-webkit-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",c.style.marginRight=c.style.width=\"0\",h.style.width=\"1px\",Ea.appendChild(g),b=!parseFloat(a.getComputedStyle(c).marginRight),Ea.removeChild(g),h.removeChild(c),b}})}}();function Fa(a,b,c){var d,e,f,g,h=a.style;return c=c||Ca(a),g=c?c.getPropertyValue(b)||c[b]:void 0,\"\"!==g&&void 0!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),c&&!l.pixelMarginRight()&&Ba.test(g)&&Aa.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f),void 0!==g?g+\"\":g}function Ga(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}var Ha=/^(none|table(?!-c[ea]).+)/,Ia={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Ja={letterSpacing:\"0\",fontWeight:\"400\"},Ka=[\"Webkit\",\"O\",\"Moz\",\"ms\"],La=d.createElement(\"div\").style;function Ma(a){if(a in La)return a;var b=a[0].toUpperCase()+a.slice(1),c=Ka.length;while(c--)if(a=Ka[c]+b,a in La)return a}function Na(a,b,c){var d=T.exec(b);return d?Math.max(0,d[2]-(c||0))+(d[3]||\"px\"):b}function Oa(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+U[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+U[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+U[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+U[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+U[f]+\"Width\",!0,e)));return g}function Pa(a,b,c){var d=!0,e=\"width\"===b?a.offsetWidth:a.offsetHeight,f=Ca(a),g=\"border-box\"===n.css(a,\"boxSizing\",!1,f);if(0>=e||null==e){if(e=Fa(a,b,f),(0>e||null==e)&&(e=a.style[b]),Ba.test(e))return e;d=g&&(l.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Oa(a,b,c||(g?\"border\":\"content\"),d,f)+\"px\"}function Qa(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=N.get(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&V(d)&&(f[g]=N.access(d,\"olddisplay\",za(d.nodeName)))):(e=V(d),\"none\"===c&&e||N.set(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Fa(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Ma(h)||h),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\"string\"===f&&(e=T.exec(c))&&e[1]&&(c=W(a,b,e),f=\"number\"),null!=c&&c===c&&(\"number\"===f&&(c+=e&&e[3]||(n.cssNumber[h]?\"\":\"px\")),l.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Ma(h)||h),g=n.cssHooks[b]||n.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=Fa(a,b,d)),\"normal\"===e&&b in Ja&&(e=Ja[b]),\"\"===c||c?(f=parseFloat(e),c===!0||isFinite(f)?f||0:e):e}}),n.each([\"height\",\"width\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?Ha.test(n.css(a,\"display\"))&&0===a.offsetWidth?Da(a,Ia,function(){return Pa(a,b,d)}):Pa(a,b,d):void 0},set:function(a,c,d){var e,f=d&&Ca(a),g=d&&Oa(a,b,d,\"border-box\"===n.css(a,\"boxSizing\",!1,f),f);return g&&(e=T.exec(c))&&\"px\"!==(e[3]||\"px\")&&(a.style[b]=c,c=n.css(a,b)),Na(a,c,g)}}}),n.cssHooks.marginLeft=Ga(l.reliableMarginLeft,function(a,b){return b?(parseFloat(Fa(a,\"marginLeft\"))||a.getBoundingClientRect().left-Da(a,{marginLeft:0},function(){return a.getBoundingClientRect().left}))+\"px\":void 0}),n.cssHooks.marginRight=Ga(l.reliableMarginRight,function(a,b){return b?Da(a,{display:\"inline-block\"},Fa,[a,\"marginRight\"]):void 0}),n.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];4>d;d++)e[a+U[d]+b]=f[d]||f[d-2]||f[0];return e}},Aa.test(a)||(n.cssHooks[a+b].set=Na)}),n.fn.extend({css:function(a,b){return K(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=Ca(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Qa(this,!0)},hide:function(){return Qa(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){V(this)?n(this).show():n(this).hide()})}});function Ra(a,b,c,d,e){return new Ra.prototype.init(a,b,c,d,e)}n.Tween=Ra,Ra.prototype={constructor:Ra,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||n.easing._default,this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\"\":\"px\")},cur:function(){var a=Ra.propHooks[this.prop];return a&&a.get?a.get(this):Ra.propHooks._default.get(this)},run:function(a){var b,c=Ra.propHooks[this.prop];return this.options.duration?this.pos=b=n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Ra.propHooks._default.set(this),this}},Ra.prototype.init.prototype=Ra.prototype,Ra.propHooks={_default:{get:function(a){var b;return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(b=n.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0)},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):1!==a.elem.nodeType||null==a.elem.style[n.cssProps[a.prop]]&&!n.cssHooks[a.prop]?a.elem[a.prop]=a.now:n.style(a.elem,a.prop,a.now+a.unit)}}},Ra.propHooks.scrollTop=Ra.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:\"swing\"},n.fx=Ra.prototype.init,n.fx.step={};var Sa,Ta,Ua=/^(?:toggle|show|hide)$/,Va=/queueHooks$/;function Wa(){return a.setTimeout(function(){Sa=void 0}),Sa=n.now()}function Xa(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=U[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function Ya(a,b,c){for(var d,e=(_a.tweeners[b]||[]).concat(_a.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Za(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&V(a),q=N.get(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?N.get(a,\"olddisplay\")||za(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Ua.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))\"inline\"===(\"none\"===j?za(a.nodeName):j)&&(o.display=j);else{q?\"hidden\"in q&&(p=q.hidden):q=N.access(a,\"fxshow\",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;N.remove(a,\"fxshow\");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ya(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}function $a(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function _a(a,b,c){var d,e,f=0,g=_a.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Sa||Wa(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:Sa||Wa(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for($a(k,j.opts.specialEasing);g>f;f++)if(d=_a.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,Ya,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(_a,{tweeners:{\"*\":[function(a,b){var c=this.createTween(a,b);return W(c.elem,a,T.exec(b),c),c}]},tweener:function(a,b){n.isFunction(a)?(b=a,a=[\"*\"]):a=a.match(G);for(var c,d=0,e=a.length;e>d;d++)c=a[d],_a.tweeners[c]=_a.tweeners[c]||[],_a.tweeners[c].unshift(b)},prefilters:[Za],prefilter:function(a,b){b?_a.prefilters.unshift(a):_a.prefilters.push(a)}}),n.speed=function(a,b,c){var d=a&&\"object\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\"number\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,null!=d.queue&&d.queue!==!0||(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(V).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=_a(this,n.extend({},a),f);(e||N.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=n.timers,g=N.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Va.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));!b&&c||n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=N.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(Xa(b,!0),a,d,e)}}),n.each({slideDown:Xa(\"show\"),slideUp:Xa(\"hide\"),slideToggle:Xa(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Sa=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),Sa=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Ta||(Ta=a.setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){a.clearInterval(Ta),Ta=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(b,c){return b=n.fx?n.fx.speeds[b]||b:b,c=c||\"fx\",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a=d.createElement(\"input\"),b=d.createElement(\"select\"),c=b.appendChild(d.createElement(\"option\"));a.type=\"checkbox\",l.checkOn=\"\"!==a.value,l.optSelected=c.selected,b.disabled=!0,l.optDisabled=!c.disabled,a=d.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",l.radioValue=\"t\"===a.value}();var ab,bb=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return K(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return\"undefined\"==typeof a.getAttribute?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),e=n.attrHooks[b]||(n.expr.match.bool.test(b)?ab:void 0)),void 0!==c?null===c?void n.removeAttr(a,b):e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+\"\"),c):e&&\"get\"in e&&null!==(d=e.get(a,b))?d:(d=n.find.attr(a,b),null==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!l.radioValue&&\"radio\"===b&&n.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(G);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)}}),ab={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=bb[b]||n.find.attr;bb[b]=function(a,b,d){var e,f;return d||(f=bb[b],bb[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,bb[b]=f),e}});var cb=/^(?:input|select|textarea|button)$/i,db=/^(?:a|area)$/i;n.fn.extend({prop:function(a,b){return K(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&n.isXMLDoc(a)||(b=n.propFix[b]||b,e=n.propHooks[b]),\r\nvoid 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=n.find.attr(a,\"tabindex\");return b?parseInt(b,10):cb.test(a.nodeName)||db.test(a.nodeName)&&a.href?0:-1}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}}),l.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),n.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){n.propFix[this.toLowerCase()]=this});var eb=/[\\t\\r\\n\\f]/g;function fb(a){return a.getAttribute&&a.getAttribute(\"class\")||\"\"}n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,fb(this)))});if(\"string\"==typeof a&&a){b=a.match(G)||[];while(c=this[i++])if(e=fb(c),d=1===c.nodeType&&(\" \"+e+\" \").replace(eb,\" \")){g=0;while(f=b[g++])d.indexOf(\" \"+f+\" \")<0&&(d+=f+\" \");h=n.trim(d),e!==h&&c.setAttribute(\"class\",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,fb(this)))});if(!arguments.length)return this.attr(\"class\",\"\");if(\"string\"==typeof a&&a){b=a.match(G)||[];while(c=this[i++])if(e=fb(c),d=1===c.nodeType&&(\" \"+e+\" \").replace(eb,\" \")){g=0;while(f=b[g++])while(d.indexOf(\" \"+f+\" \")>-1)d=d.replace(\" \"+f+\" \",\" \");h=n.trim(d),e!==h&&c.setAttribute(\"class\",h)}}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):n.isFunction(a)?this.each(function(c){n(this).toggleClass(a.call(this,c,fb(this),b),b)}):this.each(function(){var b,d,e,f;if(\"string\"===c){d=0,e=n(this),f=a.match(G)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&\"boolean\"!==c||(b=fb(this),b&&N.set(this,\"__className__\",b),this.setAttribute&&this.setAttribute(\"class\",b||a===!1?\"\":N.get(this,\"__className__\")||\"\"))})},hasClass:function(a){var b,c,d=0;b=\" \"+a+\" \";while(c=this[d++])if(1===c.nodeType&&(\" \"+fb(c)+\" \").replace(eb,\" \").indexOf(b)>-1)return!0;return!1}});var gb=/\\r/g,hb=/[\\x20\\t\\r\\n\\f]+/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\"\":a+\"\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(gb,\"\"):null==c?\"\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\"value\");return null!=b?b:n.trim(n.text(a)).replace(hb,\" \")}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\"select-one\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],(c.selected||i===e)&&(l.optDisabled?!c.disabled:null===c.getAttribute(\"disabled\"))&&(!c.parentNode.disabled||!n.nodeName(c.parentNode,\"optgroup\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(n.valHooks.option.get(d),f)>-1)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each([\"radio\",\"checkbox\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>-1:void 0}},l.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})});var ib=/^(?:focusinfocus|focusoutblur)$/;n.extend(n.event,{trigger:function(b,c,e,f){var g,h,i,j,l,m,o,p=[e||d],q=k.call(b,\"type\")?b.type:b,r=k.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(h=i=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!ib.test(q+n.event.triggered)&&(q.indexOf(\".\")>-1&&(r=q.split(\".\"),q=r.shift(),r.sort()),l=q.indexOf(\":\")<0&&\"on\"+q,b=b[n.expando]?b:new n.Event(q,\"object\"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=r.join(\".\"),b.rnamespace=b.namespace?new RegExp(\"(^|\\\\.)\"+r.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},f||!o.trigger||o.trigger.apply(e,c)!==!1)){if(!f&&!o.noBubble&&!n.isWindow(e)){for(j=o.delegateType||q,ib.test(j+q)||(h=h.parentNode);h;h=h.parentNode)p.push(h),i=h;i===(e.ownerDocument||d)&&p.push(i.defaultView||i.parentWindow||a)}g=0;while((h=p[g++])&&!b.isPropagationStopped())b.type=g>1?j:o.bindType||q,m=(N.get(h,\"events\")||{})[b.type]&&N.get(h,\"handle\"),m&&m.apply(h,c),m=l&&h[l],m&&m.apply&&L(h)&&(b.result=m.apply(h,c),b.result===!1&&b.preventDefault());return b.type=q,f||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!L(e)||l&&n.isFunction(e[q])&&!n.isWindow(e)&&(i=e[l],i&&(e[l]=null),n.event.triggered=q,e[q](),n.event.triggered=void 0,i&&(e[l]=i)),b.result}},simulate:function(a,b,c){var d=n.extend(new n.Event,c,{type:a,isSimulated:!0});n.event.trigger(d,null,b)}}),n.fn.extend({trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}}),n.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),l.focusin=\"onfocusin\"in a,l.focusin||n.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a))};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=N.access(d,b);e||d.addEventListener(a,c,!0),N.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=N.access(d,b)-1;e?N.access(d,b,e):(d.removeEventListener(a,c,!0),N.remove(d,b))}}});var jb=a.location,kb=n.now(),lb=/\\?/;n.parseJSON=function(a){return JSON.parse(a+\"\")},n.parseXML=function(b){var c;if(!b||\"string\"!=typeof b)return null;try{c=(new a.DOMParser).parseFromString(b,\"text/xml\")}catch(d){c=void 0}return c&&!c.getElementsByTagName(\"parsererror\").length||n.error(\"Invalid XML: \"+b),c};var mb=/#.*$/,nb=/([?&])_=[^&]*/,ob=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,pb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,qb=/^(?:GET|HEAD)$/,rb=/^\\/\\//,sb={},tb={},ub=\"*/\".concat(\"*\"),vb=d.createElement(\"a\");vb.href=jb.href;function wb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function xb(a,b,c,d){var e={},f=a===tb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function yb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function zb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function Ab(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:jb.href,type:\"GET\",isLocal:pb.test(jb.protocol),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":ub,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/\\bxml\\b/,html:/\\bhtml/,json:/\\bjson\\b/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":n.parseJSON,\"text xml\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?yb(yb(a,n.ajaxSettings),b):yb(n.ajaxSettings,a)},ajaxPrefilter:wb(sb),ajaxTransport:wb(tb),ajax:function(b,c){\"object\"==typeof b&&(c=b,b=void 0),c=c||{};var e,f,g,h,i,j,k,l,m=n.ajaxSetup({},c),o=m.context||m,p=m.context&&(o.nodeType||o.jquery)?n(o):n.event,q=n.Deferred(),r=n.Callbacks(\"once memory\"),s=m.statusCode||{},t={},u={},v=0,w=\"canceled\",x={readyState:0,getResponseHeader:function(a){var b;if(2===v){if(!h){h={};while(b=ob.exec(g))h[b[1].toLowerCase()]=b[2]}b=h[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===v?g:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return v||(a=u[c]=u[c]||a,t[a]=b),this},overrideMimeType:function(a){return v||(m.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>v)for(b in a)s[b]=[s[b],a[b]];else x.always(a[x.status]);return this},abort:function(a){var b=a||w;return e&&e.abort(b),z(0,b),this}};if(q.promise(x).complete=r.add,x.success=x.done,x.error=x.fail,m.url=((b||m.url||jb.href)+\"\").replace(mb,\"\").replace(rb,jb.protocol+\"//\"),m.type=c.method||c.type||m.method||m.type,m.dataTypes=n.trim(m.dataType||\"*\").toLowerCase().match(G)||[\"\"],null==m.crossDomain){j=d.createElement(\"a\");try{j.href=m.url,j.href=j.href,m.crossDomain=vb.protocol+\"//\"+vb.host!=j.protocol+\"//\"+j.host}catch(y){m.crossDomain=!0}}if(m.data&&m.processData&&\"string\"!=typeof m.data&&(m.data=n.param(m.data,m.traditional)),xb(sb,m,c,x),2===v)return x;k=n.event&&m.global,k&&0===n.active++&&n.event.trigger(\"ajaxStart\"),m.type=m.type.toUpperCase(),m.hasContent=!qb.test(m.type),f=m.url,m.hasContent||(m.data&&(f=m.url+=(lb.test(f)?\"&\":\"?\")+m.data,delete m.data),m.cache===!1&&(m.url=nb.test(f)?f.replace(nb,\"$1_=\"+kb++):f+(lb.test(f)?\"&\":\"?\")+\"_=\"+kb++)),m.ifModified&&(n.lastModified[f]&&x.setRequestHeader(\"If-Modified-Since\",n.lastModified[f]),n.etag[f]&&x.setRequestHeader(\"If-None-Match\",n.etag[f])),(m.data&&m.hasContent&&m.contentType!==!1||c.contentType)&&x.setRequestHeader(\"Content-Type\",m.contentType),x.setRequestHeader(\"Accept\",m.dataTypes[0]&&m.accepts[m.dataTypes[0]]?m.accepts[m.dataTypes[0]]+(\"*\"!==m.dataTypes[0]?\", \"+ub+\"; q=0.01\":\"\"):m.accepts[\"*\"]);for(l in m.headers)x.setRequestHeader(l,m.headers[l]);if(m.beforeSend&&(m.beforeSend.call(o,x,m)===!1||2===v))return x.abort();w=\"abort\";for(l in{success:1,error:1,complete:1})x[l](m[l]);if(e=xb(tb,m,c,x)){if(x.readyState=1,k&&p.trigger(\"ajaxSend\",[x,m]),2===v)return x;m.async&&m.timeout>0&&(i=a.setTimeout(function(){x.abort(\"timeout\")},m.timeout));try{v=1,e.send(t,z)}catch(y){if(!(2>v))throw y;z(-1,y)}}else z(-1,\"No Transport\");function z(b,c,d,h){var j,l,t,u,w,y=c;2!==v&&(v=2,i&&a.clearTimeout(i),e=void 0,g=h||\"\",x.readyState=b>0?4:0,j=b>=200&&300>b||304===b,d&&(u=zb(m,x,d)),u=Ab(m,u,x,j),j?(m.ifModified&&(w=x.getResponseHeader(\"Last-Modified\"),w&&(n.lastModified[f]=w),w=x.getResponseHeader(\"etag\"),w&&(n.etag[f]=w)),204===b||\"HEAD\"===m.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=u.state,l=u.data,t=u.error,j=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),x.status=b,x.statusText=(c||y)+\"\",j?q.resolveWith(o,[l,y,x]):q.rejectWith(o,[x,y,t]),x.statusCode(s),s=void 0,k&&p.trigger(j?\"ajaxSuccess\":\"ajaxError\",[x,m,j?l:t]),r.fireWith(o,[x,y]),k&&(p.trigger(\"ajaxComplete\",[x,m]),--n.active||n.event.trigger(\"ajaxStop\")))}return x},getJSON:function(a,b,c){return n.get(a,b,c,\"json\")},getScript:function(a,b){return n.get(a,void 0,b,\"script\")}}),n.each([\"get\",\"post\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax(n.extend({url:a,type:b,dataType:e,data:c,success:d},n.isPlainObject(a)&&a))}}),n._evalUrl=function(a){return n.ajax({url:a,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return n.isFunction(a)?this.each(function(b){n(this).wrapInner(a.call(this,b))}):this.each(function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\"body\")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return!n.expr.filters.visible(a)},n.expr.filters.visible=function(a){return a.offsetWidth>0||a.offsetHeight>0||a.getClientRects().length>0};var Bb=/%20/g,Cb=/\\[\\]$/,Db=/\\r?\\n/g,Eb=/^(?:submit|button|image|reset|file)$/i,Fb=/^(?:input|select|textarea|keygen)/i;function Gb(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||Cb.test(a)?d(a,e):Gb(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)Gb(a+\"[\"+e+\"]\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Gb(c,a[c],b,e);return d.join(\"&\").replace(Bb,\"+\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\"elements\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\":disabled\")&&Fb.test(this.nodeName)&&!Eb.test(a)&&(this.checked||!X.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(Db,\"\\r\\n\")}}):{name:b.name,value:c.replace(Db,\"\\r\\n\")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new a.XMLHttpRequest}catch(b){}};var Hb={0:200,1223:204},Ib=n.ajaxSettings.xhr();l.cors=!!Ib&&\"withCredentials\"in Ib,l.ajax=Ib=!!Ib,n.ajaxTransport(function(b){var c,d;return l.cors||Ib&&!b.crossDomain?{send:function(e,f){var g,h=b.xhr();if(h.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(g in b.xhrFields)h[g]=b.xhrFields[g];b.mimeType&&h.overrideMimeType&&h.overrideMimeType(b.mimeType),b.crossDomain||e[\"X-Requested-With\"]||(e[\"X-Requested-With\"]=\"XMLHttpRequest\");for(g in e)h.setRequestHeader(g,e[g]);c=function(a){return function(){c&&(c=d=h.onload=h.onerror=h.onabort=h.onreadystatechange=null,\"abort\"===a?h.abort():\"error\"===a?\"number\"!=typeof h.status?f(0,\"error\"):f(h.status,h.statusText):f(Hb[h.status]||h.status,h.statusText,\"text\"!==(h.responseType||\"text\")||\"string\"!=typeof h.responseText?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}},h.onload=c(),d=h.onerror=c(\"error\"),void 0!==h.onabort?h.onabort=d:h.onreadystatechange=function(){4===h.readyState&&a.setTimeout(function(){c&&d()})},c=c(\"abort\");try{h.send(b.hasContent&&b.data||null)}catch(i){if(c)throw i}},abort:function(){c&&c()}}:void 0}),n.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/\\b(?:java|ecma)script\\b/},converters:{\"text script\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),n.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(e,f){b=n(\"<script>\").prop({charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&f(\"error\"===a.type?404:200,a.type)}),d.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Jb=[],Kb=/(=)\\?(?=&|$)|\\?\\?/;n.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Jb.pop()||n.expando+\"_\"+kb++;return this[a]=!0,a}}),n.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Kb.test(b.url)?\"url\":\"string\"==typeof b.data&&0===(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Kb.test(b.data)&&\"data\");return h||\"jsonp\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Kb,\"$1\"+e):b.jsonp!==!1&&(b.url+=(lb.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||n.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?n(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Jb.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\"string\"!=typeof a)return null;\"boolean\"==typeof b&&(c=b,b=!1),b=b||d;var e=x.exec(a),f=!c&&[];return e?[b.createElement(e[1])]:(e=ca([a],b,f),f&&f.length&&n(f).remove(),n.merge([],e.childNodes))};var Lb=n.fn.load;n.fn.load=function(a,b,c){if(\"string\"!=typeof a&&Lb)return Lb.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\" \");return h>-1&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&n.ajax({url:a,type:e||\"GET\",dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?n(\"<div>\").append(n.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},n.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};function Mb(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\"position\"),l=n(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=n.css(a,\"top\"),i=n.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,n.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(e=d.getBoundingClientRect(),c=Mb(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===n.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\"html\")||(d=a.offset()),d.top+=n.css(a[0],\"borderTopWidth\",!0),d.left+=n.css(a[0],\"borderLeftWidth\",!0)),{top:b.top-d.top-n.css(c,\"marginTop\",!0),left:b.left-d.left-n.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&\"static\"===n.css(a,\"position\"))a=a.offsetParent;return a||Ea})}}),n.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(a,b){var c=\"pageYOffset\"===b;n.fn[a]=function(d){return K(this,function(a,d,e){var f=Mb(a);return void 0===e?f?f[b]:a[d]:void(f?f.scrollTo(c?f.pageXOffset:e,c?e:f.pageYOffset):a[d]=e)},a,d,arguments.length)}}),n.each([\"top\",\"left\"],function(a,b){n.cssHooks[b]=Ga(l.pixelPosition,function(a,c){return c?(c=Fa(a,b),Ba.test(c)?n(a).position()[b]+\"px\":c):void 0})}),n.each({Height:\"height\",Width:\"width\"},function(a,b){n.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\"boolean\"!=typeof d),g=c||(d===!0||e===!0?\"margin\":\"border\");return K(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\"client\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\"scroll\"+a],e[\"scroll\"+a],b.body[\"offset\"+a],e[\"offset\"+a],e[\"client\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)},size:function(){return this.length}}),n.fn.andSelf=n.fn.addBack,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return n});var Nb=a.jQuery,Ob=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Ob),b&&a.jQuery===n&&(a.jQuery=Nb),n},b||(a.jQuery=a.$=n),n});","/*!\r\n * Chart.js\r\n * http://chartjs.org/\r\n * Version: 2.6.0\r\n *\r\n * Copyright 2017 Nick Downie\r\n * Released under the MIT license\r\n * https://github.com/chartjs/Chart.js/blob/master/LICENSE.md\r\n */\r\n(function(f) { if (typeof exports === \"object\" && typeof module !== \"undefined\") { module.exports = f() } else if (typeof define === \"function\" && define.amd) { define([], f) } else { var g; if (typeof window !== \"undefined\") { g = window } else if (typeof global !== \"undefined\") { g = global } else if (typeof self !== \"undefined\") { g = self } else { g = this }\r\n        g.Chart = f() } })(function() {\r\n    var define, module, exports;\r\n    return (function e(t, n, r) {\r\n        function s(o, u) { if (!n[o]) { if (!t[o]) { var a = typeof require == \"function\" && require; if (!u && a) return a(o, !0); if (i) return i(o, !0); var f = new Error(\"Cannot find module '\" + o + \"'\"); throw f.code = \"MODULE_NOT_FOUND\", f } var l = n[o] = { exports: {} };\r\n                t[o][0].call(l.exports, function(e) { var n = t[o][1][e]; return s(n ? n : e) }, l, l.exports, e, t, n, r) } return n[o].exports } var i = typeof require == \"function\" && require; for (var o = 0; o < r.length; o++) s(r[o]); return s })({\r\n        1: [function(require, module, exports) {\r\n\r\n        }, {}],\r\n        2: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var colorNames = require(6);\r\n\r\n            module.exports = {\r\n                getRgba: getRgba,\r\n                getHsla: getHsla,\r\n                getRgb: getRgb,\r\n                getHsl: getHsl,\r\n                getHwb: getHwb,\r\n                getAlpha: getAlpha,\r\n\r\n                hexString: hexString,\r\n                rgbString: rgbString,\r\n                rgbaString: rgbaString,\r\n                percentString: percentString,\r\n                percentaString: percentaString,\r\n                hslString: hslString,\r\n                hslaString: hslaString,\r\n                hwbString: hwbString,\r\n                keyword: keyword\r\n            }\r\n\r\n            function getRgba(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var abbr = /^#([a-fA-F0-9]{3})$/,\r\n                    hex = /^#([a-fA-F0-9]{6})$/,\r\n                    rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n                    per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/,\r\n                    keyword = /(\\w+)/;\r\n\r\n                var rgb = [0, 0, 0],\r\n                    a = 1,\r\n                    match = string.match(abbr);\r\n                if (match) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i] + match[i], 16);\r\n                    }\r\n                } else if (match = string.match(hex)) {\r\n                    match = match[1];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\r\n                    }\r\n                } else if (match = string.match(rgba)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = parseInt(match[i + 1]);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                } else if (match = string.match(per)) {\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\r\n                    }\r\n                    a = parseFloat(match[4]);\r\n                } else if (match = string.match(keyword)) {\r\n                    if (match[1] == \"transparent\") {\r\n                        return [0, 0, 0, 0];\r\n                    }\r\n                    rgb = colorNames[match[1]];\r\n                    if (!rgb) {\r\n                        return;\r\n                    }\r\n                }\r\n\r\n                for (var i = 0; i < rgb.length; i++) {\r\n                    rgb[i] = scale(rgb[i], 0, 255);\r\n                }\r\n                if (!a && a != 0) {\r\n                    a = 1;\r\n                } else {\r\n                    a = scale(a, 0, 1);\r\n                }\r\n                rgb[3] = a;\r\n                return rgb;\r\n            }\r\n\r\n            function getHsla(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hsl);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        s = scale(parseFloat(match[2]), 0, 100),\r\n                        l = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, s, l, a];\r\n                }\r\n            }\r\n\r\n            function getHwb(string) {\r\n                if (!string) {\r\n                    return;\r\n                }\r\n                var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\r\n                var match = string.match(hwb);\r\n                if (match) {\r\n                    var alpha = parseFloat(match[4]);\r\n                    var h = scale(parseInt(match[1]), 0, 360),\r\n                        w = scale(parseFloat(match[2]), 0, 100),\r\n                        b = scale(parseFloat(match[3]), 0, 100),\r\n                        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\r\n                    return [h, w, b, a];\r\n                }\r\n            }\r\n\r\n            function getRgb(string) {\r\n                var rgba = getRgba(string);\r\n                return rgba && rgba.slice(0, 3);\r\n            }\r\n\r\n            function getHsl(string) {\r\n                var hsla = getHsla(string);\r\n                return hsla && hsla.slice(0, 3);\r\n            }\r\n\r\n            function getAlpha(string) {\r\n                var vals = getRgba(string);\r\n                if (vals) {\r\n                    return vals[3];\r\n                } else if (vals = getHsla(string)) {\r\n                    return vals[3];\r\n                } else if (vals = getHwb(string)) {\r\n                    return vals[3];\r\n                }\r\n            }\r\n\r\n            // generators\r\n            function hexString(rgb) {\r\n                return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) +\r\n                    hexDouble(rgb[2]);\r\n            }\r\n\r\n            function rgbString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return rgbaString(rgba, alpha);\r\n                }\r\n                return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\r\n            }\r\n\r\n            function rgbaString(rgba, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (rgba[3] !== undefined ? rgba[3] : 1);\r\n                }\r\n                return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] +\r\n                    \", \" + alpha + \")\";\r\n            }\r\n\r\n            function percentString(rgba, alpha) {\r\n                if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\r\n                    return percentaString(rgba, alpha);\r\n                }\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n\r\n                return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\r\n            }\r\n\r\n            function percentaString(rgba, alpha) {\r\n                var r = Math.round(rgba[0] / 255 * 100),\r\n                    g = Math.round(rgba[1] / 255 * 100),\r\n                    b = Math.round(rgba[2] / 255 * 100);\r\n                return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\r\n            }\r\n\r\n            function hslString(hsla, alpha) {\r\n                if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\r\n                    return hslaString(hsla, alpha);\r\n                }\r\n                return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\r\n            }\r\n\r\n            function hslaString(hsla, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hsla[3] !== undefined ? hsla[3] : 1);\r\n                }\r\n                return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" +\r\n                    alpha + \")\";\r\n            }\r\n\r\n            // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\r\n            // (hwb have alpha optional & 1 is default value)\r\n            function hwbString(hwb, alpha) {\r\n                if (alpha === undefined) {\r\n                    alpha = (hwb[3] !== undefined ? hwb[3] : 1);\r\n                }\r\n                return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" +\r\n                    (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\r\n            }\r\n\r\n            function keyword(rgb) {\r\n                return reverseNames[rgb.slice(0, 3)];\r\n            }\r\n\r\n            // helpers\r\n            function scale(num, min, max) {\r\n                return Math.min(Math.max(min, num), max);\r\n            }\r\n\r\n            function hexDouble(num) {\r\n                var str = num.toString(16).toUpperCase();\r\n                return (str.length < 2) ? \"0\" + str : str;\r\n            }\r\n\r\n\r\n            //create a list of reverse color names\r\n            var reverseNames = {};\r\n            for (var name in colorNames) {\r\n                reverseNames[colorNames[name]] = name;\r\n            }\r\n\r\n        }, { \"6\": 6 }],\r\n        3: [function(require, module, exports) {\r\n            /* MIT license */\r\n            var convert = require(5);\r\n            var string = require(2);\r\n\r\n            var Color = function(obj) {\r\n                if (obj instanceof Color) {\r\n                    return obj;\r\n                }\r\n                if (!(this instanceof Color)) {\r\n                    return new Color(obj);\r\n                }\r\n\r\n                this.valid = false;\r\n                this.values = {\r\n                    rgb: [0, 0, 0],\r\n                    hsl: [0, 0, 0],\r\n                    hsv: [0, 0, 0],\r\n                    hwb: [0, 0, 0],\r\n                    cmyk: [0, 0, 0, 0],\r\n                    alpha: 1\r\n                };\r\n\r\n                // parse Color() argument\r\n                var vals;\r\n                if (typeof obj === 'string') {\r\n                    vals = string.getRgba(obj);\r\n                    if (vals) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals = string.getHsla(obj)) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals = string.getHwb(obj)) {\r\n                        this.setValues('hwb', vals);\r\n                    }\r\n                } else if (typeof obj === 'object') {\r\n                    vals = obj;\r\n                    if (vals.r !== undefined || vals.red !== undefined) {\r\n                        this.setValues('rgb', vals);\r\n                    } else if (vals.l !== undefined || vals.lightness !== undefined) {\r\n                        this.setValues('hsl', vals);\r\n                    } else if (vals.v !== undefined || vals.value !== undefined) {\r\n                        this.setValues('hsv', vals);\r\n                    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\r\n                        this.setValues('hwb', vals);\r\n                    } else if (vals.c !== undefined || vals.cyan !== undefined) {\r\n                        this.setValues('cmyk', vals);\r\n                    }\r\n                }\r\n            };\r\n\r\n            Color.prototype = {\r\n                isValid: function() {\r\n                    return this.valid;\r\n                },\r\n                rgb: function() {\r\n                    return this.setSpace('rgb', arguments);\r\n                },\r\n                hsl: function() {\r\n                    return this.setSpace('hsl', arguments);\r\n                },\r\n                hsv: function() {\r\n                    return this.setSpace('hsv', arguments);\r\n                },\r\n                hwb: function() {\r\n                    return this.setSpace('hwb', arguments);\r\n                },\r\n                cmyk: function() {\r\n                    return this.setSpace('cmyk', arguments);\r\n                },\r\n\r\n                rgbArray: function() {\r\n                    return this.values.rgb;\r\n                },\r\n                hslArray: function() {\r\n                    return this.values.hsl;\r\n                },\r\n                hsvArray: function() {\r\n                    return this.values.hsv;\r\n                },\r\n                hwbArray: function() {\r\n                    var values = this.values;\r\n                    if (values.alpha !== 1) {\r\n                        return values.hwb.concat([values.alpha]);\r\n                    }\r\n                    return values.hwb;\r\n                },\r\n                cmykArray: function() {\r\n                    return this.values.cmyk;\r\n                },\r\n                rgbaArray: function() {\r\n                    var values = this.values;\r\n                    return values.rgb.concat([values.alpha]);\r\n                },\r\n                hslaArray: function() {\r\n                    var values = this.values;\r\n                    return values.hsl.concat([values.alpha]);\r\n                },\r\n                alpha: function(val) {\r\n                    if (val === undefined) {\r\n                        return this.values.alpha;\r\n                    }\r\n                    this.setValues('alpha', val);\r\n                    return this;\r\n                },\r\n\r\n                red: function(val) {\r\n                    return this.setChannel('rgb', 0, val);\r\n                },\r\n                green: function(val) {\r\n                    return this.setChannel('rgb', 1, val);\r\n                },\r\n                blue: function(val) {\r\n                    return this.setChannel('rgb', 2, val);\r\n                },\r\n                hue: function(val) {\r\n                    if (val) {\r\n                        val %= 360;\r\n                        val = val < 0 ? 360 + val : val;\r\n                    }\r\n                    return this.setChannel('hsl', 0, val);\r\n                },\r\n                saturation: function(val) {\r\n                    return this.setChannel('hsl', 1, val);\r\n                },\r\n                lightness: function(val) {\r\n                    return this.setChannel('hsl', 2, val);\r\n                },\r\n                saturationv: function(val) {\r\n                    return this.setChannel('hsv', 1, val);\r\n                },\r\n                whiteness: function(val) {\r\n                    return this.setChannel('hwb', 1, val);\r\n                },\r\n                blackness: function(val) {\r\n                    return this.setChannel('hwb', 2, val);\r\n                },\r\n                value: function(val) {\r\n                    return this.setChannel('hsv', 2, val);\r\n                },\r\n                cyan: function(val) {\r\n                    return this.setChannel('cmyk', 0, val);\r\n                },\r\n                magenta: function(val) {\r\n                    return this.setChannel('cmyk', 1, val);\r\n                },\r\n                yellow: function(val) {\r\n                    return this.setChannel('cmyk', 2, val);\r\n                },\r\n                black: function(val) {\r\n                    return this.setChannel('cmyk', 3, val);\r\n                },\r\n\r\n                hexString: function() {\r\n                    return string.hexString(this.values.rgb);\r\n                },\r\n                rgbString: function() {\r\n                    return string.rgbString(this.values.rgb, this.values.alpha);\r\n                },\r\n                rgbaString: function() {\r\n                    return string.rgbaString(this.values.rgb, this.values.alpha);\r\n                },\r\n                percentString: function() {\r\n                    return string.percentString(this.values.rgb, this.values.alpha);\r\n                },\r\n                hslString: function() {\r\n                    return string.hslString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hslaString: function() {\r\n                    return string.hslaString(this.values.hsl, this.values.alpha);\r\n                },\r\n                hwbString: function() {\r\n                    return string.hwbString(this.values.hwb, this.values.alpha);\r\n                },\r\n                keyword: function() {\r\n                    return string.keyword(this.values.rgb, this.values.alpha);\r\n                },\r\n\r\n                rgbNumber: function() {\r\n                    var rgb = this.values.rgb;\r\n                    return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\r\n                },\r\n\r\n                luminosity: function() {\r\n                    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\r\n                    var rgb = this.values.rgb;\r\n                    var lum = [];\r\n                    for (var i = 0; i < rgb.length; i++) {\r\n                        var chan = rgb[i] / 255;\r\n                        lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\r\n                    }\r\n                    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\r\n                },\r\n\r\n                contrast: function(color2) {\r\n                    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\r\n                    var lum1 = this.luminosity();\r\n                    var lum2 = color2.luminosity();\r\n                    if (lum1 > lum2) {\r\n                        return (lum1 + 0.05) / (lum2 + 0.05);\r\n                    }\r\n                    return (lum2 + 0.05) / (lum1 + 0.05);\r\n                },\r\n\r\n                level: function(color2) {\r\n                    var contrastRatio = this.contrast(color2);\r\n                    if (contrastRatio >= 7.1) {\r\n                        return 'AAA';\r\n                    }\r\n\r\n                    return (contrastRatio >= 4.5) ? 'AA' : '';\r\n                },\r\n\r\n                dark: function() {\r\n                    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\r\n                    var rgb = this.values.rgb;\r\n                    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\r\n                    return yiq < 128;\r\n                },\r\n\r\n                light: function() {\r\n                    return !this.dark();\r\n                },\r\n\r\n                negate: function() {\r\n                    var rgb = [];\r\n                    for (var i = 0; i < 3; i++) {\r\n                        rgb[i] = 255 - this.values.rgb[i];\r\n                    }\r\n                    this.setValues('rgb', rgb);\r\n                    return this;\r\n                },\r\n\r\n                lighten: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] += hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                darken: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[2] -= hsl[2] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                saturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] += hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                desaturate: function(ratio) {\r\n                    var hsl = this.values.hsl;\r\n                    hsl[1] -= hsl[1] * ratio;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                whiten: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[1] += hwb[1] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                blacken: function(ratio) {\r\n                    var hwb = this.values.hwb;\r\n                    hwb[2] += hwb[2] * ratio;\r\n                    this.setValues('hwb', hwb);\r\n                    return this;\r\n                },\r\n\r\n                greyscale: function() {\r\n                    var rgb = this.values.rgb;\r\n                    // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\r\n                    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\r\n                    this.setValues('rgb', [val, val, val]);\r\n                    return this;\r\n                },\r\n\r\n                clearer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha - (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                opaquer: function(ratio) {\r\n                    var alpha = this.values.alpha;\r\n                    this.setValues('alpha', alpha + (alpha * ratio));\r\n                    return this;\r\n                },\r\n\r\n                rotate: function(degrees) {\r\n                    var hsl = this.values.hsl;\r\n                    var hue = (hsl[0] + degrees) % 360;\r\n                    hsl[0] = hue < 0 ? 360 + hue : hue;\r\n                    this.setValues('hsl', hsl);\r\n                    return this;\r\n                },\r\n\r\n                /**\r\n                 * Ported from sass implementation in C\r\n                 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\r\n                 */\r\n                mix: function(mixinColor, weight) {\r\n                    var color1 = this;\r\n                    var color2 = mixinColor;\r\n                    var p = weight === undefined ? 0.5 : weight;\r\n\r\n                    var w = 2 * p - 1;\r\n                    var a = color1.alpha() - color2.alpha();\r\n\r\n                    var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\r\n                    var w2 = 1 - w1;\r\n\r\n                    return this\r\n                        .rgb(\r\n                            w1 * color1.red() + w2 * color2.red(),\r\n                            w1 * color1.green() + w2 * color2.green(),\r\n                            w1 * color1.blue() + w2 * color2.blue()\r\n                        )\r\n                        .alpha(color1.alpha() * p + color2.alpha() * (1 - p));\r\n                },\r\n\r\n                toJSON: function() {\r\n                    return this.rgb();\r\n                },\r\n\r\n                clone: function() {\r\n                    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\r\n                    // making the final build way to big to embed in Chart.js. So let's do it manually,\r\n                    // assuming that values to clone are 1 dimension arrays containing only numbers,\r\n                    // except 'alpha' which is a number.\r\n                    var result = new Color();\r\n                    var source = this.values;\r\n                    var target = result.values;\r\n                    var value, type;\r\n\r\n                    for (var prop in source) {\r\n                        if (source.hasOwnProperty(prop)) {\r\n                            value = source[prop];\r\n                            type = ({}).toString.call(value);\r\n                            if (type === '[object Array]') {\r\n                                target[prop] = value.slice(0);\r\n                            } else if (type === '[object Number]') {\r\n                                target[prop] = value;\r\n                            } else {\r\n                                console.error('unexpected color value:', value);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n            };\r\n\r\n            Color.prototype.spaces = {\r\n                rgb: ['red', 'green', 'blue'],\r\n                hsl: ['hue', 'saturation', 'lightness'],\r\n                hsv: ['hue', 'saturation', 'value'],\r\n                hwb: ['hue', 'whiteness', 'blackness'],\r\n                cmyk: ['cyan', 'magenta', 'yellow', 'black']\r\n            };\r\n\r\n            Color.prototype.maxes = {\r\n                rgb: [255, 255, 255],\r\n                hsl: [360, 100, 100],\r\n                hsv: [360, 100, 100],\r\n                hwb: [360, 100, 100],\r\n                cmyk: [100, 100, 100, 100]\r\n            };\r\n\r\n            Color.prototype.getValues = function(space) {\r\n                var values = this.values;\r\n                var vals = {};\r\n\r\n                for (var i = 0; i < space.length; i++) {\r\n                    vals[space.charAt(i)] = values[space][i];\r\n                }\r\n\r\n                if (values.alpha !== 1) {\r\n                    vals.a = values.alpha;\r\n                }\r\n\r\n                // {r: 255, g: 255, b: 255, a: 0.4}\r\n                return vals;\r\n            };\r\n\r\n            Color.prototype.setValues = function(space, vals) {\r\n                var values = this.values;\r\n                var spaces = this.spaces;\r\n                var maxes = this.maxes;\r\n                var alpha = 1;\r\n                var i;\r\n\r\n                this.valid = true;\r\n\r\n                if (space === 'alpha') {\r\n                    alpha = vals;\r\n                } else if (vals.length) {\r\n                    // [10, 10, 10]\r\n                    values[space] = vals.slice(0, space.length);\r\n                    alpha = vals[space.length];\r\n                } else if (vals[space.charAt(0)] !== undefined) {\r\n                    // {r: 10, g: 10, b: 10}\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[space.charAt(i)];\r\n                    }\r\n\r\n                    alpha = vals.a;\r\n                } else if (vals[spaces[space][0]] !== undefined) {\r\n                    // {red: 10, green: 10, blue: 10}\r\n                    var chans = spaces[space];\r\n\r\n                    for (i = 0; i < space.length; i++) {\r\n                        values[space][i] = vals[chans[i]];\r\n                    }\r\n\r\n                    alpha = vals.alpha;\r\n                }\r\n\r\n                values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\r\n\r\n                if (space === 'alpha') {\r\n                    return false;\r\n                }\r\n\r\n                var capped;\r\n\r\n                // cap values of the space prior converting all values\r\n                for (i = 0; i < space.length; i++) {\r\n                    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\r\n                    values[space][i] = Math.round(capped);\r\n                }\r\n\r\n                // convert to all the other color spaces\r\n                for (var sname in spaces) {\r\n                    if (sname !== space) {\r\n                        values[sname] = convert[space][sname](values[space]);\r\n                    }\r\n                }\r\n\r\n                return true;\r\n            };\r\n\r\n            Color.prototype.setSpace = function(space, args) {\r\n                var vals = args[0];\r\n\r\n                if (vals === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof vals === 'number') {\r\n                    vals = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                this.setValues(space, vals);\r\n                return this;\r\n            };\r\n\r\n            Color.prototype.setChannel = function(space, index, val) {\r\n                var svalues = this.values[space];\r\n                if (val === undefined) {\r\n                    // color.red()\r\n                    return svalues[index];\r\n                } else if (val === svalues[index]) {\r\n                    // color.red(color.red())\r\n                    return this;\r\n                }\r\n\r\n                // color.red(100)\r\n                svalues[index] = val;\r\n                this.setValues(space, svalues);\r\n\r\n                return this;\r\n            };\r\n\r\n            if (typeof window !== 'undefined') {\r\n                window.Color = Color;\r\n            }\r\n\r\n            module.exports = Color;\r\n\r\n        }, { \"2\": 2, \"5\": 5 }],\r\n        4: [function(require, module, exports) {\r\n            /* MIT license */\r\n\r\n            module.exports = {\r\n                rgb2hsl: rgb2hsl,\r\n                rgb2hsv: rgb2hsv,\r\n                rgb2hwb: rgb2hwb,\r\n                rgb2cmyk: rgb2cmyk,\r\n                rgb2keyword: rgb2keyword,\r\n                rgb2xyz: rgb2xyz,\r\n                rgb2lab: rgb2lab,\r\n                rgb2lch: rgb2lch,\r\n\r\n                hsl2rgb: hsl2rgb,\r\n                hsl2hsv: hsl2hsv,\r\n                hsl2hwb: hsl2hwb,\r\n                hsl2cmyk: hsl2cmyk,\r\n                hsl2keyword: hsl2keyword,\r\n\r\n                hsv2rgb: hsv2rgb,\r\n                hsv2hsl: hsv2hsl,\r\n                hsv2hwb: hsv2hwb,\r\n                hsv2cmyk: hsv2cmyk,\r\n                hsv2keyword: hsv2keyword,\r\n\r\n                hwb2rgb: hwb2rgb,\r\n                hwb2hsl: hwb2hsl,\r\n                hwb2hsv: hwb2hsv,\r\n                hwb2cmyk: hwb2cmyk,\r\n                hwb2keyword: hwb2keyword,\r\n\r\n                cmyk2rgb: cmyk2rgb,\r\n                cmyk2hsl: cmyk2hsl,\r\n                cmyk2hsv: cmyk2hsv,\r\n                cmyk2hwb: cmyk2hwb,\r\n                cmyk2keyword: cmyk2keyword,\r\n\r\n                keyword2rgb: keyword2rgb,\r\n                keyword2hsl: keyword2hsl,\r\n                keyword2hsv: keyword2hsv,\r\n                keyword2hwb: keyword2hwb,\r\n                keyword2cmyk: keyword2cmyk,\r\n                keyword2lab: keyword2lab,\r\n                keyword2xyz: keyword2xyz,\r\n\r\n                xyz2rgb: xyz2rgb,\r\n                xyz2lab: xyz2lab,\r\n                xyz2lch: xyz2lch,\r\n\r\n                lab2xyz: lab2xyz,\r\n                lab2rgb: lab2rgb,\r\n                lab2lch: lab2lch,\r\n\r\n                lch2lab: lch2lab,\r\n                lch2xyz: lch2xyz,\r\n                lch2rgb: lch2rgb\r\n            }\r\n\r\n\r\n            function rgb2hsl(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, l;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                l = (min + max) / 2;\r\n\r\n                if (max == min)\r\n                    s = 0;\r\n                else if (l <= 0.5)\r\n                    s = delta / (max + min);\r\n                else\r\n                    s = delta / (2 - max - min);\r\n\r\n                return [h, s * 100, l * 100];\r\n            }\r\n\r\n            function rgb2hsv(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    min = Math.min(r, g, b),\r\n                    max = Math.max(r, g, b),\r\n                    delta = max - min,\r\n                    h, s, v;\r\n\r\n                if (max == 0)\r\n                    s = 0;\r\n                else\r\n                    s = (delta / max * 1000) / 10;\r\n\r\n                if (max == min)\r\n                    h = 0;\r\n                else if (r == max)\r\n                    h = (g - b) / delta;\r\n                else if (g == max)\r\n                    h = 2 + (b - r) / delta;\r\n                else if (b == max)\r\n                    h = 4 + (r - g) / delta;\r\n\r\n                h = Math.min(h * 60, 360);\r\n\r\n                if (h < 0)\r\n                    h += 360;\r\n\r\n                v = ((max / 255) * 1000) / 10;\r\n\r\n                return [h, s, v];\r\n            }\r\n\r\n            function rgb2hwb(rgb) {\r\n                var r = rgb[0],\r\n                    g = rgb[1],\r\n                    b = rgb[2],\r\n                    h = rgb2hsl(rgb)[0],\r\n                    w = 1 / 255 * Math.min(r, Math.min(g, b)),\r\n                    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\r\n\r\n                return [h, w * 100, b * 100];\r\n            }\r\n\r\n            function rgb2cmyk(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255,\r\n                    c, m, y, k;\r\n\r\n                k = Math.min(1 - r, 1 - g, 1 - b);\r\n                c = (1 - r - k) / (1 - k) || 0;\r\n                m = (1 - g - k) / (1 - k) || 0;\r\n                y = (1 - b - k) / (1 - k) || 0;\r\n                return [c * 100, m * 100, y * 100, k * 100];\r\n            }\r\n\r\n            function rgb2keyword(rgb) {\r\n                return reverseKeywords[JSON.stringify(rgb)];\r\n            }\r\n\r\n            function rgb2xyz(rgb) {\r\n                var r = rgb[0] / 255,\r\n                    g = rgb[1] / 255,\r\n                    b = rgb[2] / 255;\r\n\r\n                // assume sRGB\r\n                r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\r\n                g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\r\n                b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\r\n\r\n                var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\r\n                var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\r\n                var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\r\n\r\n                return [x * 100, y * 100, z * 100];\r\n            }\r\n\r\n            function rgb2lab(rgb) {\r\n                var xyz = rgb2xyz(rgb),\r\n                    x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function rgb2lch(args) {\r\n                return lab2lch(rgb2lab(args));\r\n            }\r\n\r\n            function hsl2rgb(hsl) {\r\n                var h = hsl[0] / 360,\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    t1, t2, t3, rgb, val;\r\n\r\n                if (s == 0) {\r\n                    val = l * 255;\r\n                    return [val, val, val];\r\n                }\r\n\r\n                if (l < 0.5)\r\n                    t2 = l * (1 + s);\r\n                else\r\n                    t2 = l + s - l * s;\r\n                t1 = 2 * l - t2;\r\n\r\n                rgb = [0, 0, 0];\r\n                for (var i = 0; i < 3; i++) {\r\n                    t3 = h + 1 / 3 * -(i - 1);\r\n                    t3 < 0 && t3++;\r\n                    t3 > 1 && t3--;\r\n\r\n                    if (6 * t3 < 1)\r\n                        val = t1 + (t2 - t1) * 6 * t3;\r\n                    else if (2 * t3 < 1)\r\n                        val = t2;\r\n                    else if (3 * t3 < 2)\r\n                        val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\r\n                    else\r\n                        val = t1;\r\n\r\n                    rgb[i] = val * 255;\r\n                }\r\n\r\n                return rgb;\r\n            }\r\n\r\n            function hsl2hsv(hsl) {\r\n                var h = hsl[0],\r\n                    s = hsl[1] / 100,\r\n                    l = hsl[2] / 100,\r\n                    sv, v;\r\n\r\n                if (l === 0) {\r\n                    // no need to do calc on black\r\n                    // also avoids divide by 0 error\r\n                    return [0, 0, 0];\r\n                }\r\n\r\n                l *= 2;\r\n                s *= (l <= 1) ? l : 2 - l;\r\n                v = (l + s) / 2;\r\n                sv = (2 * s) / (l + s);\r\n                return [h, sv * 100, v * 100];\r\n            }\r\n\r\n            function hsl2hwb(args) {\r\n                return rgb2hwb(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2cmyk(args) {\r\n                return rgb2cmyk(hsl2rgb(args));\r\n            }\r\n\r\n            function hsl2keyword(args) {\r\n                return rgb2keyword(hsl2rgb(args));\r\n            }\r\n\r\n\r\n            function hsv2rgb(hsv) {\r\n                var h = hsv[0] / 60,\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    hi = Math.floor(h) % 6;\r\n\r\n                var f = h - Math.floor(h),\r\n                    p = 255 * v * (1 - s),\r\n                    q = 255 * v * (1 - (s * f)),\r\n                    t = 255 * v * (1 - (s * (1 - f))),\r\n                    v = 255 * v;\r\n\r\n                switch (hi) {\r\n                    case 0:\r\n                        return [v, t, p];\r\n                    case 1:\r\n                        return [q, v, p];\r\n                    case 2:\r\n                        return [p, v, t];\r\n                    case 3:\r\n                        return [p, q, v];\r\n                    case 4:\r\n                        return [t, p, v];\r\n                    case 5:\r\n                        return [v, p, q];\r\n                }\r\n            }\r\n\r\n            function hsv2hsl(hsv) {\r\n                var h = hsv[0],\r\n                    s = hsv[1] / 100,\r\n                    v = hsv[2] / 100,\r\n                    sl, l;\r\n\r\n                l = (2 - s) * v;\r\n                sl = s * v;\r\n                sl /= (l <= 1) ? l : 2 - l;\r\n                sl = sl || 0;\r\n                l /= 2;\r\n                return [h, sl * 100, l * 100];\r\n            }\r\n\r\n            function hsv2hwb(args) {\r\n                return rgb2hwb(hsv2rgb(args))\r\n            }\r\n\r\n            function hsv2cmyk(args) {\r\n                return rgb2cmyk(hsv2rgb(args));\r\n            }\r\n\r\n            function hsv2keyword(args) {\r\n                return rgb2keyword(hsv2rgb(args));\r\n            }\r\n\r\n            // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\r\n            function hwb2rgb(hwb) {\r\n                var h = hwb[0] / 360,\r\n                    wh = hwb[1] / 100,\r\n                    bl = hwb[2] / 100,\r\n                    ratio = wh + bl,\r\n                    i, v, f, n;\r\n\r\n                // wh + bl cant be > 1\r\n                if (ratio > 1) {\r\n                    wh /= ratio;\r\n                    bl /= ratio;\r\n                }\r\n\r\n                i = Math.floor(6 * h);\r\n                v = 1 - bl;\r\n                f = 6 * h - i;\r\n                if ((i & 0x01) != 0) {\r\n                    f = 1 - f;\r\n                }\r\n                n = wh + f * (v - wh); // linear interpolation\r\n\r\n                switch (i) {\r\n                    default:\r\n                        case 6:\r\n                        case 0:\r\n                        r = v;g = n;b = wh;\r\n                    break;\r\n                    case 1:\r\n                            r = n;g = v;b = wh;\r\n                        break;\r\n                    case 2:\r\n                            r = wh;g = v;b = n;\r\n                        break;\r\n                    case 3:\r\n                            r = wh;g = n;b = v;\r\n                        break;\r\n                    case 4:\r\n                            r = n;g = wh;b = v;\r\n                        break;\r\n                    case 5:\r\n                            r = v;g = wh;b = n;\r\n                        break;\r\n                }\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function hwb2hsl(args) {\r\n                return rgb2hsl(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2hsv(args) {\r\n                return rgb2hsv(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2cmyk(args) {\r\n                return rgb2cmyk(hwb2rgb(args));\r\n            }\r\n\r\n            function hwb2keyword(args) {\r\n                return rgb2keyword(hwb2rgb(args));\r\n            }\r\n\r\n            function cmyk2rgb(cmyk) {\r\n                var c = cmyk[0] / 100,\r\n                    m = cmyk[1] / 100,\r\n                    y = cmyk[2] / 100,\r\n                    k = cmyk[3] / 100,\r\n                    r, g, b;\r\n\r\n                r = 1 - Math.min(1, c * (1 - k) + k);\r\n                g = 1 - Math.min(1, m * (1 - k) + k);\r\n                b = 1 - Math.min(1, y * (1 - k) + k);\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function cmyk2hsl(args) {\r\n                return rgb2hsl(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hsv(args) {\r\n                return rgb2hsv(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2hwb(args) {\r\n                return rgb2hwb(cmyk2rgb(args));\r\n            }\r\n\r\n            function cmyk2keyword(args) {\r\n                return rgb2keyword(cmyk2rgb(args));\r\n            }\r\n\r\n\r\n            function xyz2rgb(xyz) {\r\n                var x = xyz[0] / 100,\r\n                    y = xyz[1] / 100,\r\n                    z = xyz[2] / 100,\r\n                    r, g, b;\r\n\r\n                r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\r\n                g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\r\n                b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\r\n\r\n                // assume sRGB\r\n                r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055) :\r\n                    r = (r * 12.92);\r\n\r\n                g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055) :\r\n                    g = (g * 12.92);\r\n\r\n                b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055) :\r\n                    b = (b * 12.92);\r\n\r\n                r = Math.min(Math.max(0, r), 1);\r\n                g = Math.min(Math.max(0, g), 1);\r\n                b = Math.min(Math.max(0, b), 1);\r\n\r\n                return [r * 255, g * 255, b * 255];\r\n            }\r\n\r\n            function xyz2lab(xyz) {\r\n                var x = xyz[0],\r\n                    y = xyz[1],\r\n                    z = xyz[2],\r\n                    l, a, b;\r\n\r\n                x /= 95.047;\r\n                y /= 100;\r\n                z /= 108.883;\r\n\r\n                x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\r\n                y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\r\n                z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\r\n\r\n                l = (116 * y) - 16;\r\n                a = 500 * (x - y);\r\n                b = 200 * (y - z);\r\n\r\n                return [l, a, b];\r\n            }\r\n\r\n            function xyz2lch(args) {\r\n                return lab2lch(xyz2lab(args));\r\n            }\r\n\r\n            function lab2xyz(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    x, y, z, y2;\r\n\r\n                if (l <= 8) {\r\n                    y = (l * 100) / 903.3;\r\n                    y2 = (7.787 * (y / 100)) + (16 / 116);\r\n                } else {\r\n                    y = 100 * Math.pow((l + 16) / 116, 3);\r\n                    y2 = Math.pow(y / 100, 1 / 3);\r\n                }\r\n\r\n                x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\r\n\r\n                z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\r\n\r\n                return [x, y, z];\r\n            }\r\n\r\n            function lab2lch(lab) {\r\n                var l = lab[0],\r\n                    a = lab[1],\r\n                    b = lab[2],\r\n                    hr, h, c;\r\n\r\n                hr = Math.atan2(b, a);\r\n                h = hr * 360 / 2 / Math.PI;\r\n                if (h < 0) {\r\n                    h += 360;\r\n                }\r\n                c = Math.sqrt(a * a + b * b);\r\n                return [l, c, h];\r\n            }\r\n\r\n            function lab2rgb(args) {\r\n                return xyz2rgb(lab2xyz(args));\r\n            }\r\n\r\n            function lch2lab(lch) {\r\n                var l = lch[0],\r\n                    c = lch[1],\r\n                    h = lch[2],\r\n                    a, b, hr;\r\n\r\n                hr = h / 360 * 2 * Math.PI;\r\n                a = c * Math.cos(hr);\r\n                b = c * Math.sin(hr);\r\n                return [l, a, b];\r\n            }\r\n\r\n            function lch2xyz(args) {\r\n                return lab2xyz(lch2lab(args));\r\n            }\r\n\r\n            function lch2rgb(args) {\r\n                return lab2rgb(lch2lab(args));\r\n            }\r\n\r\n            function keyword2rgb(keyword) {\r\n                return cssKeywords[keyword];\r\n            }\r\n\r\n            function keyword2hsl(args) {\r\n                return rgb2hsl(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hsv(args) {\r\n                return rgb2hsv(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2hwb(args) {\r\n                return rgb2hwb(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2cmyk(args) {\r\n                return rgb2cmyk(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2lab(args) {\r\n                return rgb2lab(keyword2rgb(args));\r\n            }\r\n\r\n            function keyword2xyz(args) {\r\n                return rgb2xyz(keyword2rgb(args));\r\n            }\r\n\r\n            var cssKeywords = {\r\n                aliceblue: [240, 248, 255],\r\n                antiquewhite: [250, 235, 215],\r\n                aqua: [0, 255, 255],\r\n                aquamarine: [127, 255, 212],\r\n                azure: [240, 255, 255],\r\n                beige: [245, 245, 220],\r\n                bisque: [255, 228, 196],\r\n                black: [0, 0, 0],\r\n                blanchedalmond: [255, 235, 205],\r\n                blue: [0, 0, 255],\r\n                blueviolet: [138, 43, 226],\r\n                brown: [165, 42, 42],\r\n                burlywood: [222, 184, 135],\r\n                cadetblue: [95, 158, 160],\r\n                chartreuse: [127, 255, 0],\r\n                chocolate: [210, 105, 30],\r\n                coral: [255, 127, 80],\r\n                cornflowerblue: [100, 149, 237],\r\n                cornsilk: [255, 248, 220],\r\n                crimson: [220, 20, 60],\r\n                cyan: [0, 255, 255],\r\n                darkblue: [0, 0, 139],\r\n                darkcyan: [0, 139, 139],\r\n                darkgoldenrod: [184, 134, 11],\r\n                darkgray: [169, 169, 169],\r\n                darkgreen: [0, 100, 0],\r\n                darkgrey: [169, 169, 169],\r\n                darkkhaki: [189, 183, 107],\r\n                darkmagenta: [139, 0, 139],\r\n                darkolivegreen: [85, 107, 47],\r\n                darkorange: [255, 140, 0],\r\n                darkorchid: [153, 50, 204],\r\n                darkred: [139, 0, 0],\r\n                darksalmon: [233, 150, 122],\r\n                darkseagreen: [143, 188, 143],\r\n                darkslateblue: [72, 61, 139],\r\n                darkslategray: [47, 79, 79],\r\n                darkslategrey: [47, 79, 79],\r\n                darkturquoise: [0, 206, 209],\r\n                darkviolet: [148, 0, 211],\r\n                deeppink: [255, 20, 147],\r\n                deepskyblue: [0, 191, 255],\r\n                dimgray: [105, 105, 105],\r\n                dimgrey: [105, 105, 105],\r\n                dodgerblue: [30, 144, 255],\r\n                firebrick: [178, 34, 34],\r\n                floralwhite: [255, 250, 240],\r\n                forestgreen: [34, 139, 34],\r\n                fuchsia: [255, 0, 255],\r\n                gainsboro: [220, 220, 220],\r\n                ghostwhite: [248, 248, 255],\r\n                gold: [255, 215, 0],\r\n                goldenrod: [218, 165, 32],\r\n                gray: [128, 128, 128],\r\n                green: [0, 128, 0],\r\n                greenyellow: [173, 255, 47],\r\n                grey: [128, 128, 128],\r\n                honeydew: [240, 255, 240],\r\n                hotpink: [255, 105, 180],\r\n                indianred: [205, 92, 92],\r\n                indigo: [75, 0, 130],\r\n                ivory: [255, 255, 240],\r\n                khaki: [240, 230, 140],\r\n                lavender: [230, 230, 250],\r\n                lavenderblush: [255, 240, 245],\r\n                lawngreen: [124, 252, 0],\r\n                lemonchiffon: [255, 250, 205],\r\n                lightblue: [173, 216, 230],\r\n                lightcoral: [240, 128, 128],\r\n                lightcyan: [224, 255, 255],\r\n                lightgoldenrodyellow: [250, 250, 210],\r\n                lightgray: [211, 211, 211],\r\n                lightgreen: [144, 238, 144],\r\n                lightgrey: [211, 211, 211],\r\n                lightpink: [255, 182, 193],\r\n                lightsalmon: [255, 160, 122],\r\n                lightseagreen: [32, 178, 170],\r\n                lightskyblue: [135, 206, 250],\r\n                lightslategray: [119, 136, 153],\r\n                lightslategrey: [119, 136, 153],\r\n                lightsteelblue: [176, 196, 222],\r\n                lightyellow: [255, 255, 224],\r\n                lime: [0, 255, 0],\r\n                limegreen: [50, 205, 50],\r\n                linen: [250, 240, 230],\r\n                magenta: [255, 0, 255],\r\n                maroon: [128, 0, 0],\r\n                mediumaquamarine: [102, 205, 170],\r\n                mediumblue: [0, 0, 205],\r\n                mediumorchid: [186, 85, 211],\r\n                mediumpurple: [147, 112, 219],\r\n                mediumseagreen: [60, 179, 113],\r\n                mediumslateblue: [123, 104, 238],\r\n                mediumspringgreen: [0, 250, 154],\r\n                mediumturquoise: [72, 209, 204],\r\n                mediumvioletred: [199, 21, 133],\r\n                midnightblue: [25, 25, 112],\r\n                mintcream: [245, 255, 250],\r\n                mistyrose: [255, 228, 225],\r\n                moccasin: [255, 228, 181],\r\n                navajowhite: [255, 222, 173],\r\n                navy: [0, 0, 128],\r\n                oldlace: [253, 245, 230],\r\n                olive: [128, 128, 0],\r\n                olivedrab: [107, 142, 35],\r\n                orange: [255, 165, 0],\r\n                orangered: [255, 69, 0],\r\n                orchid: [218, 112, 214],\r\n                palegoldenrod: [238, 232, 170],\r\n                palegreen: [152, 251, 152],\r\n                paleturquoise: [175, 238, 238],\r\n                palevioletred: [219, 112, 147],\r\n                papayawhip: [255, 239, 213],\r\n                peachpuff: [255, 218, 185],\r\n                peru: [205, 133, 63],\r\n                pink: [255, 192, 203],\r\n                plum: [221, 160, 221],\r\n                powderblue: [176, 224, 230],\r\n                purple: [128, 0, 128],\r\n                rebeccapurple: [102, 51, 153],\r\n                red: [255, 0, 0],\r\n                rosybrown: [188, 143, 143],\r\n                royalblue: [65, 105, 225],\r\n                saddlebrown: [139, 69, 19],\r\n                salmon: [250, 128, 114],\r\n                sandybrown: [244, 164, 96],\r\n                seagreen: [46, 139, 87],\r\n                seashell: [255, 245, 238],\r\n                sienna: [160, 82, 45],\r\n                silver: [192, 192, 192],\r\n                skyblue: [135, 206, 235],\r\n                slateblue: [106, 90, 205],\r\n                slategray: [112, 128, 144],\r\n                slategrey: [112, 128, 144],\r\n                snow: [255, 250, 250],\r\n                springgreen: [0, 255, 127],\r\n                steelblue: [70, 130, 180],\r\n                tan: [210, 180, 140],\r\n                teal: [0, 128, 128],\r\n                thistle: [216, 191, 216],\r\n                tomato: [255, 99, 71],\r\n                turquoise: [64, 224, 208],\r\n                violet: [238, 130, 238],\r\n                wheat: [245, 222, 179],\r\n                white: [255, 255, 255],\r\n                whitesmoke: [245, 245, 245],\r\n                yellow: [255, 255, 0],\r\n                yellowgreen: [154, 205, 50]\r\n            };\r\n\r\n            var reverseKeywords = {};\r\n            for (var key in cssKeywords) {\r\n                reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\r\n            }\r\n\r\n        }, {}],\r\n        5: [function(require, module, exports) {\r\n            var conversions = require(4);\r\n\r\n            var convert = function() {\r\n                return new Converter();\r\n            }\r\n\r\n            for (var func in conversions) {\r\n                // export Raw versions\r\n                convert[func + \"Raw\"] = (function(func) {\r\n                    // accept array or plain args\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n                        return conversions[func](arg);\r\n                    }\r\n                })(func);\r\n\r\n                var pair = /(\\w+)2(\\w+)/.exec(func),\r\n                    from = pair[1],\r\n                    to = pair[2];\r\n\r\n                // export rgb2hsl and [\"rgb\"][\"hsl\"]\r\n                convert[from] = convert[from] || {};\r\n\r\n                convert[from][to] = convert[func] = (function(func) {\r\n                    return function(arg) {\r\n                        if (typeof arg == \"number\")\r\n                            arg = Array.prototype.slice.call(arguments);\r\n\r\n                        var val = conversions[func](arg);\r\n                        if (typeof val == \"string\" || val === undefined)\r\n                            return val; // keyword\r\n\r\n                        for (var i = 0; i < val.length; i++)\r\n                            val[i] = Math.round(val[i]);\r\n                        return val;\r\n                    }\r\n                })(func);\r\n            }\r\n\r\n\r\n            /* Converter does lazy conversion and caching */\r\n            var Converter = function() {\r\n                this.convs = {};\r\n            };\r\n\r\n            /* Either get the values for a space or\r\n              set the values for a space, depending on args */\r\n            Converter.prototype.routeSpace = function(space, args) {\r\n                var values = args[0];\r\n                if (values === undefined) {\r\n                    // color.rgb()\r\n                    return this.getValues(space);\r\n                }\r\n                // color.rgb(10, 10, 10)\r\n                if (typeof values == \"number\") {\r\n                    values = Array.prototype.slice.call(args);\r\n                }\r\n\r\n                return this.setValues(space, values);\r\n            };\r\n\r\n            /* Set the values for a space, invalidating cache */\r\n            Converter.prototype.setValues = function(space, values) {\r\n                this.space = space;\r\n                this.convs = {};\r\n                this.convs[space] = values;\r\n                return this;\r\n            };\r\n\r\n            /* Get the values for a space. If there's already\r\n              a conversion for the space, fetch it, otherwise\r\n              compute it */\r\n            Converter.prototype.getValues = function(space) {\r\n                var vals = this.convs[space];\r\n                if (!vals) {\r\n                    var fspace = this.space,\r\n                        from = this.convs[fspace];\r\n                    vals = convert[fspace][space](from);\r\n\r\n                    this.convs[space] = vals;\r\n                }\r\n                return vals;\r\n            };\r\n\r\n            [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\r\n                Converter.prototype[space] = function(vals) {\r\n                    return this.routeSpace(space, arguments);\r\n                }\r\n            });\r\n\r\n            module.exports = convert;\r\n        }, { \"4\": 4 }],\r\n        6: [function(require, module, exports) {\r\n            module.exports = {\r\n                \"aliceblue\": [240, 248, 255],\r\n                \"antiquewhite\": [250, 235, 215],\r\n                \"aqua\": [0, 255, 255],\r\n                \"aquamarine\": [127, 255, 212],\r\n                \"azure\": [240, 255, 255],\r\n                \"beige\": [245, 245, 220],\r\n                \"bisque\": [255, 228, 196],\r\n                \"black\": [0, 0, 0],\r\n                \"blanchedalmond\": [255, 235, 205],\r\n                \"blue\": [0, 0, 255],\r\n                \"blueviolet\": [138, 43, 226],\r\n                \"brown\": [165, 42, 42],\r\n                \"burlywood\": [222, 184, 135],\r\n                \"cadetblue\": [95, 158, 160],\r\n                \"chartreuse\": [127, 255, 0],\r\n                \"chocolate\": [210, 105, 30],\r\n                \"coral\": [255, 127, 80],\r\n                \"cornflowerblue\": [100, 149, 237],\r\n                \"cornsilk\": [255, 248, 220],\r\n                \"crimson\": [220, 20, 60],\r\n                \"cyan\": [0, 255, 255],\r\n                \"darkblue\": [0, 0, 139],\r\n                \"darkcyan\": [0, 139, 139],\r\n                \"darkgoldenrod\": [184, 134, 11],\r\n                \"darkgray\": [169, 169, 169],\r\n                \"darkgreen\": [0, 100, 0],\r\n                \"darkgrey\": [169, 169, 169],\r\n                \"darkkhaki\": [189, 183, 107],\r\n                \"darkmagenta\": [139, 0, 139],\r\n                \"darkolivegreen\": [85, 107, 47],\r\n                \"darkorange\": [255, 140, 0],\r\n                \"darkorchid\": [153, 50, 204],\r\n                \"darkred\": [139, 0, 0],\r\n                \"darksalmon\": [233, 150, 122],\r\n                \"darkseagreen\": [143, 188, 143],\r\n                \"darkslateblue\": [72, 61, 139],\r\n                \"darkslategray\": [47, 79, 79],\r\n                \"darkslategrey\": [47, 79, 79],\r\n                \"darkturquoise\": [0, 206, 209],\r\n                \"darkviolet\": [148, 0, 211],\r\n                \"deeppink\": [255, 20, 147],\r\n                \"deepskyblue\": [0, 191, 255],\r\n                \"dimgray\": [105, 105, 105],\r\n                \"dimgrey\": [105, 105, 105],\r\n                \"dodgerblue\": [30, 144, 255],\r\n                \"firebrick\": [178, 34, 34],\r\n                \"floralwhite\": [255, 250, 240],\r\n                \"forestgreen\": [34, 139, 34],\r\n                \"fuchsia\": [255, 0, 255],\r\n                \"gainsboro\": [220, 220, 220],\r\n                \"ghostwhite\": [248, 248, 255],\r\n                \"gold\": [255, 215, 0],\r\n                \"goldenrod\": [218, 165, 32],\r\n                \"gray\": [128, 128, 128],\r\n                \"green\": [0, 128, 0],\r\n                \"greenyellow\": [173, 255, 47],\r\n                \"grey\": [128, 128, 128],\r\n                \"honeydew\": [240, 255, 240],\r\n                \"hotpink\": [255, 105, 180],\r\n                \"indianred\": [205, 92, 92],\r\n                \"indigo\": [75, 0, 130],\r\n                \"ivory\": [255, 255, 240],\r\n                \"khaki\": [240, 230, 140],\r\n                \"lavender\": [230, 230, 250],\r\n                \"lavenderblush\": [255, 240, 245],\r\n                \"lawngreen\": [124, 252, 0],\r\n                \"lemonchiffon\": [255, 250, 205],\r\n                \"lightblue\": [173, 216, 230],\r\n                \"lightcoral\": [240, 128, 128],\r\n                \"lightcyan\": [224, 255, 255],\r\n                \"lightgoldenrodyellow\": [250, 250, 210],\r\n                \"lightgray\": [211, 211, 211],\r\n                \"lightgreen\": [144, 238, 144],\r\n                \"lightgrey\": [211, 211, 211],\r\n                \"lightpink\": [255, 182, 193],\r\n                \"lightsalmon\": [255, 160, 122],\r\n                \"lightseagreen\": [32, 178, 170],\r\n                \"lightskyblue\": [135, 206, 250],\r\n                \"lightslategray\": [119, 136, 153],\r\n                \"lightslategrey\": [119, 136, 153],\r\n                \"lightsteelblue\": [176, 196, 222],\r\n                \"lightyellow\": [255, 255, 224],\r\n                \"lime\": [0, 255, 0],\r\n                \"limegreen\": [50, 205, 50],\r\n                \"linen\": [250, 240, 230],\r\n                \"magenta\": [255, 0, 255],\r\n                \"maroon\": [128, 0, 0],\r\n                \"mediumaquamarine\": [102, 205, 170],\r\n                \"mediumblue\": [0, 0, 205],\r\n                \"mediumorchid\": [186, 85, 211],\r\n                \"mediumpurple\": [147, 112, 219],\r\n                \"mediumseagreen\": [60, 179, 113],\r\n                \"mediumslateblue\": [123, 104, 238],\r\n                \"mediumspringgreen\": [0, 250, 154],\r\n                \"mediumturquoise\": [72, 209, 204],\r\n                \"mediumvioletred\": [199, 21, 133],\r\n                \"midnightblue\": [25, 25, 112],\r\n                \"mintcream\": [245, 255, 250],\r\n                \"mistyrose\": [255, 228, 225],\r\n                \"moccasin\": [255, 228, 181],\r\n                \"navajowhite\": [255, 222, 173],\r\n                \"navy\": [0, 0, 128],\r\n                \"oldlace\": [253, 245, 230],\r\n                \"olive\": [128, 128, 0],\r\n                \"olivedrab\": [107, 142, 35],\r\n                \"orange\": [255, 165, 0],\r\n                \"orangered\": [255, 69, 0],\r\n                \"orchid\": [218, 112, 214],\r\n                \"palegoldenrod\": [238, 232, 170],\r\n                \"palegreen\": [152, 251, 152],\r\n                \"paleturquoise\": [175, 238, 238],\r\n                \"palevioletred\": [219, 112, 147],\r\n                \"papayawhip\": [255, 239, 213],\r\n                \"peachpuff\": [255, 218, 185],\r\n                \"peru\": [205, 133, 63],\r\n                \"pink\": [255, 192, 203],\r\n                \"plum\": [221, 160, 221],\r\n                \"powderblue\": [176, 224, 230],\r\n                \"purple\": [128, 0, 128],\r\n                \"rebeccapurple\": [102, 51, 153],\r\n                \"red\": [255, 0, 0],\r\n                \"rosybrown\": [188, 143, 143],\r\n                \"royalblue\": [65, 105, 225],\r\n                \"saddlebrown\": [139, 69, 19],\r\n                \"salmon\": [250, 128, 114],\r\n                \"sandybrown\": [244, 164, 96],\r\n                \"seagreen\": [46, 139, 87],\r\n                \"seashell\": [255, 245, 238],\r\n                \"sienna\": [160, 82, 45],\r\n                \"silver\": [192, 192, 192],\r\n                \"skyblue\": [135, 206, 235],\r\n                \"slateblue\": [106, 90, 205],\r\n                \"slategray\": [112, 128, 144],\r\n                \"slategrey\": [112, 128, 144],\r\n                \"snow\": [255, 250, 250],\r\n                \"springgreen\": [0, 255, 127],\r\n                \"steelblue\": [70, 130, 180],\r\n                \"tan\": [210, 180, 140],\r\n                \"teal\": [0, 128, 128],\r\n                \"thistle\": [216, 191, 216],\r\n                \"tomato\": [255, 99, 71],\r\n                \"turquoise\": [64, 224, 208],\r\n                \"violet\": [238, 130, 238],\r\n                \"wheat\": [245, 222, 179],\r\n                \"white\": [255, 255, 255],\r\n                \"whitesmoke\": [245, 245, 245],\r\n                \"yellow\": [255, 255, 0],\r\n                \"yellowgreen\": [154, 205, 50]\r\n            };\r\n        }, {}],\r\n        7: [function(require, module, exports) {\r\n            /**\r\n             * @namespace Chart\r\n             */\r\n            var Chart = require(28)();\r\n\r\n            require(26)(Chart);\r\n            require(40)(Chart);\r\n            require(22)(Chart);\r\n            require(25)(Chart);\r\n            require(30)(Chart);\r\n            require(21)(Chart);\r\n            require(23)(Chart);\r\n            require(24)(Chart);\r\n            require(29)(Chart);\r\n            require(32)(Chart);\r\n            require(33)(Chart);\r\n            require(31)(Chart);\r\n            require(27)(Chart);\r\n            require(34)(Chart);\r\n\r\n            require(35)(Chart);\r\n            require(36)(Chart);\r\n            require(37)(Chart);\r\n            require(38)(Chart);\r\n\r\n            require(46)(Chart);\r\n            require(44)(Chart);\r\n            require(45)(Chart);\r\n            require(47)(Chart);\r\n            require(48)(Chart);\r\n            require(49)(Chart);\r\n\r\n            // Controllers must be loaded after elements\r\n            // See Chart.core.datasetController.dataElementType\r\n            require(15)(Chart);\r\n            require(16)(Chart);\r\n            require(17)(Chart);\r\n            require(18)(Chart);\r\n            require(19)(Chart);\r\n            require(20)(Chart);\r\n\r\n            require(8)(Chart);\r\n            require(9)(Chart);\r\n            require(10)(Chart);\r\n            require(11)(Chart);\r\n            require(12)(Chart);\r\n            require(13)(Chart);\r\n            require(14)(Chart);\r\n\r\n            // Loading built-it plugins\r\n            var plugins = [];\r\n\r\n            plugins.push(\r\n                require(41)(Chart),\r\n                require(42)(Chart),\r\n                require(43)(Chart)\r\n            );\r\n\r\n            Chart.plugins.register(plugins);\r\n\r\n            module.exports = Chart;\r\n            if (typeof window !== 'undefined') {\r\n                window.Chart = Chart;\r\n            }\r\n\r\n        }, { \"10\": 10, \"11\": 11, \"12\": 12, \"13\": 13, \"14\": 14, \"15\": 15, \"16\": 16, \"17\": 17, \"18\": 18, \"19\": 19, \"20\": 20, \"21\": 21, \"22\": 22, \"23\": 23, \"24\": 24, \"25\": 25, \"26\": 26, \"27\": 27, \"28\": 28, \"29\": 29, \"30\": 30, \"31\": 31, \"32\": 32, \"33\": 33, \"34\": 34, \"35\": 35, \"36\": 36, \"37\": 37, \"38\": 38, \"40\": 40, \"41\": 41, \"42\": 42, \"43\": 43, \"44\": 44, \"45\": 45, \"46\": 46, \"47\": 47, \"48\": 48, \"49\": 49, \"8\": 8, \"9\": 9 }],\r\n        8: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                Chart.Bar = function(context, config) {\r\n                    config.type = 'bar';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n\r\n            };\r\n\r\n        }, {}],\r\n        9: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                Chart.Bubble = function(context, config) {\r\n                    config.type = 'bubble';\r\n                    return new Chart(context, config);\r\n                };\r\n\r\n            };\r\n\r\n        }, {}],\r\n        10: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                Chart.Doughnut = function(context, config) {\r\n                    config.type = 'doughnut';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n\r\n            };\r\n\r\n        }, {}],\r\n        11: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                Chart.Line = function(context, config) {\r\n                    config.type = 'line';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n\r\n            };\r\n\r\n        }, {}],\r\n        12: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                Chart.PolarArea = function(context, config) {\r\n                    config.type = 'polarArea';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n\r\n            };\r\n\r\n        }, {}],\r\n        13: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                Chart.Radar = function(context, config) {\r\n                    config.type = 'radar';\r\n\r\n                    return new Chart(context, config);\r\n                };\r\n\r\n            };\r\n\r\n        }, {}],\r\n        14: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var defaultConfig = {\r\n                    hover: {\r\n                        mode: 'single'\r\n                    },\r\n\r\n                    scales: {\r\n                        xAxes: [{\r\n                            type: 'linear', // scatter should not use a category axis\r\n                            position: 'bottom',\r\n                            id: 'x-axis-1' // need an ID so datasets can reference the scale\r\n                        }],\r\n                        yAxes: [{\r\n                            type: 'linear',\r\n                            position: 'left',\r\n                            id: 'y-axis-1'\r\n                        }]\r\n                    },\r\n\r\n                    tooltips: {\r\n                        callbacks: {\r\n                            title: function() {\r\n                                // Title doesn't make sense for scatter since we format the data as a point\r\n                                return '';\r\n                            },\r\n                            label: function(tooltipItem) {\r\n                                return '(' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ')';\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // Register the default config for this type\r\n                Chart.defaults.scatter = defaultConfig;\r\n\r\n                // Scatter charts use line controllers\r\n                Chart.controllers.scatter = Chart.controllers.line;\r\n\r\n                Chart.Scatter = function(context, config) {\r\n                    config.type = 'scatter';\r\n                    return new Chart(context, config);\r\n                };\r\n\r\n            };\r\n\r\n        }, {}],\r\n        15: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                Chart.defaults.bar = {\r\n                    hover: {\r\n                        mode: 'label'\r\n                    },\r\n\r\n                    scales: {\r\n                        xAxes: [{\r\n                            type: 'category',\r\n\r\n                            // Specific to Bar Controller\r\n                            categoryPercentage: 0.8,\r\n                            barPercentage: 0.9,\r\n\r\n                            // grid line settings\r\n                            gridLines: {\r\n                                offsetGridLines: true\r\n                            }\r\n                        }],\r\n                        yAxes: [{\r\n                            type: 'linear'\r\n                        }]\r\n                    }\r\n                };\r\n\r\n                Chart.controllers.bar = Chart.DatasetController.extend({\r\n\r\n                    dataElementType: Chart.elements.Rectangle,\r\n\r\n                    initialize: function() {\r\n                        var me = this;\r\n                        var meta;\r\n\r\n                        Chart.DatasetController.prototype.initialize.apply(me, arguments);\r\n\r\n                        meta = me.getMeta();\r\n                        meta.stack = me.getDataset().stack;\r\n                        meta.bar = true;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var elements = me.getMeta().data;\r\n                        var i, ilen;\r\n\r\n                        me._ruler = me.getRuler();\r\n\r\n                        for (i = 0, ilen = elements.length; i < ilen; ++i) {\r\n                            me.updateElement(elements[i], i, reset);\r\n                        }\r\n                    },\r\n\r\n                    updateElement: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n                        var custom = rectangle.custom || {};\r\n                        var rectangleOptions = chart.options.elements.rectangle;\r\n\r\n                        rectangle._xScale = me.getScaleForId(meta.xAxisID);\r\n                        rectangle._yScale = me.getScaleForId(meta.yAxisID);\r\n                        rectangle._datasetIndex = me.index;\r\n                        rectangle._index = index;\r\n\r\n                        rectangle._model = {\r\n                            datasetLabel: dataset.label,\r\n                            label: chart.data.labels[index],\r\n                            borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\r\n                            backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\r\n                            borderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\r\n                            borderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\r\n                        };\r\n\r\n                        me.updateElementGeometry(rectangle, index, reset);\r\n\r\n                        rectangle.pivot();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    updateElementGeometry: function(rectangle, index, reset) {\r\n                        var me = this;\r\n                        var model = rectangle._model;\r\n                        var vscale = me.getValueScale();\r\n                        var base = vscale.getBasePixel();\r\n                        var horizontal = vscale.isHorizontal();\r\n                        var ruler = me._ruler || me.getRuler();\r\n                        var vpixels = me.calculateBarValuePixels(me.index, index);\r\n                        var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\r\n\r\n                        model.horizontal = horizontal;\r\n                        model.base = reset ? base : vpixels.base;\r\n                        model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\r\n                        model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\r\n                        model.height = horizontal ? ipixels.size : undefined;\r\n                        model.width = horizontal ? undefined : ipixels.size;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScale: function() {\r\n                        return this.getScaleForId(this.getValueScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScale: function() {\r\n                        return this.getScaleForId(this.getIndexScaleId());\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the effective number of stacks based on groups and bar visibility.\r\n                     * @private\r\n                     */\r\n                    getStackCount: function(last) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var scale = me.getIndexScale();\r\n                        var stacked = scale.options.stacked;\r\n                        var ilen = last === undefined ? chart.data.datasets.length : last + 1;\r\n                        var stacks = [];\r\n                        var i, meta;\r\n\r\n                        for (i = 0; i < ilen; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            if (meta.bar && chart.isDatasetVisible(i) &&\r\n                                (stacked === false ||\r\n                                    (stacked === true && stacks.indexOf(meta.stack) === -1) ||\r\n                                    (stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\r\n                                stacks.push(meta.stack);\r\n                            }\r\n                        }\r\n\r\n                        return stacks.length;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the stack index for the given dataset based on groups and bar visibility.\r\n                     * @private\r\n                     */\r\n                    getStackIndex: function(datasetIndex) {\r\n                        return this.getStackCount(datasetIndex) - 1;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getRuler: function() {\r\n                        var me = this;\r\n                        var scale = me.getIndexScale();\r\n                        var options = scale.options;\r\n                        var stackCount = me.getStackCount();\r\n                        var fullSize = scale.isHorizontal() ? scale.width : scale.height;\r\n                        var tickSize = fullSize / scale.ticks.length;\r\n                        var categorySize = tickSize * options.categoryPercentage;\r\n                        var fullBarSize = categorySize / stackCount;\r\n                        var barSize = fullBarSize * options.barPercentage;\r\n\r\n                        barSize = Math.min(\r\n                            helpers.getValueOrDefault(options.barThickness, barSize),\r\n                            helpers.getValueOrDefault(options.maxBarThickness, Infinity));\r\n\r\n                        return {\r\n                            stackCount: stackCount,\r\n                            tickSize: tickSize,\r\n                            categorySize: categorySize,\r\n                            categorySpacing: tickSize - categorySize,\r\n                            fullBarSize: fullBarSize,\r\n                            barSize: barSize,\r\n                            barSpacing: fullBarSize - barSize,\r\n                            scale: scale\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Note: pixel values are not clamped to the scale area.\r\n                     * @private\r\n                     */\r\n                    calculateBarValuePixels: function(datasetIndex, index) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var scale = me.getValueScale();\r\n                        var datasets = chart.data.datasets;\r\n                        var value = Number(datasets[datasetIndex].data[index]);\r\n                        var stacked = scale.options.stacked;\r\n                        var stack = meta.stack;\r\n                        var start = 0;\r\n                        var i, imeta, ivalue, base, head, size;\r\n\r\n                        if (stacked || (stacked === undefined && stack !== undefined)) {\r\n                            for (i = 0; i < datasetIndex; ++i) {\r\n                                imeta = chart.getDatasetMeta(i);\r\n\r\n                                if (imeta.bar &&\r\n                                    imeta.stack === stack &&\r\n                                    imeta.controller.getValueScaleId() === scale.id &&\r\n                                    chart.isDatasetVisible(i)) {\r\n\r\n                                    ivalue = Number(datasets[i].data[index]);\r\n                                    if ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\r\n                                        start += ivalue;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        base = scale.getPixelForValue(start);\r\n                        head = scale.getPixelForValue(start + value);\r\n                        size = (head - base) / 2;\r\n\r\n                        return {\r\n                            size: size,\r\n                            base: base,\r\n                            head: head,\r\n                            center: head + size / 2\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    calculateBarIndexPixels: function(datasetIndex, index, ruler) {\r\n                        var me = this;\r\n                        var scale = ruler.scale;\r\n                        var isCombo = me.chart.isCombo;\r\n                        var stackIndex = me.getStackIndex(datasetIndex);\r\n                        var base = scale.getPixelForValue(null, index, datasetIndex, isCombo);\r\n                        var size = ruler.barSize;\r\n\r\n                        base -= isCombo ? ruler.tickSize / 2 : 0;\r\n                        base += ruler.fullBarSize * stackIndex;\r\n                        base += ruler.categorySpacing / 2;\r\n                        base += ruler.barSpacing / 2;\r\n\r\n                        return {\r\n                            size: size,\r\n                            base: base,\r\n                            head: base + size,\r\n                            center: base + size / 2\r\n                        };\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var elements = me.getMeta().data;\r\n                        var dataset = me.getDataset();\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n                        var d;\r\n\r\n                        helpers.canvas.clipArea(chart.ctx, chart.chartArea);\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            d = dataset.data[i];\r\n                            if (d !== null && d !== undefined && !isNaN(d)) {\r\n                                elements[i].draw();\r\n                            }\r\n                        }\r\n\r\n                        helpers.canvas.unclipArea(chart.ctx);\r\n                    },\r\n\r\n                    setHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(rectangle) {\r\n                        var dataset = this.chart.data.datasets[rectangle._datasetIndex];\r\n                        var index = rectangle._index;\r\n                        var custom = rectangle.custom || {};\r\n                        var model = rectangle._model;\r\n                        var rectangleElementOptions = this.chart.options.elements.rectangle;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\r\n                    }\r\n                });\r\n\r\n\r\n                // including horizontalBar in the bar file, instead of a file of its own\r\n                // it extends bar (like pie extends doughnut)\r\n                Chart.defaults.horizontalBar = {\r\n                    hover: {\r\n                        mode: 'label'\r\n                    },\r\n\r\n                    scales: {\r\n                        xAxes: [{\r\n                            type: 'linear',\r\n                            position: 'bottom'\r\n                        }],\r\n                        yAxes: [{\r\n                            position: 'left',\r\n                            type: 'category',\r\n\r\n                            // Specific to Horizontal Bar Controller\r\n                            categoryPercentage: 0.8,\r\n                            barPercentage: 0.9,\r\n\r\n                            // grid line settings\r\n                            gridLines: {\r\n                                offsetGridLines: true\r\n                            }\r\n                        }]\r\n                    },\r\n                    elements: {\r\n                        rectangle: {\r\n                            borderSkipped: 'left'\r\n                        }\r\n                    },\r\n                    tooltips: {\r\n                        callbacks: {\r\n                            title: function(tooltipItems, data) {\r\n                                // Pick first xLabel for now\r\n                                var title = '';\r\n\r\n                                if (tooltipItems.length > 0) {\r\n                                    if (tooltipItems[0].yLabel) {\r\n                                        title = tooltipItems[0].yLabel;\r\n                                    } else if (data.labels.length > 0 && tooltipItems[0].index < data.labels.length) {\r\n                                        title = data.labels[tooltipItems[0].index];\r\n                                    }\r\n                                }\r\n\r\n                                return title;\r\n                            },\r\n                            label: function(tooltipItem, data) {\r\n                                var datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n                                return datasetLabel + ': ' + tooltipItem.xLabel;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getValueScaleId: function() {\r\n                        return this.getMeta().xAxisID;\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    getIndexScaleId: function() {\r\n                        return this.getMeta().yAxisID;\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, {}],\r\n        16: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                Chart.defaults.bubble = {\r\n                    hover: {\r\n                        mode: 'single'\r\n                    },\r\n\r\n                    scales: {\r\n                        xAxes: [{\r\n                            type: 'linear', // bubble should probably use a linear scale by default\r\n                            position: 'bottom',\r\n                            id: 'x-axis-0' // need an ID so datasets can reference the scale\r\n                        }],\r\n                        yAxes: [{\r\n                            type: 'linear',\r\n                            position: 'left',\r\n                            id: 'y-axis-0'\r\n                        }]\r\n                    },\r\n\r\n                    tooltips: {\r\n                        callbacks: {\r\n                            title: function() {\r\n                                // Title doesn't make sense for scatter since we format the data as a point\r\n                                return '';\r\n                            },\r\n                            label: function(tooltipItem, data) {\r\n                                var datasetLabel = data.datasets[tooltipItem.datasetIndex].label || '';\r\n                                var dataPoint = data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n                                return datasetLabel + ': (' + tooltipItem.xLabel + ', ' + tooltipItem.yLabel + ', ' + dataPoint.r + ')';\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                Chart.controllers.bubble = Chart.DatasetController.extend({\r\n\r\n                    dataElementType: Chart.elements.Point,\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var points = meta.data;\r\n\r\n                        // Update Points\r\n                        helpers.each(points, function(point, index) {\r\n                            me.updateElement(point, index, reset);\r\n                        });\r\n                    },\r\n\r\n                    updateElement: function(point, index, reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var xScale = me.getScaleForId(meta.xAxisID);\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n\r\n                        var custom = point.custom || {};\r\n                        var dataset = me.getDataset();\r\n                        var data = dataset.data[index];\r\n                        var pointElementOptions = me.chart.options.elements.point;\r\n                        var dsIndex = me.index;\r\n\r\n                        helpers.extend(point, {\r\n                            // Utility\r\n                            _xScale: xScale,\r\n                            _yScale: yScale,\r\n                            _datasetIndex: dsIndex,\r\n                            _index: index,\r\n\r\n                            // Desired view properties\r\n                            _model: {\r\n                                x: reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex, me.chart.isCombo),\r\n                                y: reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex),\r\n                                // Appearance\r\n                                radius: reset ? 0 : custom.radius ? custom.radius : me.getRadius(data),\r\n\r\n                                // Tooltip\r\n                                hitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.hitRadius, index, pointElementOptions.hitRadius)\r\n                            }\r\n                        });\r\n\r\n                        // Trick to reset the styles of the point\r\n                        Chart.DatasetController.prototype.removeHoverStyle.call(me, point, pointElementOptions);\r\n\r\n                        var model = point._model;\r\n                        model.skip = custom.skip ? custom.skip : (isNaN(model.x) || isNaN(model.y));\r\n\r\n                        point.pivot();\r\n                    },\r\n\r\n                    getRadius: function(value) {\r\n                        return value.r || this.chart.options.elements.point.radius;\r\n                    },\r\n\r\n                    setHoverStyle: function(point) {\r\n                        var me = this;\r\n                        Chart.DatasetController.prototype.setHoverStyle.call(me, point);\r\n\r\n                        // Radius\r\n                        var dataset = me.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n                        model.radius = custom.hoverRadius ? custom.hoverRadius : (helpers.getValueAtIndexOrDefault(dataset.hoverRadius, index, me.chart.options.elements.point.hoverRadius)) + me.getRadius(dataset.data[index]);\r\n                    },\r\n\r\n                    removeHoverStyle: function(point) {\r\n                        var me = this;\r\n                        Chart.DatasetController.prototype.removeHoverStyle.call(me, point, me.chart.options.elements.point);\r\n\r\n                        var dataVal = me.chart.data.datasets[point._datasetIndex].data[point._index];\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        model.radius = custom.radius ? custom.radius : me.getRadius(dataVal);\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, {}],\r\n        17: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers,\r\n                    defaults = Chart.defaults;\r\n\r\n                defaults.doughnut = {\r\n                    animation: {\r\n                        // Boolean - Whether we animate the rotation of the Doughnut\r\n                        animateRotate: true,\r\n                        // Boolean - Whether we animate scaling the Doughnut from the centre\r\n                        animateScale: false\r\n                    },\r\n                    aspectRatio: 1,\r\n                    hover: {\r\n                        mode: 'single'\r\n                    },\r\n                    legendCallback: function(chart) {\r\n                        var text = [];\r\n                        text.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n                        var data = chart.data;\r\n                        var datasets = data.datasets;\r\n                        var labels = data.labels;\r\n\r\n                        if (datasets.length) {\r\n                            for (var i = 0; i < datasets[0].data.length; ++i) {\r\n                                text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n                                if (labels[i]) {\r\n                                    text.push(labels[i]);\r\n                                }\r\n                                text.push('</li>');\r\n                            }\r\n                        }\r\n\r\n                        text.push('</ul>');\r\n                        return text.join('');\r\n                    },\r\n                    legend: {\r\n                        labels: {\r\n                            generateLabels: function(chart) {\r\n                                var data = chart.data;\r\n                                if (data.labels.length && data.datasets.length) {\r\n                                    return data.labels.map(function(label, i) {\r\n                                        var meta = chart.getDatasetMeta(0);\r\n                                        var ds = data.datasets[0];\r\n                                        var arc = meta.data[i];\r\n                                        var custom = arc && arc.custom || {};\r\n                                        var getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n                                        var arcOpts = chart.options.elements.arc;\r\n                                        var fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n                                        var stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n                                        var bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n                                        return {\r\n                                            text: label,\r\n                                            fillStyle: fill,\r\n                                            strokeStyle: stroke,\r\n                                            lineWidth: bw,\r\n                                            hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n                                            // Extra data used for toggling the correct item\r\n                                            index: i\r\n                                        };\r\n                                    });\r\n                                }\r\n                                return [];\r\n                            }\r\n                        },\r\n\r\n                        onClick: function(e, legendItem) {\r\n                            var index = legendItem.index;\r\n                            var chart = this.chart;\r\n                            var i, ilen, meta;\r\n\r\n                            for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n                                meta = chart.getDatasetMeta(i);\r\n                                // toggle visibility of index if exists\r\n                                if (meta.data[index]) {\r\n                                    meta.data[index].hidden = !meta.data[index].hidden;\r\n                                }\r\n                            }\r\n\r\n                            chart.update();\r\n                        }\r\n                    },\r\n\r\n                    // The percentage of the chart that we cut out of the middle.\r\n                    cutoutPercentage: 50,\r\n\r\n                    // The rotation of the chart, where the first data arc begins.\r\n                    rotation: Math.PI * -0.5,\r\n\r\n                    // The total circumference of the chart.\r\n                    circumference: Math.PI * 2.0,\r\n\r\n                    // Need to override these to give a nice default\r\n                    tooltips: {\r\n                        callbacks: {\r\n                            title: function() {\r\n                                return '';\r\n                            },\r\n                            label: function(tooltipItem, data) {\r\n                                var dataLabel = data.labels[tooltipItem.index];\r\n                                var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\r\n\r\n                                if (helpers.isArray(dataLabel)) {\r\n                                    // show value on first line of multiline label\r\n                                    // need to clone because we are changing the value\r\n                                    dataLabel = dataLabel.slice();\r\n                                    dataLabel[0] += value;\r\n                                } else {\r\n                                    dataLabel += value;\r\n                                }\r\n\r\n                                return dataLabel;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                defaults.pie = helpers.clone(defaults.doughnut);\r\n                helpers.extend(defaults.pie, {\r\n                    cutoutPercentage: 0\r\n                });\r\n\r\n\r\n                Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\r\n\r\n                    dataElementType: Chart.elements.Arc,\r\n\r\n                    linkScales: helpers.noop,\r\n\r\n                    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\r\n                    getRingIndex: function(datasetIndex) {\r\n                        var ringIndex = 0;\r\n\r\n                        for (var j = 0; j < datasetIndex; ++j) {\r\n                            if (this.chart.isDatasetVisible(j)) {\r\n                                ++ringIndex;\r\n                            }\r\n                        }\r\n\r\n                        return ringIndex;\r\n                    },\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var chart = me.chart,\r\n                            chartArea = chart.chartArea,\r\n                            opts = chart.options,\r\n                            arcOpts = opts.elements.arc,\r\n                            availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth,\r\n                            availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth,\r\n                            minSize = Math.min(availableWidth, availableHeight),\r\n                            offset = {\r\n                                x: 0,\r\n                                y: 0\r\n                            },\r\n                            meta = me.getMeta(),\r\n                            cutoutPercentage = opts.cutoutPercentage,\r\n                            circumference = opts.circumference;\r\n\r\n                        // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\r\n                        if (circumference < Math.PI * 2.0) {\r\n                            var startAngle = opts.rotation % (Math.PI * 2.0);\r\n                            startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\r\n                            var endAngle = startAngle + circumference;\r\n                            var start = { x: Math.cos(startAngle), y: Math.sin(startAngle) };\r\n                            var end = { x: Math.cos(endAngle), y: Math.sin(endAngle) };\r\n                            var contains0 = (startAngle <= 0 && 0 <= endAngle) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\r\n                            var contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\r\n                            var contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\r\n                            var contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\r\n                            var cutout = cutoutPercentage / 100.0;\r\n                            var min = { x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout)) };\r\n                            var max = { x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout)) };\r\n                            var size = { width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5 };\r\n                            minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\r\n                            offset = { x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5 };\r\n                        }\r\n\r\n                        chart.borderWidth = me.getMaxBorderWidth(meta.data);\r\n                        chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\r\n                        chart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\r\n                        chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n                        chart.offsetX = offset.x * chart.outerRadius;\r\n                        chart.offsetY = offset.y * chart.outerRadius;\r\n\r\n                        meta.total = me.calculateTotal();\r\n\r\n                        me.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\r\n                        me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\r\n\r\n                        helpers.each(meta.data, function(arc, index) {\r\n                            me.updateElement(arc, index, reset);\r\n                        });\r\n                    },\r\n\r\n                    updateElement: function(arc, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart,\r\n                            chartArea = chart.chartArea,\r\n                            opts = chart.options,\r\n                            animationOpts = opts.animation,\r\n                            centerX = (chartArea.left + chartArea.right) / 2,\r\n                            centerY = (chartArea.top + chartArea.bottom) / 2,\r\n                            startAngle = opts.rotation, // non reset case handled later\r\n                            endAngle = opts.rotation, // non reset case handled later\r\n                            dataset = me.getDataset(),\r\n                            circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI)),\r\n                            innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius,\r\n                            outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius,\r\n                            valueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n\r\n                        helpers.extend(arc, {\r\n                            // Utility\r\n                            _datasetIndex: me.index,\r\n                            _index: index,\r\n\r\n                            // Desired view properties\r\n                            _model: {\r\n                                x: centerX + chart.offsetX,\r\n                                y: centerY + chart.offsetY,\r\n                                startAngle: startAngle,\r\n                                endAngle: endAngle,\r\n                                circumference: circumference,\r\n                                outerRadius: outerRadius,\r\n                                innerRadius: innerRadius,\r\n                                label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\r\n                            }\r\n                        });\r\n\r\n                        var model = arc._model;\r\n                        // Resets the visual styles\r\n                        this.removeHoverStyle(arc);\r\n\r\n                        // Set correct angles if not resetting\r\n                        if (!reset || !animationOpts.animateRotate) {\r\n                            if (index === 0) {\r\n                                model.startAngle = opts.rotation;\r\n                            } else {\r\n                                model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\r\n                            }\r\n\r\n                            model.endAngle = model.startAngle + model.circumference;\r\n                        }\r\n\r\n                        arc.pivot();\r\n                    },\r\n\r\n                    removeHoverStyle: function(arc) {\r\n                        Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n                    },\r\n\r\n                    calculateTotal: function() {\r\n                        var dataset = this.getDataset();\r\n                        var meta = this.getMeta();\r\n                        var total = 0;\r\n                        var value;\r\n\r\n                        helpers.each(meta.data, function(element, index) {\r\n                            value = dataset.data[index];\r\n                            if (!isNaN(value) && !element.hidden) {\r\n                                total += Math.abs(value);\r\n                            }\r\n                        });\r\n\r\n                        /* if (total === 0) {\r\n                        \ttotal = NaN;\r\n                        }*/\r\n\r\n                        return total;\r\n                    },\r\n\r\n                    calculateCircumference: function(value) {\r\n                        var total = this.getMeta().total;\r\n                        if (total > 0 && !isNaN(value)) {\r\n                            return (Math.PI * 2.0) * (value / total);\r\n                        }\r\n                        return 0;\r\n                    },\r\n\r\n                    // gets the max border or hover width to properly scale pie charts\r\n                    getMaxBorderWidth: function(elements) {\r\n                        var max = 0,\r\n                            index = this.index,\r\n                            length = elements.length,\r\n                            borderWidth,\r\n                            hoverWidth;\r\n\r\n                        for (var i = 0; i < length; i++) {\r\n                            borderWidth = elements[i]._model ? elements[i]._model.borderWidth : 0;\r\n                            hoverWidth = elements[i]._chart ? elements[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\r\n\r\n                            max = borderWidth > max ? borderWidth : max;\r\n                            max = hoverWidth > max ? hoverWidth : max;\r\n                        }\r\n                        return max;\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, {}],\r\n        18: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                Chart.defaults.line = {\r\n                    showLines: true,\r\n                    spanGaps: false,\r\n\r\n                    hover: {\r\n                        mode: 'label'\r\n                    },\r\n\r\n                    scales: {\r\n                        xAxes: [{\r\n                            type: 'category',\r\n                            id: 'x-axis-0'\r\n                        }],\r\n                        yAxes: [{\r\n                            type: 'linear',\r\n                            id: 'y-axis-0'\r\n                        }]\r\n                    }\r\n                };\r\n\r\n                function lineEnabled(dataset, options) {\r\n                    return helpers.getValueOrDefault(dataset.showLine, options.showLines);\r\n                }\r\n\r\n                Chart.controllers.line = Chart.DatasetController.extend({\r\n\r\n                    datasetElementType: Chart.elements.Line,\r\n\r\n                    dataElementType: Chart.elements.Point,\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var line = meta.dataset;\r\n                        var points = meta.data || [];\r\n                        var options = me.chart.options;\r\n                        var lineElementOptions = options.elements.line;\r\n                        var scale = me.getScaleForId(meta.yAxisID);\r\n                        var i, ilen, custom;\r\n                        var dataset = me.getDataset();\r\n                        var showLine = lineEnabled(dataset, options);\r\n\r\n                        // Update Line\r\n                        if (showLine) {\r\n                            custom = line.custom || {};\r\n\r\n                            // Compatibility: If the properties are defined with only the old name, use those values\r\n                            if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n                                dataset.lineTension = dataset.tension;\r\n                            }\r\n\r\n                            // Utility\r\n                            line._scale = scale;\r\n                            line._datasetIndex = me.index;\r\n                            // Data\r\n                            line._children = points;\r\n                            // Model\r\n                            line._model = {\r\n                                // Appearance\r\n                                // The default behavior of lines is to break at null values, according\r\n                                // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\r\n                                // This option gives lines the ability to span gaps\r\n                                spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\r\n                                tension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n                                borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n                                borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n                                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n                                borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n                                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n                                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n                                fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n                                steppedLine: custom.steppedLine ? custom.steppedLine : helpers.getValueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\r\n                                cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.getValueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\r\n                            };\r\n\r\n                            line.pivot();\r\n                        }\r\n\r\n                        // Update Points\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            me.updateElement(points[i], i, reset);\r\n                        }\r\n\r\n                        if (showLine && line._model.tension !== 0) {\r\n                            me.updateBezierControlPoints();\r\n                        }\r\n\r\n                        // Now pivot the point for animation\r\n                        for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                            points[i].pivot();\r\n                        }\r\n                    },\r\n\r\n                    getPointBackgroundColor: function(point, index) {\r\n                        var backgroundColor = this.chart.options.elements.point.backgroundColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.backgroundColor) {\r\n                            backgroundColor = custom.backgroundColor;\r\n                        } else if (dataset.pointBackgroundColor) {\r\n                            backgroundColor = helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\r\n                        } else if (dataset.backgroundColor) {\r\n                            backgroundColor = dataset.backgroundColor;\r\n                        }\r\n\r\n                        return backgroundColor;\r\n                    },\r\n\r\n                    getPointBorderColor: function(point, index) {\r\n                        var borderColor = this.chart.options.elements.point.borderColor;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (custom.borderColor) {\r\n                            borderColor = custom.borderColor;\r\n                        } else if (dataset.pointBorderColor) {\r\n                            borderColor = helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\r\n                        } else if (dataset.borderColor) {\r\n                            borderColor = dataset.borderColor;\r\n                        }\r\n\r\n                        return borderColor;\r\n                    },\r\n\r\n                    getPointBorderWidth: function(point, index) {\r\n                        var borderWidth = this.chart.options.elements.point.borderWidth;\r\n                        var dataset = this.getDataset();\r\n                        var custom = point.custom || {};\r\n\r\n                        if (!isNaN(custom.borderWidth)) {\r\n                            borderWidth = custom.borderWidth;\r\n                        } else if (!isNaN(dataset.pointBorderWidth)) {\r\n                            borderWidth = helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\r\n                        } else if (!isNaN(dataset.borderWidth)) {\r\n                            borderWidth = dataset.borderWidth;\r\n                        }\r\n\r\n                        return borderWidth;\r\n                    },\r\n\r\n                    updateElement: function(point, index, reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var custom = point.custom || {};\r\n                        var dataset = me.getDataset();\r\n                        var datasetIndex = me.index;\r\n                        var value = dataset.data[index];\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var xScale = me.getScaleForId(meta.xAxisID);\r\n                        var pointOptions = me.chart.options.elements.point;\r\n                        var x, y;\r\n                        var labels = me.chart.data.labels || [];\r\n                        var includeOffset = (labels.length === 1 || dataset.data.length === 1) || me.chart.isCombo;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n                        if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n                            dataset.pointHitRadius = dataset.hitRadius;\r\n                        }\r\n\r\n                        x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex, includeOffset);\r\n                        y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\r\n\r\n                        // Utility\r\n                        point._xScale = xScale;\r\n                        point._yScale = yScale;\r\n                        point._datasetIndex = datasetIndex;\r\n                        point._index = index;\r\n\r\n                        // Desired view properties\r\n                        point._model = {\r\n                            x: x,\r\n                            y: y,\r\n                            skip: custom.skip || isNaN(x) || isNaN(y),\r\n                            // Appearance\r\n                            radius: custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\r\n                            pointStyle: custom.pointStyle || helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\r\n                            backgroundColor: me.getPointBackgroundColor(point, index),\r\n                            borderColor: me.getPointBorderColor(point, index),\r\n                            borderWidth: me.getPointBorderWidth(point, index),\r\n                            tension: meta.dataset._model ? meta.dataset._model.tension : 0,\r\n                            steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\r\n                            // Tooltip\r\n                            hitRadius: custom.hitRadius || helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\r\n                        };\r\n                    },\r\n\r\n                    calculatePointY: function(value, index, datasetIndex) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var yScale = me.getScaleForId(meta.yAxisID);\r\n                        var sumPos = 0;\r\n                        var sumNeg = 0;\r\n                        var i, ds, dsMeta;\r\n\r\n                        if (yScale.options.stacked) {\r\n                            for (i = 0; i < datasetIndex; i++) {\r\n                                ds = chart.data.datasets[i];\r\n                                dsMeta = chart.getDatasetMeta(i);\r\n                                if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\r\n                                    var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\r\n                                    if (stackedRightValue < 0) {\r\n                                        sumNeg += stackedRightValue || 0;\r\n                                    } else {\r\n                                        sumPos += stackedRightValue || 0;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            var rightValue = Number(yScale.getRightValue(value));\r\n                            if (rightValue < 0) {\r\n                                return yScale.getPixelForValue(sumNeg + rightValue);\r\n                            }\r\n                            return yScale.getPixelForValue(sumPos + rightValue);\r\n                        }\r\n\r\n                        return yScale.getPixelForValue(value);\r\n                    },\r\n\r\n                    updateBezierControlPoints: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var area = me.chart.chartArea;\r\n                        var points = (meta.data || []);\r\n                        var i, ilen, point, model, controlPoints;\r\n\r\n                        // Only consider points that are drawn in case the spanGaps option is used\r\n                        if (meta.dataset._model.spanGaps) {\r\n                            points = points.filter(function(pt) {\r\n                                return !pt._model.skip;\r\n                            });\r\n                        }\r\n\r\n                        function capControlPoint(pt, min, max) {\r\n                            return Math.max(Math.min(pt, max), min);\r\n                        }\r\n\r\n                        if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\r\n                            helpers.splineCurveMonotone(points);\r\n                        } else {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                point = points[i];\r\n                                model = point._model;\r\n                                controlPoints = helpers.splineCurve(\r\n                                    helpers.previousItem(points, i)._model,\r\n                                    model,\r\n                                    helpers.nextItem(points, i)._model,\r\n                                    meta.dataset._model.tension\r\n                                );\r\n                                model.controlPointPreviousX = controlPoints.previous.x;\r\n                                model.controlPointPreviousY = controlPoints.previous.y;\r\n                                model.controlPointNextX = controlPoints.next.x;\r\n                                model.controlPointNextY = controlPoints.next.y;\r\n                            }\r\n                        }\r\n\r\n                        if (me.chart.options.elements.line.capBezierPoints) {\r\n                            for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n                                model = points[i]._model;\r\n                                model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\r\n                                model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\r\n                                model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\r\n                                model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var meta = me.getMeta();\r\n                        var points = meta.data || [];\r\n                        var area = chart.chartArea;\r\n                        var ilen = points.length;\r\n                        var i = 0;\r\n\r\n                        Chart.canvasHelpers.clipArea(chart.ctx, area);\r\n\r\n                        if (lineEnabled(me.getDataset(), chart.options)) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        Chart.canvasHelpers.unclipArea(chart.ctx);\r\n\r\n                        // Draw the points\r\n                        for (; i < ilen; ++i) {\r\n                            points[i].draw(area);\r\n                        }\r\n                    },\r\n\r\n                    setHoverStyle: function(point) {\r\n                        // Point\r\n                        var dataset = this.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        model.radius = custom.hoverRadius || helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n                        model.backgroundColor = custom.hoverBackgroundColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth || helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(point) {\r\n                        var me = this;\r\n                        var dataset = me.chart.data.datasets[point._datasetIndex];\r\n                        var index = point._index;\r\n                        var custom = point.custom || {};\r\n                        var model = point._model;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n\r\n                        model.radius = custom.radius || helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\r\n                        model.backgroundColor = me.getPointBackgroundColor(point, index);\r\n                        model.borderColor = me.getPointBorderColor(point, index);\r\n                        model.borderWidth = me.getPointBorderWidth(point, index);\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, {}],\r\n        19: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                Chart.defaults.polarArea = {\r\n\r\n                    scale: {\r\n                        type: 'radialLinear',\r\n                        angleLines: {\r\n                            display: false\r\n                        },\r\n                        gridLines: {\r\n                            circular: true\r\n                        },\r\n                        pointLabels: {\r\n                            display: false\r\n                        },\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    },\r\n\r\n                    // Boolean - Whether to animate the rotation of the chart\r\n                    animation: {\r\n                        animateRotate: true,\r\n                        animateScale: true\r\n                    },\r\n\r\n                    startAngle: -0.5 * Math.PI,\r\n                    aspectRatio: 1,\r\n                    legendCallback: function(chart) {\r\n                        var text = [];\r\n                        text.push('<ul class=\"' + chart.id + '-legend\">');\r\n\r\n                        var data = chart.data;\r\n                        var datasets = data.datasets;\r\n                        var labels = data.labels;\r\n\r\n                        if (datasets.length) {\r\n                            for (var i = 0; i < datasets[0].data.length; ++i) {\r\n                                text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\r\n                                if (labels[i]) {\r\n                                    text.push(labels[i]);\r\n                                }\r\n                                text.push('</li>');\r\n                            }\r\n                        }\r\n\r\n                        text.push('</ul>');\r\n                        return text.join('');\r\n                    },\r\n                    legend: {\r\n                        labels: {\r\n                            generateLabels: function(chart) {\r\n                                var data = chart.data;\r\n                                if (data.labels.length && data.datasets.length) {\r\n                                    return data.labels.map(function(label, i) {\r\n                                        var meta = chart.getDatasetMeta(0);\r\n                                        var ds = data.datasets[0];\r\n                                        var arc = meta.data[i];\r\n                                        var custom = arc.custom || {};\r\n                                        var getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n                                        var arcOpts = chart.options.elements.arc;\r\n                                        var fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\r\n                                        var stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\r\n                                        var bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\r\n\r\n                                        return {\r\n                                            text: label,\r\n                                            fillStyle: fill,\r\n                                            strokeStyle: stroke,\r\n                                            lineWidth: bw,\r\n                                            hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\r\n\r\n                                            // Extra data used for toggling the correct item\r\n                                            index: i\r\n                                        };\r\n                                    });\r\n                                }\r\n                                return [];\r\n                            }\r\n                        },\r\n\r\n                        onClick: function(e, legendItem) {\r\n                            var index = legendItem.index;\r\n                            var chart = this.chart;\r\n                            var i, ilen, meta;\r\n\r\n                            for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\r\n                                meta = chart.getDatasetMeta(i);\r\n                                meta.data[index].hidden = !meta.data[index].hidden;\r\n                            }\r\n\r\n                            chart.update();\r\n                        }\r\n                    },\r\n\r\n                    // Need to override these to give a nice default\r\n                    tooltips: {\r\n                        callbacks: {\r\n                            title: function() {\r\n                                return '';\r\n                            },\r\n                            label: function(tooltipItem, data) {\r\n                                return data.labels[tooltipItem.index] + ': ' + tooltipItem.yLabel;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                Chart.controllers.polarArea = Chart.DatasetController.extend({\r\n\r\n                    dataElementType: Chart.elements.Arc,\r\n\r\n                    linkScales: helpers.noop,\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var chartArea = chart.chartArea;\r\n                        var meta = me.getMeta();\r\n                        var opts = chart.options;\r\n                        var arcOpts = opts.elements.arc;\r\n                        var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\r\n                        chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\r\n                        chart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\r\n                        chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\r\n\r\n                        me.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\r\n                        me.innerRadius = me.outerRadius - chart.radiusLength;\r\n\r\n                        meta.count = me.countVisibleElements();\r\n\r\n                        helpers.each(meta.data, function(arc, index) {\r\n                            me.updateElement(arc, index, reset);\r\n                        });\r\n                    },\r\n\r\n                    updateElement: function(arc, index, reset) {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var dataset = me.getDataset();\r\n                        var opts = chart.options;\r\n                        var animationOpts = opts.animation;\r\n                        var scale = chart.scale;\r\n                        var getValueAtIndexOrDefault = helpers.getValueAtIndexOrDefault;\r\n                        var labels = chart.data.labels;\r\n\r\n                        var circumference = me.calculateCircumference(dataset.data[index]);\r\n                        var centerX = scale.xCenter;\r\n                        var centerY = scale.yCenter;\r\n\r\n                        // If there is NaN data before us, we need to calculate the starting angle correctly.\r\n                        // We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\r\n                        var visibleCount = 0;\r\n                        var meta = me.getMeta();\r\n                        for (var i = 0; i < index; ++i) {\r\n                            if (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\r\n                                ++visibleCount;\r\n                            }\r\n                        }\r\n\r\n                        // var negHalfPI = -0.5 * Math.PI;\r\n                        var datasetStartAngle = opts.startAngle;\r\n                        var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\r\n                        var startAngle = datasetStartAngle + (circumference * visibleCount);\r\n                        var endAngle = startAngle + (arc.hidden ? 0 : circumference);\r\n\r\n                        var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\r\n\r\n                        helpers.extend(arc, {\r\n                            // Utility\r\n                            _datasetIndex: me.index,\r\n                            _index: index,\r\n                            _scale: scale,\r\n\r\n                            // Desired view properties\r\n                            _model: {\r\n                                x: centerX,\r\n                                y: centerY,\r\n                                innerRadius: 0,\r\n                                outerRadius: reset ? resetRadius : distance,\r\n                                startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\r\n                                endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\r\n                                label: getValueAtIndexOrDefault(labels, index, labels[index])\r\n                            }\r\n                        });\r\n\r\n                        // Apply border and fill style\r\n                        me.removeHoverStyle(arc);\r\n\r\n                        arc.pivot();\r\n                    },\r\n\r\n                    removeHoverStyle: function(arc) {\r\n                        Chart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\r\n                    },\r\n\r\n                    countVisibleElements: function() {\r\n                        var dataset = this.getDataset();\r\n                        var meta = this.getMeta();\r\n                        var count = 0;\r\n\r\n                        helpers.each(meta.data, function(element, index) {\r\n                            if (!isNaN(dataset.data[index]) && !element.hidden) {\r\n                                count++;\r\n                            }\r\n                        });\r\n\r\n                        return count;\r\n                    },\r\n\r\n                    calculateCircumference: function(value) {\r\n                        var count = this.getMeta().count;\r\n                        if (count > 0 && !isNaN(value)) {\r\n                            return (2 * Math.PI) / count;\r\n                        }\r\n                        return 0;\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, {}],\r\n        20: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                Chart.defaults.radar = {\r\n                    aspectRatio: 1,\r\n                    scale: {\r\n                        type: 'radialLinear'\r\n                    },\r\n                    elements: {\r\n                        line: {\r\n                            tension: 0 // no bezier in radar\r\n                        }\r\n                    }\r\n                };\r\n\r\n                Chart.controllers.radar = Chart.DatasetController.extend({\r\n\r\n                    datasetElementType: Chart.elements.Line,\r\n\r\n                    dataElementType: Chart.elements.Point,\r\n\r\n                    linkScales: helpers.noop,\r\n\r\n                    update: function(reset) {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var line = meta.dataset;\r\n                        var points = meta.data;\r\n                        var custom = line.custom || {};\r\n                        var dataset = me.getDataset();\r\n                        var lineElementOptions = me.chart.options.elements.line;\r\n                        var scale = me.chart.scale;\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\r\n                            dataset.lineTension = dataset.tension;\r\n                        }\r\n\r\n                        helpers.extend(meta.dataset, {\r\n                            // Utility\r\n                            _datasetIndex: me.index,\r\n                            _scale: scale,\r\n                            // Data\r\n                            _children: points,\r\n                            _loop: true,\r\n                            // Model\r\n                            _model: {\r\n                                // Appearance\r\n                                tension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, lineElementOptions.tension),\r\n                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\r\n                                borderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\r\n                                borderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\r\n                                fill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\r\n                                borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\r\n                                borderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\r\n                                borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\r\n                                borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\r\n                            }\r\n                        });\r\n\r\n                        meta.dataset.pivot();\r\n\r\n                        // Update Points\r\n                        helpers.each(points, function(point, index) {\r\n                            me.updateElement(point, index, reset);\r\n                        }, me);\r\n\r\n                        // Update bezier control points\r\n                        me.updateBezierControlPoints();\r\n                    },\r\n                    updateElement: function(point, index, reset) {\r\n                        var me = this;\r\n                        var custom = point.custom || {};\r\n                        var dataset = me.getDataset();\r\n                        var scale = me.chart.scale;\r\n                        var pointElementOptions = me.chart.options.elements.point;\r\n                        var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\r\n\r\n                        // Compatibility: If the properties are defined with only the old name, use those values\r\n                        if ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\r\n                            dataset.pointRadius = dataset.radius;\r\n                        }\r\n                        if ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\r\n                            dataset.pointHitRadius = dataset.hitRadius;\r\n                        }\r\n\r\n                        helpers.extend(point, {\r\n                            // Utility\r\n                            _datasetIndex: me.index,\r\n                            _index: index,\r\n                            _scale: scale,\r\n\r\n                            // Desired view properties\r\n                            _model: {\r\n                                x: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\r\n                                y: reset ? scale.yCenter : pointPosition.y,\r\n\r\n                                // Appearance\r\n                                tension: custom.tension ? custom.tension : helpers.getValueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\r\n                                radius: custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\r\n                                backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\r\n                                borderColor: custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\r\n                                borderWidth: custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\r\n                                pointStyle: custom.pointStyle ? custom.pointStyle : helpers.getValueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\r\n\r\n                                // Tooltip\r\n                                hitRadius: custom.hitRadius ? custom.hitRadius : helpers.getValueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\r\n                            }\r\n                        });\r\n\r\n                        point._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\r\n                    },\r\n                    updateBezierControlPoints: function() {\r\n                        var chartArea = this.chart.chartArea;\r\n                        var meta = this.getMeta();\r\n\r\n                        helpers.each(meta.data, function(point, index) {\r\n                            var model = point._model;\r\n                            var controlPoints = helpers.splineCurve(\r\n                                helpers.previousItem(meta.data, index, true)._model,\r\n                                model,\r\n                                helpers.nextItem(meta.data, index, true)._model,\r\n                                model.tension\r\n                            );\r\n\r\n                            // Prevent the bezier going outside of the bounds of the graph\r\n                            model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\r\n                            model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\r\n\r\n                            model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\r\n                            model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\r\n\r\n                            // Now pivot the point for animation\r\n                            point.pivot();\r\n                        });\r\n                    },\r\n\r\n                    setHoverStyle: function(point) {\r\n                        // Point\r\n                        var dataset = this.chart.data.datasets[point._datasetIndex];\r\n                        var custom = point.custom || {};\r\n                        var index = point._index;\r\n                        var model = point._model;\r\n\r\n                        model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.getValueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.getValueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    removeHoverStyle: function(point) {\r\n                        var dataset = this.chart.data.datasets[point._datasetIndex];\r\n                        var custom = point.custom || {};\r\n                        var index = point._index;\r\n                        var model = point._model;\r\n                        var pointElementOptions = this.chart.options.elements.point;\r\n\r\n                        model.radius = custom.radius ? custom.radius : helpers.getValueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.getValueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : helpers.getValueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.getValueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, {}],\r\n        21: [function(require, module, exports) {\r\n            /* global window: false */\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                Chart.defaults.global.animation = {\r\n                    duration: 1000,\r\n                    easing: 'easeOutQuart',\r\n                    onProgress: helpers.noop,\r\n                    onComplete: helpers.noop\r\n                };\r\n\r\n                Chart.Animation = Chart.Element.extend({\r\n                    chart: null, // the animation associated chart instance\r\n                    currentStep: 0, // the current animation step\r\n                    numSteps: 60, // default number of steps\r\n                    easing: '', // the easing to use for this animation\r\n                    render: null, // render function used by the animation service\r\n\r\n                    onAnimationProgress: null, // user specified callback to fire on each step of the animation\r\n                    onAnimationComplete: null, // user specified callback to fire when the animation finishes\r\n                });\r\n\r\n                Chart.animationService = {\r\n                    frameDuration: 17,\r\n                    animations: [],\r\n                    dropFrames: 0,\r\n                    request: null,\r\n\r\n                    /**\r\n                     * @param {Chart} chart - The chart to animate.\r\n                     * @param {Chart.Animation} animation - The animation that we will animate.\r\n                     * @param {Number} duration - The animation duration in ms.\r\n                     * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\r\n                     */\r\n                    addAnimation: function(chart, animation, duration, lazy) {\r\n                        var animations = this.animations;\r\n                        var i, ilen;\r\n\r\n                        animation.chart = chart;\r\n\r\n                        if (!lazy) {\r\n                            chart.animating = true;\r\n                        }\r\n\r\n                        for (i = 0, ilen = animations.length; i < ilen; ++i) {\r\n                            if (animations[i].chart === chart) {\r\n                                animations[i] = animation;\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        animations.push(animation);\r\n\r\n                        // If there are no animations queued, manually kickstart a digest, for lack of a better word\r\n                        if (animations.length === 1) {\r\n                            this.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    cancelAnimation: function(chart) {\r\n                        var index = helpers.findIndex(this.animations, function(animation) {\r\n                            return animation.chart === chart;\r\n                        });\r\n\r\n                        if (index !== -1) {\r\n                            this.animations.splice(index, 1);\r\n                            chart.animating = false;\r\n                        }\r\n                    },\r\n\r\n                    requestAnimationFrame: function() {\r\n                        var me = this;\r\n                        if (me.request === null) {\r\n                            // Skip animation frame requests until the active one is executed.\r\n                            // This can happen when processing mouse events, e.g. 'mousemove'\r\n                            // and 'mouseout' events will trigger multiple renders.\r\n                            me.request = helpers.requestAnimFrame.call(window, function() {\r\n                                me.request = null;\r\n                                me.startDigest();\r\n                            });\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    startDigest: function() {\r\n                        var me = this;\r\n                        var startTime = Date.now();\r\n                        var framesToDrop = 0;\r\n\r\n                        if (me.dropFrames > 1) {\r\n                            framesToDrop = Math.floor(me.dropFrames);\r\n                            me.dropFrames = me.dropFrames % 1;\r\n                        }\r\n\r\n                        me.advance(1 + framesToDrop);\r\n\r\n                        var endTime = Date.now();\r\n\r\n                        me.dropFrames += (endTime - startTime) / me.frameDuration;\r\n\r\n                        // Do we have more stuff to animate?\r\n                        if (me.animations.length > 0) {\r\n                            me.requestAnimationFrame();\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    advance: function(count) {\r\n                        var animations = this.animations;\r\n                        var animation, chart;\r\n                        var i = 0;\r\n\r\n                        while (i < animations.length) {\r\n                            animation = animations[i];\r\n                            chart = animation.chart;\r\n\r\n                            animation.currentStep = (animation.currentStep || 0) + count;\r\n                            animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\r\n\r\n                            helpers.callback(animation.render, [chart, animation], chart);\r\n                            helpers.callback(animation.onAnimationProgress, [animation], chart);\r\n\r\n                            if (animation.currentStep >= animation.numSteps) {\r\n                                helpers.callback(animation.onAnimationComplete, [animation], chart);\r\n                                chart.animating = false;\r\n                                animations.splice(i, 1);\r\n                            } else {\r\n                                ++i;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation instead\r\n                 * @prop Chart.Animation#animationObject\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'animationObject', {\r\n                    get: function() {\r\n                        return this;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.Animation#chart instead\r\n                 * @prop Chart.Animation#chartInstance\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                Object.defineProperty(Chart.Animation.prototype, 'chartInstance', {\r\n                    get: function() {\r\n                        return this.chart;\r\n                    },\r\n                    set: function(value) {\r\n                        this.chart = value;\r\n                    }\r\n                });\r\n\r\n            };\r\n\r\n        }, {}],\r\n        22: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                // Global Chart canvas helpers object for drawing items to canvas\r\n                var helpers = Chart.canvasHelpers = {};\r\n\r\n                helpers.drawPoint = function(ctx, pointStyle, radius, x, y) {\r\n                    var type, edgeLength, xOffset, yOffset, height, size;\r\n\r\n                    if (typeof pointStyle === 'object') {\r\n                        type = pointStyle.toString();\r\n                        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n                            ctx.drawImage(pointStyle, x - pointStyle.width / 2, y - pointStyle.height / 2, pointStyle.width, pointStyle.height);\r\n                            return;\r\n                        }\r\n                    }\r\n\r\n                    if (isNaN(radius) || radius <= 0) {\r\n                        return;\r\n                    }\r\n\r\n                    switch (pointStyle) {\r\n                        // Default includes circle\r\n                        default: ctx.beginPath();\r\n                        ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n                        ctx.closePath();\r\n                        ctx.fill();\r\n                        break;\r\n                        case 'triangle':\r\n                                ctx.beginPath();\r\n                            edgeLength = 3 * radius / Math.sqrt(3);\r\n                            height = edgeLength * Math.sqrt(3) / 2;\r\n                            ctx.moveTo(x - edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x + edgeLength / 2, y + height / 3);\r\n                            ctx.lineTo(x, y - 2 * height / 3);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rect':\r\n                                size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.fillRect(x - size, y - size, 2 * size, 2 * size);\r\n                            ctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\r\n                            break;\r\n                        case 'rectRounded':\r\n                                var offset = radius / Math.SQRT2;\r\n                            var leftX = x - offset;\r\n                            var topY = y - offset;\r\n                            var sideSize = Math.SQRT2 * radius;\r\n                            Chart.helpers.drawRoundedRectangle(ctx, leftX, topY, sideSize, sideSize, radius / 2);\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'rectRot':\r\n                                size = 1 / Math.SQRT2 * radius;\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(x - size, y);\r\n                            ctx.lineTo(x, y + size);\r\n                            ctx.lineTo(x + size, y);\r\n                            ctx.lineTo(x, y - size);\r\n                            ctx.closePath();\r\n                            ctx.fill();\r\n                            break;\r\n                        case 'cross':\r\n                                ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'crossRot':\r\n                                ctx.beginPath();\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'star':\r\n                                ctx.beginPath();\r\n                            ctx.moveTo(x, y + radius);\r\n                            ctx.lineTo(x, y - radius);\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            xOffset = Math.cos(Math.PI / 4) * radius;\r\n                            yOffset = Math.sin(Math.PI / 4) * radius;\r\n                            ctx.moveTo(x - xOffset, y - yOffset);\r\n                            ctx.lineTo(x + xOffset, y + yOffset);\r\n                            ctx.moveTo(x - xOffset, y + yOffset);\r\n                            ctx.lineTo(x + xOffset, y - yOffset);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'line':\r\n                                ctx.beginPath();\r\n                            ctx.moveTo(x - radius, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                        case 'dash':\r\n                                ctx.beginPath();\r\n                            ctx.moveTo(x, y);\r\n                            ctx.lineTo(x + radius, y);\r\n                            ctx.closePath();\r\n                            break;\r\n                    }\r\n\r\n                    ctx.stroke();\r\n                };\r\n\r\n                helpers.clipArea = function(ctx, clipArea) {\r\n                    ctx.save();\r\n                    ctx.beginPath();\r\n                    ctx.rect(clipArea.left, clipArea.top, clipArea.right - clipArea.left, clipArea.bottom - clipArea.top);\r\n                    ctx.clip();\r\n                };\r\n\r\n                helpers.unclipArea = function(ctx) {\r\n                    ctx.restore();\r\n                };\r\n\r\n                helpers.lineTo = function(ctx, previous, target, flip) {\r\n                    if (target.steppedLine) {\r\n                        if (target.steppedLine === 'after') {\r\n                            ctx.lineTo(previous.x, target.y);\r\n                        } else {\r\n                            ctx.lineTo(target.x, previous.y);\r\n                        }\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    if (!target.tension) {\r\n                        ctx.lineTo(target.x, target.y);\r\n                        return;\r\n                    }\r\n\r\n                    ctx.bezierCurveTo(\r\n                        flip ? previous.controlPointPreviousX : previous.controlPointNextX,\r\n                        flip ? previous.controlPointPreviousY : previous.controlPointNextY,\r\n                        flip ? target.controlPointNextX : target.controlPointPreviousX,\r\n                        flip ? target.controlPointNextY : target.controlPointPreviousY,\r\n                        target.x,\r\n                        target.y);\r\n                };\r\n\r\n                Chart.helpers.canvas = helpers;\r\n            };\r\n\r\n        }, {}],\r\n        23: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n                var plugins = Chart.plugins;\r\n                var platform = Chart.platform;\r\n\r\n                // Create a dictionary of chart types, to allow for extension of existing types\r\n                Chart.types = {};\r\n\r\n                // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\r\n                // Destroy method on the chart will remove the instance of the chart from this reference.\r\n                Chart.instances = {};\r\n\r\n                // Controllers available for dataset visualization eg. bar, line, slice, etc.\r\n                Chart.controllers = {};\r\n\r\n                /**\r\n                 * Initializes the given config with global and chart default values.\r\n                 */\r\n                function initConfig(config) {\r\n                    config = config || {};\r\n\r\n                    // Do NOT use configMerge() for the data object because this method merges arrays\r\n                    // and so would change references to labels and datasets, preventing data updates.\r\n                    var data = config.data = config.data || {};\r\n                    data.datasets = data.datasets || [];\r\n                    data.labels = data.labels || [];\r\n\r\n                    config.options = helpers.configMerge(\r\n                        Chart.defaults.global,\r\n                        Chart.defaults[config.type],\r\n                        config.options || {});\r\n\r\n                    return config;\r\n                }\r\n\r\n                /**\r\n                 * Updates the config of the chart\r\n                 * @param chart {Chart} chart to update the options for\r\n                 */\r\n                function updateConfig(chart) {\r\n                    var newOptions = chart.options;\r\n\r\n                    // Update Scale(s) with options\r\n                    if (newOptions.scale) {\r\n                        chart.scale.options = newOptions.scale;\r\n                    } else if (newOptions.scales) {\r\n                        newOptions.scales.xAxes.concat(newOptions.scales.yAxes).forEach(function(scaleOptions) {\r\n                            chart.scales[scaleOptions.id].options = scaleOptions;\r\n                        });\r\n                    }\r\n\r\n                    // Tooltip\r\n                    chart.tooltip._options = newOptions.tooltips;\r\n                }\r\n\r\n                function positionIsHorizontal(position) {\r\n                    return position === 'top' || position === 'bottom';\r\n                }\r\n\r\n                helpers.extend(Chart.prototype, /** @lends Chart */ {\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    construct: function(item, config) {\r\n                        var me = this;\r\n\r\n                        config = initConfig(config);\r\n\r\n                        var context = platform.acquireContext(item, config);\r\n                        var canvas = context && context.canvas;\r\n                        var height = canvas && canvas.height;\r\n                        var width = canvas && canvas.width;\r\n\r\n                        me.id = helpers.uid();\r\n                        me.ctx = context;\r\n                        me.canvas = canvas;\r\n                        me.config = config;\r\n                        me.width = width;\r\n                        me.height = height;\r\n                        me.aspectRatio = height ? width / height : null;\r\n                        me.options = config.options;\r\n                        me._bufferedRender = false;\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, Chart and Chart.Controller have been merged,\r\n                         * the \"instance\" still need to be defined since it might be called from plugins.\r\n                         * @prop Chart#chart\r\n                         * @deprecated since version 2.6.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        me.chart = me;\r\n                        me.controller = me; // chart.chart.controller #inception\r\n\r\n                        // Add the chart instance to the global namespace\r\n                        Chart.instances[me.id] = me;\r\n\r\n                        // Define alias to the config data: `chart.data === chart.config.data`\r\n                        Object.defineProperty(me, 'data', {\r\n                            get: function() {\r\n                                return me.config.data;\r\n                            },\r\n                            set: function(value) {\r\n                                me.config.data = value;\r\n                            }\r\n                        });\r\n\r\n                        if (!context || !canvas) {\r\n                            // The given item is not a compatible context2d element, let's return before finalizing\r\n                            // the chart initialization but after setting basic chart / controller properties that\r\n                            // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\r\n                            // https://github.com/chartjs/Chart.js/issues/2807\r\n                            console.error(\"Failed to create chart: can't acquire context from the given item\");\r\n                            return;\r\n                        }\r\n\r\n                        me.initialize();\r\n                        me.update();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    initialize: function() {\r\n                        var me = this;\r\n\r\n                        // Before init plugin notification\r\n                        plugins.notify(me, 'beforeInit');\r\n\r\n                        helpers.retinaScale(me);\r\n\r\n                        me.bindEvents();\r\n\r\n                        if (me.options.responsive) {\r\n                            // Initial resize before chart draws (must be silent to preserve initial animations).\r\n                            me.resize(true);\r\n                        }\r\n\r\n                        // Make sure scales have IDs and are built before we build any controllers.\r\n                        me.ensureScalesHaveIDs();\r\n                        me.buildScales();\r\n                        me.initToolTip();\r\n\r\n                        // After init plugin notification\r\n                        plugins.notify(me, 'afterInit');\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    clear: function() {\r\n                        helpers.clear(this);\r\n                        return this;\r\n                    },\r\n\r\n                    stop: function() {\r\n                        // Stops any current animation loop occurring\r\n                        Chart.animationService.cancelAnimation(this);\r\n                        return this;\r\n                    },\r\n\r\n                    resize: function(silent) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var canvas = me.canvas;\r\n                        var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\r\n\r\n                        // the canvas render width and height will be casted to integers so make sure that\r\n                        // the canvas display style uses the same integer values to avoid blurring effect.\r\n                        var newWidth = Math.floor(helpers.getMaximumWidth(canvas));\r\n                        var newHeight = Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas));\r\n\r\n                        if (me.width === newWidth && me.height === newHeight) {\r\n                            return;\r\n                        }\r\n\r\n                        canvas.width = me.width = newWidth;\r\n                        canvas.height = me.height = newHeight;\r\n                        canvas.style.width = newWidth + 'px';\r\n                        canvas.style.height = newHeight + 'px';\r\n\r\n                        helpers.retinaScale(me);\r\n\r\n                        if (!silent) {\r\n                            // Notify any plugins about the resize\r\n                            var newSize = { width: newWidth, height: newHeight };\r\n                            plugins.notify(me, 'resize', [newSize]);\r\n\r\n                            // Notify of resize\r\n                            if (me.options.onResize) {\r\n                                me.options.onResize(me, newSize);\r\n                            }\r\n\r\n                            me.stop();\r\n                            me.update(me.options.responsiveAnimationDuration);\r\n                        }\r\n                    },\r\n\r\n                    ensureScalesHaveIDs: function() {\r\n                        var options = this.options;\r\n                        var scalesOptions = options.scales || {};\r\n                        var scaleOptions = options.scale;\r\n\r\n                        helpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\r\n                            xAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\r\n                        });\r\n\r\n                        helpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\r\n                            yAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\r\n                        });\r\n\r\n                        if (scaleOptions) {\r\n                            scaleOptions.id = scaleOptions.id || 'scale';\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Builds a map of scale ID to scale object for future lookup.\r\n                     */\r\n                    buildScales: function() {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        var scales = me.scales = {};\r\n                        var items = [];\r\n\r\n                        if (options.scales) {\r\n                            items = items.concat(\r\n                                (options.scales.xAxes || []).map(function(xAxisOptions) {\r\n                                    return { options: xAxisOptions, dtype: 'category', dposition: 'bottom' };\r\n                                }),\r\n                                (options.scales.yAxes || []).map(function(yAxisOptions) {\r\n                                    return { options: yAxisOptions, dtype: 'linear', dposition: 'left' };\r\n                                })\r\n                            );\r\n                        }\r\n\r\n                        if (options.scale) {\r\n                            items.push({\r\n                                options: options.scale,\r\n                                dtype: 'radialLinear',\r\n                                isDefault: true,\r\n                                dposition: 'chartArea'\r\n                            });\r\n                        }\r\n\r\n                        helpers.each(items, function(item) {\r\n                            var scaleOptions = item.options;\r\n                            var scaleType = helpers.getValueOrDefault(scaleOptions.type, item.dtype);\r\n                            var scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\r\n                            if (!scaleClass) {\r\n                                return;\r\n                            }\r\n\r\n                            if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\r\n                                scaleOptions.position = item.dposition;\r\n                            }\r\n\r\n                            var scale = new scaleClass({\r\n                                id: scaleOptions.id,\r\n                                options: scaleOptions,\r\n                                ctx: me.ctx,\r\n                                chart: me\r\n                            });\r\n\r\n                            scales[scale.id] = scale;\r\n\r\n                            // TODO(SB): I think we should be able to remove this custom case (options.scale)\r\n                            // and consider it as a regular scale part of the \"scales\"\" map only! This would\r\n                            // make the logic easier and remove some useless? custom code.\r\n                            if (item.isDefault) {\r\n                                me.scale = scale;\r\n                            }\r\n                        });\r\n\r\n                        Chart.scaleService.addScalesToLayout(this);\r\n                    },\r\n\r\n                    buildOrUpdateControllers: function() {\r\n                        var me = this;\r\n                        var types = [];\r\n                        var newControllers = [];\r\n\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            var meta = me.getDatasetMeta(datasetIndex);\r\n                            if (!meta.type) {\r\n                                meta.type = dataset.type || me.config.type;\r\n                            }\r\n\r\n                            types.push(meta.type);\r\n\r\n                            if (meta.controller) {\r\n                                meta.controller.updateIndex(datasetIndex);\r\n                            } else {\r\n                                var ControllerClass = Chart.controllers[meta.type];\r\n                                if (ControllerClass === undefined) {\r\n                                    throw new Error('\"' + meta.type + '\" is not a chart type.');\r\n                                }\r\n\r\n                                meta.controller = new ControllerClass(me, datasetIndex);\r\n                                newControllers.push(meta.controller);\r\n                            }\r\n                        }, me);\r\n\r\n                        if (types.length > 1) {\r\n                            for (var i = 1; i < types.length; i++) {\r\n                                if (types[i] !== types[i - 1]) {\r\n                                    me.isCombo = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        return newControllers;\r\n                    },\r\n\r\n                    /**\r\n                     * Reset the elements of all datasets\r\n                     * @private\r\n                     */\r\n                    resetElements: function() {\r\n                        var me = this;\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.reset();\r\n                        }, me);\r\n                    },\r\n\r\n                    /**\r\n                     * Resets the chart back to it's state before the initial animation\r\n                     */\r\n                    reset: function() {\r\n                        this.resetElements();\r\n                        this.tooltip.initialize();\r\n                    },\r\n\r\n                    update: function(animationDuration, lazy) {\r\n                        var me = this;\r\n\r\n                        updateConfig(me);\r\n\r\n                        if (plugins.notify(me, 'beforeUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // In case the entire data object changed\r\n                        me.tooltip._data = me.data;\r\n\r\n                        // Make sure dataset controllers are updated and new controllers are reset\r\n                        var newControllers = me.buildOrUpdateControllers();\r\n\r\n                        // Make sure all dataset controllers have correct meta data counts\r\n                        helpers.each(me.data.datasets, function(dataset, datasetIndex) {\r\n                            me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\r\n                        }, me);\r\n\r\n                        me.updateLayout();\r\n\r\n                        // Can only reset the new controllers after the scales have been updated\r\n                        helpers.each(newControllers, function(controller) {\r\n                            controller.reset();\r\n                        });\r\n\r\n                        me.updateDatasets();\r\n\r\n                        // Do this before render so that any plugins that need final scale updates can use it\r\n                        plugins.notify(me, 'afterUpdate');\r\n\r\n                        if (me._bufferedRender) {\r\n                            me._bufferedRequest = {\r\n                                lazy: lazy,\r\n                                duration: animationDuration\r\n                            };\r\n                        } else {\r\n                            me.render(animationDuration, lazy);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\r\n                     * hook, in which case, plugins will not be called on `afterLayout`.\r\n                     * @private\r\n                     */\r\n                    updateLayout: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeLayout') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        Chart.layoutService.update(this, this.width, this.height);\r\n\r\n                        /**\r\n                         * Provided for backward compatibility, use `afterLayout` instead.\r\n                         * @method IPlugin#afterScaleUpdate\r\n                         * @deprecated since version 2.5.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        plugins.notify(me, 'afterScaleUpdate');\r\n                        plugins.notify(me, 'afterLayout');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDatasets: function() {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            me.updateDataset(i);\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsUpdate');\r\n                    },\r\n\r\n                    /**\r\n                     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\r\n                     * @private\r\n                     */\r\n                    updateDataset: function(index) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.update();\r\n\r\n                        plugins.notify(me, 'afterDatasetUpdate', [args]);\r\n                    },\r\n\r\n                    render: function(duration, lazy) {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeRender') === false) {\r\n                            return;\r\n                        }\r\n\r\n                        var animationOptions = me.options.animation;\r\n                        var onComplete = function(animation) {\r\n                            plugins.notify(me, 'afterRender');\r\n                            helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\r\n                        };\r\n\r\n                        if (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\r\n                            var animation = new Chart.Animation({\r\n                                numSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\r\n                                easing: animationOptions.easing,\r\n\r\n                                render: function(chart, animationObject) {\r\n                                    var easingFunction = helpers.easingEffects[animationObject.easing];\r\n                                    var currentStep = animationObject.currentStep;\r\n                                    var stepDecimal = currentStep / animationObject.numSteps;\r\n\r\n                                    chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\r\n                                },\r\n\r\n                                onAnimationProgress: animationOptions.onProgress,\r\n                                onAnimationComplete: onComplete\r\n                            });\r\n\r\n                            Chart.animationService.addAnimation(me, animation, duration, lazy);\r\n                        } else {\r\n                            me.draw();\r\n\r\n                            // See https://github.com/chartjs/Chart.js/issues/3781\r\n                            onComplete(new Chart.Animation({ numSteps: 0, chart: me }));\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    draw: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        me.clear();\r\n\r\n                        if (easingValue === undefined || easingValue === null) {\r\n                            easingValue = 1;\r\n                        }\r\n\r\n                        me.transition(easingValue);\r\n\r\n                        if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw all the scales\r\n                        helpers.each(me.boxes, function(box) {\r\n                            box.draw(me.chartArea);\r\n                        }, me);\r\n\r\n                        if (me.scale) {\r\n                            me.scale.draw();\r\n                        }\r\n\r\n                        me.drawDatasets(easingValue);\r\n\r\n                        // Finally draw the tooltip\r\n                        me.tooltip.draw();\r\n\r\n                        plugins.notify(me, 'afterDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    transition: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.getDatasetMeta(i).controller.transition(easingValue);\r\n                            }\r\n                        }\r\n\r\n                        me.tooltip.transition(easingValue);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDatasets: function(easingValue) {\r\n                        var me = this;\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Draw datasets reversed to support proper line stacking\r\n                        for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\r\n                            if (me.isDatasetVisible(i)) {\r\n                                me.drawDataset(i, easingValue);\r\n                            }\r\n                        }\r\n\r\n                        plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\r\n                    },\r\n\r\n                    /**\r\n                     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\r\n                     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\r\n                     * @private\r\n                     */\r\n                    drawDataset: function(index, easingValue) {\r\n                        var me = this;\r\n                        var meta = me.getDatasetMeta(index);\r\n                        var args = {\r\n                            meta: meta,\r\n                            index: index,\r\n                            easingValue: easingValue\r\n                        };\r\n\r\n                        if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        meta.controller.draw(easingValue);\r\n\r\n                        plugins.notify(me, 'afterDatasetDraw', [args]);\r\n                    },\r\n\r\n                    // Get the single element that was clicked on\r\n                    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\r\n                    getElementAtEvent: function(e) {\r\n                        return Chart.Interaction.modes.single(this, e);\r\n                    },\r\n\r\n                    getElementsAtEvent: function(e) {\r\n                        return Chart.Interaction.modes.label(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtXAxis: function(e) {\r\n                        return Chart.Interaction.modes['x-axis'](this, e, { intersect: true });\r\n                    },\r\n\r\n                    getElementsAtEventForMode: function(e, mode, options) {\r\n                        var method = Chart.Interaction.modes[mode];\r\n                        if (typeof method === 'function') {\r\n                            return method(this, e, options);\r\n                        }\r\n\r\n                        return [];\r\n                    },\r\n\r\n                    getDatasetAtEvent: function(e) {\r\n                        return Chart.Interaction.modes.dataset(this, e, { intersect: true });\r\n                    },\r\n\r\n                    getDatasetMeta: function(datasetIndex) {\r\n                        var me = this;\r\n                        var dataset = me.data.datasets[datasetIndex];\r\n                        if (!dataset._meta) {\r\n                            dataset._meta = {};\r\n                        }\r\n\r\n                        var meta = dataset._meta[me.id];\r\n                        if (!meta) {\r\n                            meta = dataset._meta[me.id] = {\r\n                                type: null,\r\n                                data: [],\r\n                                dataset: null,\r\n                                controller: null,\r\n                                hidden: null, // See isDatasetVisible() comment\r\n                                xAxisID: null,\r\n                                yAxisID: null\r\n                            };\r\n                        }\r\n\r\n                        return meta;\r\n                    },\r\n\r\n                    getVisibleDatasetCount: function() {\r\n                        var count = 0;\r\n                        for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\r\n                            if (this.isDatasetVisible(i)) {\r\n                                count++;\r\n                            }\r\n                        }\r\n                        return count;\r\n                    },\r\n\r\n                    isDatasetVisible: function(datasetIndex) {\r\n                        var meta = this.getDatasetMeta(datasetIndex);\r\n\r\n                        // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\r\n                        // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\r\n                        return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\r\n                    },\r\n\r\n                    generateLegend: function() {\r\n                        return this.options.legendCallback(this);\r\n                    },\r\n\r\n                    destroy: function() {\r\n                        var me = this;\r\n                        var canvas = me.canvas;\r\n                        var meta, i, ilen;\r\n\r\n                        me.stop();\r\n\r\n                        // dataset controllers need to cleanup associated data\r\n                        for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\r\n                            meta = me.getDatasetMeta(i);\r\n                            if (meta.controller) {\r\n                                meta.controller.destroy();\r\n                                meta.controller = null;\r\n                            }\r\n                        }\r\n\r\n                        if (canvas) {\r\n                            me.unbindEvents();\r\n                            helpers.clear(me);\r\n                            platform.releaseContext(me.ctx);\r\n                            me.canvas = null;\r\n                            me.ctx = null;\r\n                        }\r\n\r\n                        plugins.notify(me, 'destroy');\r\n\r\n                        delete Chart.instances[me.id];\r\n                    },\r\n\r\n                    toBase64Image: function() {\r\n                        return this.canvas.toDataURL.apply(this.canvas, arguments);\r\n                    },\r\n\r\n                    initToolTip: function() {\r\n                        var me = this;\r\n                        me.tooltip = new Chart.Tooltip({\r\n                            _chart: me,\r\n                            _chartInstance: me, // deprecated, backward compatibility\r\n                            _data: me.data,\r\n                            _options: me.options.tooltips\r\n                        }, me);\r\n                        me.tooltip.initialize();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    bindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners = {};\r\n                        var listener = function() {\r\n                            me.eventHandler.apply(me, arguments);\r\n                        };\r\n\r\n                        helpers.each(me.options.events, function(type) {\r\n                            platform.addEventListener(me, type, listener);\r\n                            listeners[type] = listener;\r\n                        });\r\n\r\n                        // Responsiveness is currently based on the use of an iframe, however this method causes\r\n                        // performance issues and could be troublesome when used with ad blockers. So make sure\r\n                        // that the user is still able to create a chart without iframe when responsive is false.\r\n                        // See https://github.com/chartjs/Chart.js/issues/2210\r\n                        if (me.options.responsive) {\r\n                            listener = function() {\r\n                                me.resize();\r\n                            };\r\n\r\n                            platform.addEventListener(me, 'resize', listener);\r\n                            listeners.resize = listener;\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    unbindEvents: function() {\r\n                        var me = this;\r\n                        var listeners = me._listeners;\r\n                        if (!listeners) {\r\n                            return;\r\n                        }\r\n\r\n                        delete me._listeners;\r\n                        helpers.each(listeners, function(listener, type) {\r\n                            platform.removeEventListener(me, type, listener);\r\n                        });\r\n                    },\r\n\r\n                    updateHoverStyle: function(elements, mode, enabled) {\r\n                        var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\r\n                        var element, i, ilen;\r\n\r\n                        for (i = 0, ilen = elements.length; i < ilen; ++i) {\r\n                            element = elements[i];\r\n                            if (element) {\r\n                                this.getDatasetMeta(element._datasetIndex).controller[method](element);\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    eventHandler: function(e) {\r\n                        var me = this;\r\n                        var tooltip = me.tooltip;\r\n\r\n                        if (plugins.notify(me, 'beforeEvent', [e]) === false) {\r\n                            return;\r\n                        }\r\n\r\n                        // Buffer any update calls so that renders do not occur\r\n                        me._bufferedRender = true;\r\n                        me._bufferedRequest = null;\r\n\r\n                        var changed = me.handleEvent(e);\r\n                        changed |= tooltip && tooltip.handleEvent(e);\r\n\r\n                        plugins.notify(me, 'afterEvent', [e]);\r\n\r\n                        var bufferedRequest = me._bufferedRequest;\r\n                        if (bufferedRequest) {\r\n                            // If we have an update that was triggered, we need to do a normal render\r\n                            me.render(bufferedRequest.duration, bufferedRequest.lazy);\r\n                        } else if (changed && !me.animating) {\r\n                            // If entering, leaving, or changing elements, animate the change via pivot\r\n                            me.stop();\r\n\r\n                            // We only need to render at this point. Updating will cause scales to be\r\n                            // recomputed generating flicker & using more memory than necessary.\r\n                            me.render(me.options.hover.animationDuration, true);\r\n                        }\r\n\r\n                        me._bufferedRender = false;\r\n                        me._bufferedRequest = null;\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event the event to handle\r\n                     * @return {Boolean} true if the chart needs to re-render\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me.options || {};\r\n                        var hoverOptions = options.hover;\r\n                        var changed = false;\r\n\r\n                        me.lastActive = me.lastActive || [];\r\n\r\n                        // Find Active Elements for hover and tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me.active = [];\r\n                        } else {\r\n                            me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\r\n                        }\r\n\r\n                        // On Hover hook\r\n                        if (hoverOptions.onHover) {\r\n                            // Need to call with native event here to not break backwards compatibility\r\n                            hoverOptions.onHover.call(me, e.native, me.active);\r\n                        }\r\n\r\n                        if (e.type === 'mouseup' || e.type === 'click') {\r\n                            if (options.onClick) {\r\n                                // Use e.native here for backwards compatibility\r\n                                options.onClick.call(me, e.native, me.active);\r\n                            }\r\n                        }\r\n\r\n                        // Remove styling for last active (even if it may still be active)\r\n                        if (me.lastActive.length) {\r\n                            me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\r\n                        }\r\n\r\n                        // Built in hover styling\r\n                        if (me.active.length && hoverOptions.mode) {\r\n                            me.updateHoverStyle(me.active, hoverOptions.mode, true);\r\n                        }\r\n\r\n                        changed = !helpers.arrayEquals(me.active, me.lastActive);\r\n\r\n                        // Remember Last Actives\r\n                        me.lastActive = me.active;\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart instead.\r\n                 * @class Chart.Controller\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 * @private\r\n                 */\r\n                Chart.Controller = Chart;\r\n            };\r\n\r\n        }, {}],\r\n        24: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\r\n\r\n                /**\r\n                 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\r\n                 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\r\n                 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\r\n                 */\r\n                function listenArrayEvents(array, listener) {\r\n                    if (array._chartjs) {\r\n                        array._chartjs.listeners.push(listener);\r\n                        return;\r\n                    }\r\n\r\n                    Object.defineProperty(array, '_chartjs', {\r\n                        configurable: true,\r\n                        enumerable: false,\r\n                        value: {\r\n                            listeners: [listener]\r\n                        }\r\n                    });\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\r\n                        var base = array[key];\r\n\r\n                        Object.defineProperty(array, key, {\r\n                            configurable: true,\r\n                            enumerable: false,\r\n                            value: function() {\r\n                                var args = Array.prototype.slice.call(arguments);\r\n                                var res = base.apply(this, args);\r\n\r\n                                helpers.each(array._chartjs.listeners, function(object) {\r\n                                    if (typeof object[method] === 'function') {\r\n                                        object[method].apply(object, args);\r\n                                    }\r\n                                });\r\n\r\n                                return res;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Removes the given array event listener and cleanup extra attached properties (such as\r\n                 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\r\n                 */\r\n                function unlistenArrayEvents(array, listener) {\r\n                    var stub = array._chartjs;\r\n                    if (!stub) {\r\n                        return;\r\n                    }\r\n\r\n                    var listeners = stub.listeners;\r\n                    var index = listeners.indexOf(listener);\r\n                    if (index !== -1) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n\r\n                    if (listeners.length > 0) {\r\n                        return;\r\n                    }\r\n\r\n                    arrayEvents.forEach(function(key) {\r\n                        delete array[key];\r\n                    });\r\n\r\n                    delete array._chartjs;\r\n                }\r\n\r\n                // Base class for all dataset controllers (line, bar, etc)\r\n                Chart.DatasetController = function(chart, datasetIndex) {\r\n                    this.initialize(chart, datasetIndex);\r\n                };\r\n\r\n                helpers.extend(Chart.DatasetController.prototype, {\r\n\r\n                    /**\r\n                     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    datasetElementType: null,\r\n\r\n                    /**\r\n                     * Element type used to generate a meta data (e.g. Chart.element.Point).\r\n                     * @type {Chart.core.element}\r\n                     */\r\n                    dataElementType: null,\r\n\r\n                    initialize: function(chart, datasetIndex) {\r\n                        var me = this;\r\n                        me.chart = chart;\r\n                        me.index = datasetIndex;\r\n                        me.linkScales();\r\n                        me.addElements();\r\n                    },\r\n\r\n                    updateIndex: function(datasetIndex) {\r\n                        this.index = datasetIndex;\r\n                    },\r\n\r\n                    linkScales: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var dataset = me.getDataset();\r\n\r\n                        if (meta.xAxisID === null) {\r\n                            meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\r\n                        }\r\n                        if (meta.yAxisID === null) {\r\n                            meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\r\n                        }\r\n                    },\r\n\r\n                    getDataset: function() {\r\n                        return this.chart.data.datasets[this.index];\r\n                    },\r\n\r\n                    getMeta: function() {\r\n                        return this.chart.getDatasetMeta(this.index);\r\n                    },\r\n\r\n                    getScaleForId: function(scaleID) {\r\n                        return this.chart.scales[scaleID];\r\n                    },\r\n\r\n                    reset: function() {\r\n                        this.update(true);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    destroy: function() {\r\n                        if (this._data) {\r\n                            unlistenArrayEvents(this._data, this);\r\n                        }\r\n                    },\r\n\r\n                    createMetaDataset: function() {\r\n                        var me = this;\r\n                        var type = me.datasetElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index\r\n                        });\r\n                    },\r\n\r\n                    createMetaData: function(index) {\r\n                        var me = this;\r\n                        var type = me.dataElementType;\r\n                        return type && new type({\r\n                            _chart: me.chart,\r\n                            _datasetIndex: me.index,\r\n                            _index: index\r\n                        });\r\n                    },\r\n\r\n                    addElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data || [];\r\n                        var metaData = meta.data;\r\n                        var i, ilen;\r\n\r\n                        for (i = 0, ilen = data.length; i < ilen; ++i) {\r\n                            metaData[i] = metaData[i] || me.createMetaData(i);\r\n                        }\r\n\r\n                        meta.dataset = meta.dataset || me.createMetaDataset();\r\n                    },\r\n\r\n                    addElementAndReset: function(index) {\r\n                        var element = this.createMetaData(index);\r\n                        this.getMeta().data.splice(index, 0, element);\r\n                        this.updateElement(element, index, true);\r\n                    },\r\n\r\n                    buildOrUpdateElements: function() {\r\n                        var me = this;\r\n                        var dataset = me.getDataset();\r\n                        var data = dataset.data || (dataset.data = []);\r\n\r\n                        // In order to correctly handle data addition/deletion animation (an thus simulate\r\n                        // real-time charts), we need to monitor these data modifications and synchronize\r\n                        // the internal meta data accordingly.\r\n                        if (me._data !== data) {\r\n                            if (me._data) {\r\n                                // This case happens when the user replaced the data array instance.\r\n                                unlistenArrayEvents(me._data, me);\r\n                            }\r\n\r\n                            listenArrayEvents(data, me);\r\n                            me._data = data;\r\n                        }\r\n\r\n                        // Re-sync meta data in case the user replaced the data array or if we missed\r\n                        // any updates and so make sure that we handle number of datapoints changing.\r\n                        me.resyncElements();\r\n                    },\r\n\r\n                    update: helpers.noop,\r\n\r\n                    transition: function(easingValue) {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].transition(easingValue);\r\n                        }\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.transition(easingValue);\r\n                        }\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var meta = this.getMeta();\r\n                        var elements = meta.data || [];\r\n                        var ilen = elements.length;\r\n                        var i = 0;\r\n\r\n                        if (meta.dataset) {\r\n                            meta.dataset.draw();\r\n                        }\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            elements[i].draw();\r\n                        }\r\n                    },\r\n\r\n                    removeHoverStyle: function(element, elementOpts) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex],\r\n                            index = element._index,\r\n                            custom = element.custom || {},\r\n                            valueOrDefault = helpers.getValueAtIndexOrDefault,\r\n                            model = element._model;\r\n\r\n                        model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\r\n                        model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\r\n                        model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\r\n                    },\r\n\r\n                    setHoverStyle: function(element) {\r\n                        var dataset = this.chart.data.datasets[element._datasetIndex],\r\n                            index = element._index,\r\n                            custom = element.custom || {},\r\n                            valueOrDefault = helpers.getValueAtIndexOrDefault,\r\n                            getHoverColor = helpers.getHoverColor,\r\n                            model = element._model;\r\n\r\n                        model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\r\n                        model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\r\n                        model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    resyncElements: function() {\r\n                        var me = this;\r\n                        var meta = me.getMeta();\r\n                        var data = me.getDataset().data;\r\n                        var numMeta = meta.data.length;\r\n                        var numData = data.length;\r\n\r\n                        if (numData < numMeta) {\r\n                            meta.data.splice(numData, numMeta - numData);\r\n                        } else if (numData > numMeta) {\r\n                            me.insertElements(numMeta, numData - numMeta);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    insertElements: function(start, count) {\r\n                        for (var i = 0; i < count; ++i) {\r\n                            this.addElementAndReset(start + i);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPush: function() {\r\n                        this.insertElements(this.getDataset().data.length - 1, arguments.length);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataPop: function() {\r\n                        this.getMeta().data.pop();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataShift: function() {\r\n                        this.getMeta().data.shift();\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataSplice: function(start, count) {\r\n                        this.getMeta().data.splice(start, count);\r\n                        this.insertElements(start, arguments.length - 2);\r\n                    },\r\n\r\n                    /**\r\n                     * @private\r\n                     */\r\n                    onDataUnshift: function() {\r\n                        this.insertElements(0, arguments.length);\r\n                    }\r\n                });\r\n\r\n                Chart.DatasetController.extend = helpers.inherits;\r\n            };\r\n\r\n        }, {}],\r\n        25: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            var color = require(3);\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                function interpolate(start, view, model, ease) {\r\n                    var keys = Object.keys(model);\r\n                    var i, ilen, key, actual, origin, target, type, c0, c1;\r\n\r\n                    for (i = 0, ilen = keys.length; i < ilen; ++i) {\r\n                        key = keys[i];\r\n\r\n                        target = model[key];\r\n\r\n                        // if a value is added to the model after pivot() has been called, the view\r\n                        // doesn't contain it, so let's initialize the view to the target value.\r\n                        if (!view.hasOwnProperty(key)) {\r\n                            view[key] = target;\r\n                        }\r\n\r\n                        actual = view[key];\r\n\r\n                        if (actual === target || key[0] === '_') {\r\n                            continue;\r\n                        }\r\n\r\n                        if (!start.hasOwnProperty(key)) {\r\n                            start[key] = actual;\r\n                        }\r\n\r\n                        origin = start[key];\r\n\r\n                        type = typeof(target);\r\n\r\n                        if (type === typeof(origin)) {\r\n                            if (type === 'string') {\r\n                                c0 = color(origin);\r\n                                if (c0.valid) {\r\n                                    c1 = color(target);\r\n                                    if (c1.valid) {\r\n                                        view[key] = c1.mix(c0, ease).rgbString();\r\n                                        continue;\r\n                                    }\r\n                                }\r\n                            } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\r\n                                view[key] = origin + (target - origin) * ease;\r\n                                continue;\r\n                            }\r\n                        }\r\n\r\n                        view[key] = target;\r\n                    }\r\n                }\r\n\r\n                Chart.elements = {};\r\n\r\n                Chart.Element = function(configuration) {\r\n                    helpers.extend(this, configuration);\r\n                    this.initialize.apply(this, arguments);\r\n                };\r\n\r\n                helpers.extend(Chart.Element.prototype, {\r\n\r\n                    initialize: function() {\r\n                        this.hidden = false;\r\n                    },\r\n\r\n                    pivot: function() {\r\n                        var me = this;\r\n                        if (!me._view) {\r\n                            me._view = helpers.clone(me._model);\r\n                        }\r\n                        me._start = {};\r\n                        return me;\r\n                    },\r\n\r\n                    transition: function(ease) {\r\n                        var me = this;\r\n                        var model = me._model;\r\n                        var start = me._start;\r\n                        var view = me._view;\r\n\r\n                        // No animation -> No Transition\r\n                        if (!model || ease === 1) {\r\n                            me._view = model;\r\n                            me._start = null;\r\n                            return me;\r\n                        }\r\n\r\n                        if (!view) {\r\n                            view = me._view = {};\r\n                        }\r\n\r\n                        if (!start) {\r\n                            start = me._start = {};\r\n                        }\r\n\r\n                        interpolate(start, view, model, ease);\r\n\r\n                        return me;\r\n                    },\r\n\r\n                    tooltipPosition: function() {\r\n                        return {\r\n                            x: this._model.x,\r\n                            y: this._model.y\r\n                        };\r\n                    },\r\n\r\n                    hasValue: function() {\r\n                        return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\r\n                    }\r\n                });\r\n\r\n                Chart.Element.extend = helpers.inherits;\r\n            };\r\n\r\n        }, { \"3\": 3 }],\r\n        26: [function(require, module, exports) {\r\n            /* global window: false */\r\n            /* global document: false */\r\n            'use strict';\r\n\r\n            var color = require(3);\r\n\r\n            module.exports = function(Chart) {\r\n                // Global Chart helpers object for utility methods and classes\r\n                var helpers = Chart.helpers = {};\r\n\r\n                // -- Basic js utility methods\r\n                helpers.each = function(loopable, callback, self, reverse) {\r\n                    // Check to see if null or undefined firstly.\r\n                    var i, len;\r\n                    if (helpers.isArray(loopable)) {\r\n                        len = loopable.length;\r\n                        if (reverse) {\r\n                            for (i = len - 1; i >= 0; i--) {\r\n                                callback.call(self, loopable[i], i);\r\n                            }\r\n                        } else {\r\n                            for (i = 0; i < len; i++) {\r\n                                callback.call(self, loopable[i], i);\r\n                            }\r\n                        }\r\n                    } else if (typeof loopable === 'object') {\r\n                        var keys = Object.keys(loopable);\r\n                        len = keys.length;\r\n                        for (i = 0; i < len; i++) {\r\n                            callback.call(self, loopable[keys[i]], keys[i]);\r\n                        }\r\n                    }\r\n                };\r\n                helpers.clone = function(obj) {\r\n                    var objClone = {};\r\n                    helpers.each(obj, function(value, key) {\r\n                        if (helpers.isArray(value)) {\r\n                            objClone[key] = value.slice(0);\r\n                        } else if (typeof value === 'object' && value !== null) {\r\n                            objClone[key] = helpers.clone(value);\r\n                        } else {\r\n                            objClone[key] = value;\r\n                        }\r\n                    });\r\n                    return objClone;\r\n                };\r\n                helpers.extend = function(base) {\r\n                    var setFn = function(value, key) {\r\n                        base[key] = value;\r\n                    };\r\n                    for (var i = 1, ilen = arguments.length; i < ilen; i++) {\r\n                        helpers.each(arguments[i], setFn);\r\n                    }\r\n                    return base;\r\n                };\r\n                // Need a special merge function to chart configs since they are now grouped\r\n                helpers.configMerge = function(_base) {\r\n                    var base = helpers.clone(_base);\r\n                    helpers.each(Array.prototype.slice.call(arguments, 1), function(extension) {\r\n                        helpers.each(extension, function(value, key) {\r\n                            var baseHasProperty = base.hasOwnProperty(key);\r\n                            var baseVal = baseHasProperty ? base[key] : {};\r\n\r\n                            if (key === 'scales') {\r\n                                // Scale config merging is complex. Add our own function here for that\r\n                                base[key] = helpers.scaleMerge(baseVal, value);\r\n                            } else if (key === 'scale') {\r\n                                // Used in polar area & radar charts since there is only one scale\r\n                                base[key] = helpers.configMerge(baseVal, Chart.scaleService.getScaleDefaults(value.type), value);\r\n                            } else if (baseHasProperty &&\r\n                                typeof baseVal === 'object' &&\r\n                                !helpers.isArray(baseVal) &&\r\n                                baseVal !== null &&\r\n                                typeof value === 'object' &&\r\n                                !helpers.isArray(value)) {\r\n                                // If we are overwriting an object with an object, do a merge of the properties.\r\n                                base[key] = helpers.configMerge(baseVal, value);\r\n                            } else {\r\n                                // can just overwrite the value in this case\r\n                                base[key] = value;\r\n                            }\r\n                        });\r\n                    });\r\n\r\n                    return base;\r\n                };\r\n                helpers.scaleMerge = function(_base, extension) {\r\n                    var base = helpers.clone(_base);\r\n\r\n                    helpers.each(extension, function(value, key) {\r\n                        if (key === 'xAxes' || key === 'yAxes') {\r\n                            // These properties are arrays of items\r\n                            if (base.hasOwnProperty(key)) {\r\n                                helpers.each(value, function(valueObj, index) {\r\n                                    var axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n                                    var axisDefaults = Chart.scaleService.getScaleDefaults(axisType);\r\n                                    if (index >= base[key].length || !base[key][index].type) {\r\n                                        base[key].push(helpers.configMerge(axisDefaults, valueObj));\r\n                                    } else if (valueObj.type && valueObj.type !== base[key][index].type) {\r\n                                        // Type changed. Bring in the new defaults before we bring in valueObj so that valueObj can override the correct scale defaults\r\n                                        base[key][index] = helpers.configMerge(base[key][index], axisDefaults, valueObj);\r\n                                    } else {\r\n                                        // Type is the same\r\n                                        base[key][index] = helpers.configMerge(base[key][index], valueObj);\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                base[key] = [];\r\n                                helpers.each(value, function(valueObj) {\r\n                                    var axisType = helpers.getValueOrDefault(valueObj.type, key === 'xAxes' ? 'category' : 'linear');\r\n                                    base[key].push(helpers.configMerge(Chart.scaleService.getScaleDefaults(axisType), valueObj));\r\n                                });\r\n                            }\r\n                        } else if (base.hasOwnProperty(key) && typeof base[key] === 'object' && base[key] !== null && typeof value === 'object') {\r\n                            // If we are overwriting an object with an object, do a merge of the properties.\r\n                            base[key] = helpers.configMerge(base[key], value);\r\n\r\n                        } else {\r\n                            // can just overwrite the value in this case\r\n                            base[key] = value;\r\n                        }\r\n                    });\r\n\r\n                    return base;\r\n                };\r\n                helpers.getValueAtIndexOrDefault = function(value, index, defaultValue) {\r\n                    if (value === undefined || value === null) {\r\n                        return defaultValue;\r\n                    }\r\n\r\n                    if (helpers.isArray(value)) {\r\n                        return index < value.length ? value[index] : defaultValue;\r\n                    }\r\n\r\n                    return value;\r\n                };\r\n                helpers.getValueOrDefault = function(value, defaultValue) {\r\n                    return value === undefined ? defaultValue : value;\r\n                };\r\n                helpers.indexOf = Array.prototype.indexOf ?\r\n                    function(array, item) {\r\n                        return array.indexOf(item);\r\n                    } :\r\n                    function(array, item) {\r\n                        for (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n                            if (array[i] === item) {\r\n                                return i;\r\n                            }\r\n                        }\r\n                        return -1;\r\n                    };\r\n                helpers.where = function(collection, filterCallback) {\r\n                    if (helpers.isArray(collection) && Array.prototype.filter) {\r\n                        return collection.filter(filterCallback);\r\n                    }\r\n                    var filtered = [];\r\n\r\n                    helpers.each(collection, function(item) {\r\n                        if (filterCallback(item)) {\r\n                            filtered.push(item);\r\n                        }\r\n                    });\r\n\r\n                    return filtered;\r\n                };\r\n                helpers.findIndex = Array.prototype.findIndex ?\r\n                    function(array, callback, scope) {\r\n                        return array.findIndex(callback, scope);\r\n                    } :\r\n                    function(array, callback, scope) {\r\n                        scope = scope === undefined ? array : scope;\r\n                        for (var i = 0, ilen = array.length; i < ilen; ++i) {\r\n                            if (callback.call(scope, array[i], i, array)) {\r\n                                return i;\r\n                            }\r\n                        }\r\n                        return -1;\r\n                    };\r\n                helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to start of the array\r\n                    if (startIndex === undefined || startIndex === null) {\r\n                        startIndex = -1;\r\n                    }\r\n                    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\r\n                    // Default to end of the array\r\n                    if (startIndex === undefined || startIndex === null) {\r\n                        startIndex = arrayToSearch.length;\r\n                    }\r\n                    for (var i = startIndex - 1; i >= 0; i--) {\r\n                        var currentItem = arrayToSearch[i];\r\n                        if (filterCallback(currentItem)) {\r\n                            return currentItem;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.inherits = function(extensions) {\r\n                    // Basic javascript inheritance based on the model created in Backbone.js\r\n                    var me = this;\r\n                    var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\r\n                        return me.apply(this, arguments);\r\n                    };\r\n\r\n                    var Surrogate = function() {\r\n                        this.constructor = ChartElement;\r\n                    };\r\n                    Surrogate.prototype = me.prototype;\r\n                    ChartElement.prototype = new Surrogate();\r\n\r\n                    ChartElement.extend = helpers.inherits;\r\n\r\n                    if (extensions) {\r\n                        helpers.extend(ChartElement.prototype, extensions);\r\n                    }\r\n\r\n                    ChartElement.__super__ = me.prototype;\r\n\r\n                    return ChartElement;\r\n                };\r\n                helpers.noop = function() {};\r\n                helpers.uid = (function() {\r\n                    var id = 0;\r\n                    return function() {\r\n                        return id++;\r\n                    };\r\n                }());\r\n                // -- Math methods\r\n                helpers.isNumber = function(n) {\r\n                    return !isNaN(parseFloat(n)) && isFinite(n);\r\n                };\r\n                helpers.almostEquals = function(x, y, epsilon) {\r\n                    return Math.abs(x - y) < epsilon;\r\n                };\r\n                helpers.almostWhole = function(x, epsilon) {\r\n                    var rounded = Math.round(x);\r\n                    return (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\r\n                };\r\n                helpers.max = function(array) {\r\n                    return array.reduce(function(max, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.max(max, value);\r\n                        }\r\n                        return max;\r\n                    }, Number.NEGATIVE_INFINITY);\r\n                };\r\n                helpers.min = function(array) {\r\n                    return array.reduce(function(min, value) {\r\n                        if (!isNaN(value)) {\r\n                            return Math.min(min, value);\r\n                        }\r\n                        return min;\r\n                    }, Number.POSITIVE_INFINITY);\r\n                };\r\n                helpers.sign = Math.sign ?\r\n                    function(x) {\r\n                        return Math.sign(x);\r\n                    } :\r\n                    function(x) {\r\n                        x = +x; // convert to a number\r\n                        if (x === 0 || isNaN(x)) {\r\n                            return x;\r\n                        }\r\n                        return x > 0 ? 1 : -1;\r\n                    };\r\n                helpers.log10 = Math.log10 ?\r\n                    function(x) {\r\n                        return Math.log10(x);\r\n                    } :\r\n                    function(x) {\r\n                        return Math.log(x) / Math.LN10;\r\n                    };\r\n                helpers.toRadians = function(degrees) {\r\n                    return degrees * (Math.PI / 180);\r\n                };\r\n                helpers.toDegrees = function(radians) {\r\n                    return radians * (180 / Math.PI);\r\n                };\r\n                // Gets the angle from vertical upright to the point about a centre.\r\n                helpers.getAngleFromPoint = function(centrePoint, anglePoint) {\r\n                    var distanceFromXCenter = anglePoint.x - centrePoint.x,\r\n                        distanceFromYCenter = anglePoint.y - centrePoint.y,\r\n                        radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n                    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n                    if (angle < (-0.5 * Math.PI)) {\r\n                        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n                    }\r\n\r\n                    return {\r\n                        angle: angle,\r\n                        distance: radialDistanceFromCenter\r\n                    };\r\n                };\r\n                helpers.distanceBetweenPoints = function(pt1, pt2) {\r\n                    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n                };\r\n                helpers.aliasPixel = function(pixelWidth) {\r\n                    return (pixelWidth % 2 === 0) ? 0 : 0.5;\r\n                };\r\n                helpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\r\n                    // Props to Rob Spencer at scaled innovation for his post on splining between points\r\n                    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n                    // This function must also respect \"skipped\" points\r\n\r\n                    var previous = firstPoint.skip ? middlePoint : firstPoint,\r\n                        current = middlePoint,\r\n                        next = afterPoint.skip ? middlePoint : afterPoint;\r\n\r\n                    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\r\n                    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\r\n\r\n                    var s01 = d01 / (d01 + d12);\r\n                    var s12 = d12 / (d01 + d12);\r\n\r\n                    // If all points are the same, s01 & s02 will be inf\r\n                    s01 = isNaN(s01) ? 0 : s01;\r\n                    s12 = isNaN(s12) ? 0 : s12;\r\n\r\n                    var fa = t * s01; // scaling factor for triangle Ta\r\n                    var fb = t * s12;\r\n\r\n                    return {\r\n                        previous: {\r\n                            x: current.x - fa * (next.x - previous.x),\r\n                            y: current.y - fa * (next.y - previous.y)\r\n                        },\r\n                        next: {\r\n                            x: current.x + fb * (next.x - previous.x),\r\n                            y: current.y + fb * (next.y - previous.y)\r\n                        }\r\n                    };\r\n                };\r\n                helpers.EPSILON = Number.EPSILON || 1e-14;\r\n                helpers.splineCurveMonotone = function(points) {\r\n                    // This function calculates Bézier control points in a similar way than |splineCurve|,\r\n                    // but preserves monotonicity of the provided data and ensures no local extremums are added\r\n                    // between the dataset discrete points due to the interpolation.\r\n                    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n\r\n                    var pointsWithTangents = (points || []).map(function(point) {\r\n                        return {\r\n                            model: point._model,\r\n                            deltaK: 0,\r\n                            mK: 0\r\n                        };\r\n                    });\r\n\r\n                    // Calculate slopes (deltaK) and initialize tangents (mK)\r\n                    var pointsLen = pointsWithTangents.length;\r\n                    var i, pointBefore, pointCurrent, pointAfter;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\r\n\r\n                            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n                            pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\r\n                        }\r\n\r\n                        if (!pointBefore || pointBefore.model.skip) {\r\n                            pointCurrent.mK = pointCurrent.deltaK;\r\n                        } else if (!pointAfter || pointAfter.model.skip) {\r\n                            pointCurrent.mK = pointBefore.deltaK;\r\n                        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\r\n                            pointCurrent.mK = 0;\r\n                        } else {\r\n                            pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\r\n                        }\r\n                    }\r\n\r\n                    // Adjust tangents to ensure monotonic properties\r\n                    var alphaK, betaK, tauK, squaredMagnitude;\r\n                    for (i = 0; i < pointsLen - 1; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        pointAfter = pointsWithTangents[i + 1];\r\n                        if (pointCurrent.model.skip || pointAfter.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\r\n                            pointCurrent.mK = pointAfter.mK = 0;\r\n                            continue;\r\n                        }\r\n\r\n                        alphaK = pointCurrent.mK / pointCurrent.deltaK;\r\n                        betaK = pointAfter.mK / pointCurrent.deltaK;\r\n                        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n                        if (squaredMagnitude <= 9) {\r\n                            continue;\r\n                        }\r\n\r\n                        tauK = 3 / Math.sqrt(squaredMagnitude);\r\n                        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\r\n                        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\r\n                    }\r\n\r\n                    // Compute control points\r\n                    var deltaX;\r\n                    for (i = 0; i < pointsLen; ++i) {\r\n                        pointCurrent = pointsWithTangents[i];\r\n                        if (pointCurrent.model.skip) {\r\n                            continue;\r\n                        }\r\n\r\n                        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\r\n                        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\r\n                        if (pointBefore && !pointBefore.model.skip) {\r\n                            deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\r\n                            pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\r\n                            pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\r\n                        }\r\n                        if (pointAfter && !pointAfter.model.skip) {\r\n                            deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\r\n                            pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\r\n                            pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\r\n                        }\r\n                    }\r\n                };\r\n                helpers.nextItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\r\n                    }\r\n                    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\r\n                };\r\n                helpers.previousItem = function(collection, index, loop) {\r\n                    if (loop) {\r\n                        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\r\n                    }\r\n                    return index <= 0 ? collection[0] : collection[index - 1];\r\n                };\r\n                // Implementation of the nice number algorithm used in determining where axis labels will go\r\n                helpers.niceNum = function(range, round) {\r\n                    var exponent = Math.floor(helpers.log10(range));\r\n                    var fraction = range / Math.pow(10, exponent);\r\n                    var niceFraction;\r\n\r\n                    if (round) {\r\n                        if (fraction < 1.5) {\r\n                            niceFraction = 1;\r\n                        } else if (fraction < 3) {\r\n                            niceFraction = 2;\r\n                        } else if (fraction < 7) {\r\n                            niceFraction = 5;\r\n                        } else {\r\n                            niceFraction = 10;\r\n                        }\r\n                    } else if (fraction <= 1.0) {\r\n                        niceFraction = 1;\r\n                    } else if (fraction <= 2) {\r\n                        niceFraction = 2;\r\n                    } else if (fraction <= 5) {\r\n                        niceFraction = 5;\r\n                    } else {\r\n                        niceFraction = 10;\r\n                    }\r\n\r\n                    return niceFraction * Math.pow(10, exponent);\r\n                };\r\n                // Easing functions adapted from Robert Penner's easing equations\r\n                // http://www.robertpenner.com/easing/\r\n                var easingEffects = helpers.easingEffects = {\r\n                    linear: function(t) {\r\n                        return t;\r\n                    },\r\n                    easeInQuad: function(t) {\r\n                        return t * t;\r\n                    },\r\n                    easeOutQuad: function(t) {\r\n                        return -1 * t * (t - 2);\r\n                    },\r\n                    easeInOutQuad: function(t) {\r\n                        if ((t /= 1 / 2) < 1) {\r\n                            return 1 / 2 * t * t;\r\n                        }\r\n                        return -1 / 2 * ((--t) * (t - 2) - 1);\r\n                    },\r\n                    easeInCubic: function(t) {\r\n                        return t * t * t;\r\n                    },\r\n                    easeOutCubic: function(t) {\r\n                        return 1 * ((t = t / 1 - 1) * t * t + 1);\r\n                    },\r\n                    easeInOutCubic: function(t) {\r\n                        if ((t /= 1 / 2) < 1) {\r\n                            return 1 / 2 * t * t * t;\r\n                        }\r\n                        return 1 / 2 * ((t -= 2) * t * t + 2);\r\n                    },\r\n                    easeInQuart: function(t) {\r\n                        return t * t * t * t;\r\n                    },\r\n                    easeOutQuart: function(t) {\r\n                        return -1 * ((t = t / 1 - 1) * t * t * t - 1);\r\n                    },\r\n                    easeInOutQuart: function(t) {\r\n                        if ((t /= 1 / 2) < 1) {\r\n                            return 1 / 2 * t * t * t * t;\r\n                        }\r\n                        return -1 / 2 * ((t -= 2) * t * t * t - 2);\r\n                    },\r\n                    easeInQuint: function(t) {\r\n                        return 1 * (t /= 1) * t * t * t * t;\r\n                    },\r\n                    easeOutQuint: function(t) {\r\n                        return 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\r\n                    },\r\n                    easeInOutQuint: function(t) {\r\n                        if ((t /= 1 / 2) < 1) {\r\n                            return 1 / 2 * t * t * t * t * t;\r\n                        }\r\n                        return 1 / 2 * ((t -= 2) * t * t * t * t + 2);\r\n                    },\r\n                    easeInSine: function(t) {\r\n                        return -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\r\n                    },\r\n                    easeOutSine: function(t) {\r\n                        return 1 * Math.sin(t / 1 * (Math.PI / 2));\r\n                    },\r\n                    easeInOutSine: function(t) {\r\n                        return -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\r\n                    },\r\n                    easeInExpo: function(t) {\r\n                        return (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\r\n                    },\r\n                    easeOutExpo: function(t) {\r\n                        return (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\r\n                    },\r\n                    easeInOutExpo: function(t) {\r\n                        if (t === 0) {\r\n                            return 0;\r\n                        }\r\n                        if (t === 1) {\r\n                            return 1;\r\n                        }\r\n                        if ((t /= 1 / 2) < 1) {\r\n                            return 1 / 2 * Math.pow(2, 10 * (t - 1));\r\n                        }\r\n                        return 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\r\n                    },\r\n                    easeInCirc: function(t) {\r\n                        if (t >= 1) {\r\n                            return t;\r\n                        }\r\n                        return -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\r\n                    },\r\n                    easeOutCirc: function(t) {\r\n                        return 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\r\n                    },\r\n                    easeInOutCirc: function(t) {\r\n                        if ((t /= 1 / 2) < 1) {\r\n                            return -1 / 2 * (Math.sqrt(1 - t * t) - 1);\r\n                        }\r\n                        return 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\r\n                    },\r\n                    easeInElastic: function(t) {\r\n                        var s = 1.70158;\r\n                        var p = 0;\r\n                        var a = 1;\r\n                        if (t === 0) {\r\n                            return 0;\r\n                        }\r\n                        if ((t /= 1) === 1) {\r\n                            return 1;\r\n                        }\r\n                        if (!p) {\r\n                            p = 1 * 0.3;\r\n                        }\r\n                        if (a < Math.abs(1)) {\r\n                            a = 1;\r\n                            s = p / 4;\r\n                        } else {\r\n                            s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                        }\r\n                        return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n                    },\r\n                    easeOutElastic: function(t) {\r\n                        var s = 1.70158;\r\n                        var p = 0;\r\n                        var a = 1;\r\n                        if (t === 0) {\r\n                            return 0;\r\n                        }\r\n                        if ((t /= 1) === 1) {\r\n                            return 1;\r\n                        }\r\n                        if (!p) {\r\n                            p = 1 * 0.3;\r\n                        }\r\n                        if (a < Math.abs(1)) {\r\n                            a = 1;\r\n                            s = p / 4;\r\n                        } else {\r\n                            s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                        }\r\n                        return a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\r\n                    },\r\n                    easeInOutElastic: function(t) {\r\n                        var s = 1.70158;\r\n                        var p = 0;\r\n                        var a = 1;\r\n                        if (t === 0) {\r\n                            return 0;\r\n                        }\r\n                        if ((t /= 1 / 2) === 2) {\r\n                            return 1;\r\n                        }\r\n                        if (!p) {\r\n                            p = 1 * (0.3 * 1.5);\r\n                        }\r\n                        if (a < Math.abs(1)) {\r\n                            a = 1;\r\n                            s = p / 4;\r\n                        } else {\r\n                            s = p / (2 * Math.PI) * Math.asin(1 / a);\r\n                        }\r\n                        if (t < 1) {\r\n                            return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\r\n                        }\r\n                        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\r\n                    },\r\n                    easeInBack: function(t) {\r\n                        var s = 1.70158;\r\n                        return 1 * (t /= 1) * t * ((s + 1) * t - s);\r\n                    },\r\n                    easeOutBack: function(t) {\r\n                        var s = 1.70158;\r\n                        return 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\r\n                    },\r\n                    easeInOutBack: function(t) {\r\n                        var s = 1.70158;\r\n                        if ((t /= 1 / 2) < 1) {\r\n                            return 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n                        }\r\n                        return 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n                    },\r\n                    easeInBounce: function(t) {\r\n                        return 1 - easingEffects.easeOutBounce(1 - t);\r\n                    },\r\n                    easeOutBounce: function(t) {\r\n                        if ((t /= 1) < (1 / 2.75)) {\r\n                            return 1 * (7.5625 * t * t);\r\n                        } else if (t < (2 / 2.75)) {\r\n                            return 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\r\n                        } else if (t < (2.5 / 2.75)) {\r\n                            return 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\r\n                        }\r\n                        return 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\r\n                    },\r\n                    easeInOutBounce: function(t) {\r\n                        if (t < 1 / 2) {\r\n                            return easingEffects.easeInBounce(t * 2) * 0.5;\r\n                        }\r\n                        return easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\r\n                    }\r\n                };\r\n                // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n                helpers.requestAnimFrame = (function() {\r\n                    if (typeof window === 'undefined') {\r\n                        return function(callback) {\r\n                            callback();\r\n                        };\r\n                    }\r\n                    return window.requestAnimationFrame ||\r\n                        window.webkitRequestAnimationFrame ||\r\n                        window.mozRequestAnimationFrame ||\r\n                        window.oRequestAnimationFrame ||\r\n                        window.msRequestAnimationFrame ||\r\n                        function(callback) {\r\n                            return window.setTimeout(callback, 1000 / 60);\r\n                        };\r\n                }());\r\n                // -- DOM methods\r\n                helpers.getRelativePosition = function(evt, chart) {\r\n                    var mouseX, mouseY;\r\n                    var e = evt.originalEvent || evt,\r\n                        canvas = evt.currentTarget || evt.srcElement,\r\n                        boundingRect = canvas.getBoundingClientRect();\r\n\r\n                    var touches = e.touches;\r\n                    if (touches && touches.length > 0) {\r\n                        mouseX = touches[0].clientX;\r\n                        mouseY = touches[0].clientY;\r\n\r\n                    } else {\r\n                        mouseX = e.clientX;\r\n                        mouseY = e.clientY;\r\n                    }\r\n\r\n                    // Scale mouse coordinates into canvas coordinates\r\n                    // by following the pattern laid out by 'jerryj' in the comments of\r\n                    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\r\n                    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\r\n                    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\r\n                    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\r\n                    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\r\n                    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\r\n                    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\r\n\r\n                    // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\r\n                    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\r\n                    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\r\n                    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\r\n\r\n                    return {\r\n                        x: mouseX,\r\n                        y: mouseY\r\n                    };\r\n\r\n                };\r\n                helpers.addEvent = function(node, eventType, method) {\r\n                    if (node.addEventListener) {\r\n                        node.addEventListener(eventType, method);\r\n                    } else if (node.attachEvent) {\r\n                        node.attachEvent('on' + eventType, method);\r\n                    } else {\r\n                        node['on' + eventType] = method;\r\n                    }\r\n                };\r\n                helpers.removeEvent = function(node, eventType, handler) {\r\n                    if (node.removeEventListener) {\r\n                        node.removeEventListener(eventType, handler, false);\r\n                    } else if (node.detachEvent) {\r\n                        node.detachEvent('on' + eventType, handler);\r\n                    } else {\r\n                        node['on' + eventType] = helpers.noop;\r\n                    }\r\n                };\r\n\r\n                // Private helper function to convert max-width/max-height values that may be percentages into a number\r\n                function parseMaxStyle(styleValue, node, parentProperty) {\r\n                    var valueInPixels;\r\n                    if (typeof(styleValue) === 'string') {\r\n                        valueInPixels = parseInt(styleValue, 10);\r\n\r\n                        if (styleValue.indexOf('%') !== -1) {\r\n                            // percentage * size in dimension\r\n                            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\r\n                        }\r\n                    } else {\r\n                        valueInPixels = styleValue;\r\n                    }\r\n\r\n                    return valueInPixels;\r\n                }\r\n\r\n                /**\r\n                 * Returns if the given value contains an effective constraint.\r\n                 * @private\r\n                 */\r\n                function isConstrainedValue(value) {\r\n                    return value !== undefined && value !== null && value !== 'none';\r\n                }\r\n\r\n                // Private helper to get a constraint dimension\r\n                // @param domNode : the node to check the constraint on\r\n                // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\r\n                // @param percentageProperty : property of parent to use when calculating width as a percentage\r\n                // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\r\n                function getConstraintDimension(domNode, maxStyle, percentageProperty) {\r\n                    var view = document.defaultView;\r\n                    var parentNode = domNode.parentNode;\r\n                    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\r\n                    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\r\n                    var hasCNode = isConstrainedValue(constrainedNode);\r\n                    var hasCContainer = isConstrainedValue(constrainedContainer);\r\n                    var infinity = Number.POSITIVE_INFINITY;\r\n\r\n                    if (hasCNode || hasCContainer) {\r\n                        return Math.min(\r\n                            hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\r\n                            hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\r\n                    }\r\n\r\n                    return 'none';\r\n                }\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintWidth = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\r\n                };\r\n                // returns Number or undefined if no constraint\r\n                helpers.getConstraintHeight = function(domNode) {\r\n                    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\r\n                };\r\n                helpers.getMaximumWidth = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    var paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\r\n                    var paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\r\n                    var w = container.clientWidth - paddingLeft - paddingRight;\r\n                    var cw = helpers.getConstraintWidth(domNode);\r\n                    return isNaN(cw) ? w : Math.min(w, cw);\r\n                };\r\n                helpers.getMaximumHeight = function(domNode) {\r\n                    var container = domNode.parentNode;\r\n                    var paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\r\n                    var paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\r\n                    var h = container.clientHeight - paddingTop - paddingBottom;\r\n                    var ch = helpers.getConstraintHeight(domNode);\r\n                    return isNaN(ch) ? h : Math.min(h, ch);\r\n                };\r\n                helpers.getStyle = function(el, property) {\r\n                    return el.currentStyle ?\r\n                        el.currentStyle[property] :\r\n                        document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\r\n                };\r\n                helpers.retinaScale = function(chart) {\r\n                    var pixelRatio = chart.currentDevicePixelRatio = window.devicePixelRatio || 1;\r\n                    if (pixelRatio === 1) {\r\n                        return;\r\n                    }\r\n\r\n                    var canvas = chart.canvas;\r\n                    var height = chart.height;\r\n                    var width = chart.width;\r\n\r\n                    canvas.height = height * pixelRatio;\r\n                    canvas.width = width * pixelRatio;\r\n                    chart.ctx.scale(pixelRatio, pixelRatio);\r\n\r\n                    // If no style has been set on the canvas, the render size is used as display size,\r\n                    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n                    // See https://github.com/chartjs/Chart.js/issues/3575\r\n                    canvas.style.height = height + 'px';\r\n                    canvas.style.width = width + 'px';\r\n                };\r\n                // -- Canvas methods\r\n                helpers.clear = function(chart) {\r\n                    chart.ctx.clearRect(0, 0, chart.width, chart.height);\r\n                };\r\n                helpers.fontString = function(pixelSize, fontStyle, fontFamily) {\r\n                    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n                };\r\n                helpers.longestText = function(ctx, font, arrayOfThings, cache) {\r\n                    cache = cache || {};\r\n                    var data = cache.data = cache.data || {};\r\n                    var gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n                    if (cache.font !== font) {\r\n                        data = cache.data = {};\r\n                        gc = cache.garbageCollect = [];\r\n                        cache.font = font;\r\n                    }\r\n\r\n                    ctx.font = font;\r\n                    var longest = 0;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        // Undefined strings and arrays should not be measured\r\n                        if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\r\n                            longest = helpers.measureText(ctx, data, gc, longest, thing);\r\n                        } else if (helpers.isArray(thing)) {\r\n                            // if it is an array lets measure each element\r\n                            // to do maybe simplify this function a bit so we can do this more recursively?\r\n                            helpers.each(thing, function(nestedThing) {\r\n                                // Undefined strings and arrays should not be measured\r\n                                if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\r\n                                    longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    var gcLen = gc.length / 2;\r\n                    if (gcLen > arrayOfThings.length) {\r\n                        for (var i = 0; i < gcLen; i++) {\r\n                            delete data[gc[i]];\r\n                        }\r\n                        gc.splice(0, gcLen);\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.measureText = function(ctx, data, gc, longest, string) {\r\n                    var textWidth = data[string];\r\n                    if (!textWidth) {\r\n                        textWidth = data[string] = ctx.measureText(string).width;\r\n                        gc.push(string);\r\n                    }\r\n                    if (textWidth > longest) {\r\n                        longest = textWidth;\r\n                    }\r\n                    return longest;\r\n                };\r\n                helpers.numberOfLabelLines = function(arrayOfThings) {\r\n                    var numberOfLines = 1;\r\n                    helpers.each(arrayOfThings, function(thing) {\r\n                        if (helpers.isArray(thing)) {\r\n                            if (thing.length > numberOfLines) {\r\n                                numberOfLines = thing.length;\r\n                            }\r\n                        }\r\n                    });\r\n                    return numberOfLines;\r\n                };\r\n                helpers.drawRoundedRectangle = function(ctx, x, y, width, height, radius) {\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(x + radius, y);\r\n                    ctx.lineTo(x + width - radius, y);\r\n                    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n                    ctx.lineTo(x + width, y + height - radius);\r\n                    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n                    ctx.lineTo(x + radius, y + height);\r\n                    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n                    ctx.lineTo(x, y + radius);\r\n                    ctx.quadraticCurveTo(x, y, x + radius, y);\r\n                    ctx.closePath();\r\n                };\r\n\r\n                helpers.color = !color ?\r\n                    function(value) {\r\n                        console.error('Color.js not found!');\r\n                        return value;\r\n                    } :\r\n                    function(value) {\r\n                        /* global CanvasGradient */\r\n                        if (value instanceof CanvasGradient) {\r\n                            value = Chart.defaults.global.defaultColor;\r\n                        }\r\n\r\n                        return color(value);\r\n                    };\r\n\r\n                helpers.isArray = Array.isArray ?\r\n                    function(obj) {\r\n                        return Array.isArray(obj);\r\n                    } :\r\n                    function(obj) {\r\n                        return Object.prototype.toString.call(obj) === '[object Array]';\r\n                    };\r\n                // ! @see http://stackoverflow.com/a/14853974\r\n                helpers.arrayEquals = function(a0, a1) {\r\n                    var i, ilen, v0, v1;\r\n\r\n                    if (!a0 || !a1 || a0.length !== a1.length) {\r\n                        return false;\r\n                    }\r\n\r\n                    for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n                        v0 = a0[i];\r\n                        v1 = a1[i];\r\n\r\n                        if (v0 instanceof Array && v1 instanceof Array) {\r\n                            if (!helpers.arrayEquals(v0, v1)) {\r\n                                return false;\r\n                            }\r\n                        } else if (v0 !== v1) {\r\n                            // NOTE: two different object instances will never be equal: {x:20} != {x:20}\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    return true;\r\n                };\r\n                helpers.callback = function(fn, args, thisArg) {\r\n                    if (fn && typeof fn.call === 'function') {\r\n                        fn.apply(thisArg, args);\r\n                    }\r\n                };\r\n                helpers.getHoverColor = function(colorValue) {\r\n                    /* global CanvasPattern */\r\n                    return (colorValue instanceof CanvasPattern) ?\r\n                        colorValue :\r\n                        helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\r\n                };\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.helpers#callback instead.\r\n                 * @function Chart.helpers#callCallback\r\n                 * @deprecated since version 2.6.0\r\n                 * @todo remove at version 3\r\n                 */\r\n                helpers.callCallback = helpers.callback;\r\n            };\r\n\r\n        }, { \"3\": 3 }],\r\n        27: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                var helpers = Chart.helpers;\r\n\r\n                /**\r\n                 * Helper function to get relative position for an event\r\n                 * @param {Event|IEvent} event - The event to get the position for\r\n                 * @param {Chart} chart - The chart\r\n                 * @returns {Point} the event position\r\n                 */\r\n                function getRelativePosition(e, chart) {\r\n                    if (e.native) {\r\n                        return {\r\n                            x: e.x,\r\n                            y: e.y\r\n                        };\r\n                    }\r\n\r\n                    return helpers.getRelativePosition(e, chart);\r\n                }\r\n\r\n                /**\r\n                 * Helper function to traverse all of the visible elements in the chart\r\n                 * @param chart {chart} the chart\r\n                 * @param handler {Function} the callback to execute for each visible item\r\n                 */\r\n                function parseVisibleItems(chart, handler) {\r\n                    var datasets = chart.data.datasets;\r\n                    var meta, i, j, ilen, jlen;\r\n\r\n                    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\r\n                        if (!chart.isDatasetVisible(i)) {\r\n                            continue;\r\n                        }\r\n\r\n                        meta = chart.getDatasetMeta(i);\r\n                        for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\r\n                            var element = meta.data[j];\r\n                            if (!element._view.skip) {\r\n                                handler(element);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Helper function to get the items that intersect the event position\r\n                 * @param items {ChartElement[]} elements to filter\r\n                 * @param position {Point} the point to be nearest to\r\n                 * @return {ChartElement[]} the nearest items\r\n                 */\r\n                function getIntersectItems(chart, position) {\r\n                    var elements = [];\r\n\r\n                    parseVisibleItems(chart, function(element) {\r\n                        if (element.inRange(position.x, position.y)) {\r\n                            elements.push(element);\r\n                        }\r\n                    });\r\n\r\n                    return elements;\r\n                }\r\n\r\n                /**\r\n                 * Helper function to get the items nearest to the event position considering all visible items in teh chart\r\n                 * @param chart {Chart} the chart to look at elements from\r\n                 * @param position {Point} the point to be nearest to\r\n                 * @param intersect {Boolean} if true, only consider items that intersect the position\r\n                 * @param distanceMetric {Function} Optional function to provide the distance between\r\n                 * @return {ChartElement[]} the nearest items\r\n                 */\r\n                function getNearestItems(chart, position, intersect, distanceMetric) {\r\n                    var minDistance = Number.POSITIVE_INFINITY;\r\n                    var nearestItems = [];\r\n\r\n                    if (!distanceMetric) {\r\n                        distanceMetric = helpers.distanceBetweenPoints;\r\n                    }\r\n\r\n                    parseVisibleItems(chart, function(element) {\r\n                        if (intersect && !element.inRange(position.x, position.y)) {\r\n                            return;\r\n                        }\r\n\r\n                        var center = element.getCenterPoint();\r\n                        var distance = distanceMetric(position, center);\r\n\r\n                        if (distance < minDistance) {\r\n                            nearestItems = [element];\r\n                            minDistance = distance;\r\n                        } else if (distance === minDistance) {\r\n                            // Can have multiple items at the same distance in which case we sort by size\r\n                            nearestItems.push(element);\r\n                        }\r\n                    });\r\n\r\n                    return nearestItems;\r\n                }\r\n\r\n                function indexMode(chart, e, options) {\r\n                    var position = getRelativePosition(e, chart);\r\n                    var distanceMetric = function(pt1, pt2) {\r\n                        return Math.abs(pt1.x - pt2.x);\r\n                    };\r\n                    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\r\n                    var elements = [];\r\n\r\n                    if (!items.length) {\r\n                        return [];\r\n                    }\r\n\r\n                    chart.data.datasets.forEach(function(dataset, datasetIndex) {\r\n                        if (chart.isDatasetVisible(datasetIndex)) {\r\n                            var meta = chart.getDatasetMeta(datasetIndex),\r\n                                element = meta.data[items[0]._index];\r\n\r\n                            // don't count items that are skipped (null data)\r\n                            if (element && !element._view.skip) {\r\n                                elements.push(element);\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                    return elements;\r\n                }\r\n\r\n                /**\r\n                 * @interface IInteractionOptions\r\n                 */\r\n                /**\r\n                 * If true, only consider items that intersect the point\r\n                 * @name IInterfaceOptions#boolean\r\n                 * @type Boolean\r\n                 */\r\n\r\n                /**\r\n                 * Contains interaction related functions\r\n                 * @namespace Chart.Interaction\r\n                 */\r\n                Chart.Interaction = {\r\n                    // Helper function for different modes\r\n                    modes: {\r\n                        single: function(chart, e) {\r\n                            var position = getRelativePosition(e, chart);\r\n                            var elements = [];\r\n\r\n                            parseVisibleItems(chart, function(element) {\r\n                                if (element.inRange(position.x, position.y)) {\r\n                                    elements.push(element);\r\n                                    return elements;\r\n                                }\r\n                            });\r\n\r\n                            return elements.slice(0, 1);\r\n                        },\r\n\r\n                        /**\r\n                         * @function Chart.Interaction.modes.label\r\n                         * @deprecated since version 2.4.0\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        label: indexMode,\r\n\r\n                        /**\r\n                         * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\r\n                         * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\r\n                         * @function Chart.Interaction.modes.index\r\n                         * @since v2.4.0\r\n                         * @param chart {chart} the chart we are returning items from\r\n                         * @param e {Event} the event we are find things at\r\n                         * @param options {IInteractionOptions} options to use during interaction\r\n                         * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                         */\r\n                        index: indexMode,\r\n\r\n                        /**\r\n                         * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\r\n                         * If the options.intersect is false, we find the nearest item and return the items in that dataset\r\n                         * @function Chart.Interaction.modes.dataset\r\n                         * @param chart {chart} the chart we are returning items from\r\n                         * @param e {Event} the event we are find things at\r\n                         * @param options {IInteractionOptions} options to use during interaction\r\n                         * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                         */\r\n                        dataset: function(chart, e, options) {\r\n                            var position = getRelativePosition(e, chart);\r\n                            var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false);\r\n\r\n                            if (items.length > 0) {\r\n                                items = chart.getDatasetMeta(items[0]._datasetIndex).data;\r\n                            }\r\n\r\n                            return items;\r\n                        },\r\n\r\n                        /**\r\n                         * @function Chart.Interaction.modes.x-axis\r\n                         * @deprecated since version 2.4.0. Use index mode and intersect == true\r\n                         * @todo remove at version 3\r\n                         * @private\r\n                         */\r\n                        'x-axis': function(chart, e) {\r\n                            return indexMode(chart, e, true);\r\n                        },\r\n\r\n                        /**\r\n                         * Point mode returns all elements that hit test based on the event position\r\n                         * of the event\r\n                         * @function Chart.Interaction.modes.intersect\r\n                         * @param chart {chart} the chart we are returning items from\r\n                         * @param e {Event} the event we are find things at\r\n                         * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                         */\r\n                        point: function(chart, e) {\r\n                            var position = getRelativePosition(e, chart);\r\n                            return getIntersectItems(chart, position);\r\n                        },\r\n\r\n                        /**\r\n                         * nearest mode returns the element closest to the point\r\n                         * @function Chart.Interaction.modes.intersect\r\n                         * @param chart {chart} the chart we are returning items from\r\n                         * @param e {Event} the event we are find things at\r\n                         * @param options {IInteractionOptions} options to use\r\n                         * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                         */\r\n                        nearest: function(chart, e, options) {\r\n                            var position = getRelativePosition(e, chart);\r\n                            var nearestItems = getNearestItems(chart, position, options.intersect);\r\n\r\n                            // We have multiple items at the same distance from the event. Now sort by smallest\r\n                            if (nearestItems.length > 1) {\r\n                                nearestItems.sort(function(a, b) {\r\n                                    var sizeA = a.getArea();\r\n                                    var sizeB = b.getArea();\r\n                                    var ret = sizeA - sizeB;\r\n\r\n                                    if (ret === 0) {\r\n                                        // if equal sort by dataset index\r\n                                        ret = a._datasetIndex - b._datasetIndex;\r\n                                    }\r\n\r\n                                    return ret;\r\n                                });\r\n                            }\r\n\r\n                            // Return only 1 item\r\n                            return nearestItems.slice(0, 1);\r\n                        },\r\n\r\n                        /**\r\n                         * x mode returns the elements that hit-test at the current x coordinate\r\n                         * @function Chart.Interaction.modes.x\r\n                         * @param chart {chart} the chart we are returning items from\r\n                         * @param e {Event} the event we are find things at\r\n                         * @param options {IInteractionOptions} options to use\r\n                         * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                         */\r\n                        x: function(chart, e, options) {\r\n                            var position = getRelativePosition(e, chart);\r\n                            var items = [];\r\n                            var intersectsItem = false;\r\n\r\n                            parseVisibleItems(chart, function(element) {\r\n                                if (element.inXRange(position.x)) {\r\n                                    items.push(element);\r\n                                }\r\n\r\n                                if (element.inRange(position.x, position.y)) {\r\n                                    intersectsItem = true;\r\n                                }\r\n                            });\r\n\r\n                            // If we want to trigger on an intersect and we don't have any items\r\n                            // that intersect the position, return nothing\r\n                            if (options.intersect && !intersectsItem) {\r\n                                items = [];\r\n                            }\r\n                            return items;\r\n                        },\r\n\r\n                        /**\r\n                         * y mode returns the elements that hit-test at the current y coordinate\r\n                         * @function Chart.Interaction.modes.y\r\n                         * @param chart {chart} the chart we are returning items from\r\n                         * @param e {Event} the event we are find things at\r\n                         * @param options {IInteractionOptions} options to use\r\n                         * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\r\n                         */\r\n                        y: function(chart, e, options) {\r\n                            var position = getRelativePosition(e, chart);\r\n                            var items = [];\r\n                            var intersectsItem = false;\r\n\r\n                            parseVisibleItems(chart, function(element) {\r\n                                if (element.inYRange(position.y)) {\r\n                                    items.push(element);\r\n                                }\r\n\r\n                                if (element.inRange(position.x, position.y)) {\r\n                                    intersectsItem = true;\r\n                                }\r\n                            });\r\n\r\n                            // If we want to trigger on an intersect and we don't have any items\r\n                            // that intersect the position, return nothing\r\n                            if (options.intersect && !intersectsItem) {\r\n                                items = [];\r\n                            }\r\n                            return items;\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n\r\n        }, {}],\r\n        28: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function() {\r\n\r\n                // Occupy the global variable of Chart, and create a simple base class\r\n                var Chart = function(item, config) {\r\n                    this.construct(item, config);\r\n                    return this;\r\n                };\r\n\r\n                // Globally expose the defaults to allow for user updating/changing\r\n                Chart.defaults = {\r\n                    global: {\r\n                        responsive: true,\r\n                        responsiveAnimationDuration: 0,\r\n                        maintainAspectRatio: true,\r\n                        events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\r\n                        hover: {\r\n                            onHover: null,\r\n                            mode: 'nearest',\r\n                            intersect: true,\r\n                            animationDuration: 400\r\n                        },\r\n                        onClick: null,\r\n                        defaultColor: 'rgba(0,0,0,0.1)',\r\n                        defaultFontColor: '#666',\r\n                        defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n                        defaultFontSize: 12,\r\n                        defaultFontStyle: 'normal',\r\n                        showLines: true,\r\n\r\n                        // Element defaults defined in element extensions\r\n                        elements: {},\r\n\r\n                        // Legend callback string\r\n                        legendCallback: function(chart) {\r\n                            var text = [];\r\n                            text.push('<ul class=\"' + chart.id + '-legend\">');\r\n                            for (var i = 0; i < chart.data.datasets.length; i++) {\r\n                                text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\r\n                                if (chart.data.datasets[i].label) {\r\n                                    text.push(chart.data.datasets[i].label);\r\n                                }\r\n                                text.push('</li>');\r\n                            }\r\n                            text.push('</ul>');\r\n\r\n                            return text.join('');\r\n                        }\r\n                    }\r\n                };\r\n\r\n                Chart.Chart = Chart;\r\n\r\n                return Chart;\r\n            };\r\n\r\n        }, {}],\r\n        29: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                function filterByPosition(array, position) {\r\n                    return helpers.where(array, function(v) {\r\n                        return v.position === position;\r\n                    });\r\n                }\r\n\r\n                function sortByWeight(array, reverse) {\r\n                    array.forEach(function(v, i) {\r\n                        v._tmpIndex_ = i;\r\n                        return v;\r\n                    });\r\n                    array.sort(function(a, b) {\r\n                        var v0 = reverse ? b : a;\r\n                        var v1 = reverse ? a : b;\r\n                        return v0.weight === v1.weight ?\r\n                            v0._tmpIndex_ - v1._tmpIndex_ :\r\n                            v0.weight - v1.weight;\r\n                    });\r\n                    array.forEach(function(v) {\r\n                        delete v._tmpIndex_;\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * @interface ILayoutItem\r\n                 * @prop {String} position - The position of the item in the chart layout. Possible values are\r\n                 * 'left', 'top', 'right', 'bottom', and 'chartArea'\r\n                 * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\r\n                 * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\r\n                 * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\r\n                 * @prop {Function} update - Takes two parameters: width and height. Returns size of item\r\n                 * @prop {Function} getPadding -  Returns an object with padding on the edges\r\n                 * @prop {Number} width - Width of item. Must be valid after update()\r\n                 * @prop {Number} height - Height of item. Must be valid after update()\r\n                 * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\r\n                 * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\r\n                 * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\r\n                 * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\r\n                 */\r\n\r\n                // The layout service is very self explanatory.  It's responsible for the layout within a chart.\r\n                // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\r\n                // It is this service's responsibility of carrying out that layout.\r\n                Chart.layoutService = {\r\n                    defaults: {},\r\n\r\n                    /**\r\n                     * Register a box to a chart.\r\n                     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\r\n                     * @param {Chart} chart - the chart to use\r\n                     * @param {ILayoutItem} item - the item to add to be layed out\r\n                     */\r\n                    addBox: function(chart, item) {\r\n                        if (!chart.boxes) {\r\n                            chart.boxes = [];\r\n                        }\r\n\r\n                        // initialize item with default values\r\n                        item.fullWidth = item.fullWidth || false;\r\n                        item.position = item.position || 'top';\r\n                        item.weight = item.weight || 0;\r\n\r\n                        chart.boxes.push(item);\r\n                    },\r\n\r\n                    /**\r\n                     * Remove a layoutItem from a chart\r\n                     * @param {Chart} chart - the chart to remove the box from\r\n                     * @param {Object} layoutItem - the item to remove from the layout\r\n                     */\r\n                    removeBox: function(chart, layoutItem) {\r\n                        var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\r\n                        if (index !== -1) {\r\n                            chart.boxes.splice(index, 1);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Sets (or updates) options on the given `item`.\r\n                     * @param {Chart} chart - the chart in which the item lives (or will be added to)\r\n                     * @param {Object} item - the item to configure with the given options\r\n                     * @param {Object} options - the new item options.\r\n                     */\r\n                    configure: function(chart, item, options) {\r\n                        var props = ['fullWidth', 'position', 'weight'];\r\n                        var ilen = props.length;\r\n                        var i = 0;\r\n                        var prop;\r\n\r\n                        for (; i < ilen; ++i) {\r\n                            prop = props[i];\r\n                            if (options.hasOwnProperty(prop)) {\r\n                                item[prop] = options[prop];\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Fits boxes of the given chart into the given size by having each box measure itself\r\n                     * then running a fitting algorithm\r\n                     * @param {Chart} chart - the chart\r\n                     * @param {Number} width - the width to fit into\r\n                     * @param {Number} height - the height to fit into\r\n                     */\r\n                    update: function(chart, width, height) {\r\n                        if (!chart) {\r\n                            return;\r\n                        }\r\n\r\n                        var layoutOptions = chart.options.layout;\r\n                        var padding = layoutOptions ? layoutOptions.padding : null;\r\n\r\n                        var leftPadding = 0;\r\n                        var rightPadding = 0;\r\n                        var topPadding = 0;\r\n                        var bottomPadding = 0;\r\n\r\n                        if (!isNaN(padding)) {\r\n                            // options.layout.padding is a number. assign to all\r\n                            leftPadding = padding;\r\n                            rightPadding = padding;\r\n                            topPadding = padding;\r\n                            bottomPadding = padding;\r\n                        } else {\r\n                            leftPadding = padding.left || 0;\r\n                            rightPadding = padding.right || 0;\r\n                            topPadding = padding.top || 0;\r\n                            bottomPadding = padding.bottom || 0;\r\n                        }\r\n\r\n                        var leftBoxes = filterByPosition(chart.boxes, 'left');\r\n                        var rightBoxes = filterByPosition(chart.boxes, 'right');\r\n                        var topBoxes = filterByPosition(chart.boxes, 'top');\r\n                        var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\r\n                        var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\r\n\r\n                        // Sort boxes by weight. A higher weight is further away from the chart area\r\n                        sortByWeight(leftBoxes, true);\r\n                        sortByWeight(rightBoxes, false);\r\n                        sortByWeight(topBoxes, true);\r\n                        sortByWeight(bottomBoxes, false);\r\n\r\n                        // Essentially we now have any number of boxes on each of the 4 sides.\r\n                        // Our canvas looks like the following.\r\n                        // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\r\n                        // B1 is the bottom axis\r\n                        // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\r\n                        // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\r\n                        // an error will be thrown.\r\n                        //\r\n                        // |----------------------------------------------------|\r\n                        // |                  T1 (Full Width)                   |\r\n                        // |----------------------------------------------------|\r\n                        // |    |    |                 T2                  |    |\r\n                        // |    |----|-------------------------------------|----|\r\n                        // |    |    | C1 |                           | C2 |    |\r\n                        // |    |    |----|                           |----|    |\r\n                        // |    |    |                                     |    |\r\n                        // | L1 | L2 |           ChartArea (C0)            | R1 |\r\n                        // |    |    |                                     |    |\r\n                        // |    |    |----|                           |----|    |\r\n                        // |    |    | C3 |                           | C4 |    |\r\n                        // |    |----|-------------------------------------|----|\r\n                        // |    |    |                 B1                  |    |\r\n                        // |----------------------------------------------------|\r\n                        // |                  B2 (Full Width)                   |\r\n                        // |----------------------------------------------------|\r\n                        //\r\n                        // What we do to find the best sizing, we do the following\r\n                        // 1. Determine the minimum size of the chart area.\r\n                        // 2. Split the remaining width equally between each vertical axis\r\n                        // 3. Split the remaining height equally between each horizontal axis\r\n                        // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\r\n                        // 5. Adjust the sizes of each axis based on it's minimum reported size.\r\n                        // 6. Refit each axis\r\n                        // 7. Position each axis in the final location\r\n                        // 8. Tell the chart the final location of the chart area\r\n                        // 9. Tell any axes that overlay the chart area the positions of the chart area\r\n\r\n                        // Step 1\r\n                        var chartWidth = width - leftPadding - rightPadding;\r\n                        var chartHeight = height - topPadding - bottomPadding;\r\n                        var chartAreaWidth = chartWidth / 2; // min 50%\r\n                        var chartAreaHeight = chartHeight / 2; // min 50%\r\n\r\n                        // Step 2\r\n                        var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\r\n\r\n                        // Step 3\r\n                        var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\r\n\r\n                        // Step 4\r\n                        var maxChartAreaWidth = chartWidth;\r\n                        var maxChartAreaHeight = chartHeight;\r\n                        var minBoxSizes = [];\r\n\r\n                        function getMinimumBoxSize(box) {\r\n                            var minSize;\r\n                            var isHorizontal = box.isHorizontal();\r\n\r\n                            if (isHorizontal) {\r\n                                minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\r\n                                maxChartAreaHeight -= minSize.height;\r\n                            } else {\r\n                                minSize = box.update(verticalBoxWidth, chartAreaHeight);\r\n                                maxChartAreaWidth -= minSize.width;\r\n                            }\r\n\r\n                            minBoxSizes.push({\r\n                                horizontal: isHorizontal,\r\n                                minSize: minSize,\r\n                                box: box,\r\n                            });\r\n                        }\r\n\r\n                        helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\r\n\r\n                        // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\r\n                        var maxHorizontalLeftPadding = 0;\r\n                        var maxHorizontalRightPadding = 0;\r\n                        var maxVerticalTopPadding = 0;\r\n                        var maxVerticalBottomPadding = 0;\r\n\r\n                        helpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\r\n                            if (horizontalBox.getPadding) {\r\n                                var boxPadding = horizontalBox.getPadding();\r\n                                maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\r\n                                maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\r\n                            }\r\n                        });\r\n\r\n                        helpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\r\n                            if (verticalBox.getPadding) {\r\n                                var boxPadding = verticalBox.getPadding();\r\n                                maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\r\n                                maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\r\n                            }\r\n                        });\r\n\r\n                        // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\r\n                        // be if the axes are drawn at their minimum sizes.\r\n                        // Steps 5 & 6\r\n                        var totalLeftBoxesWidth = leftPadding;\r\n                        var totalRightBoxesWidth = rightPadding;\r\n                        var totalTopBoxesHeight = topPadding;\r\n                        var totalBottomBoxesHeight = bottomPadding;\r\n\r\n                        // Function to fit a box\r\n                        function fitBox(box) {\r\n                            var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\r\n                                return minBox.box === box;\r\n                            });\r\n\r\n                            if (minBoxSize) {\r\n                                if (box.isHorizontal()) {\r\n                                    var scaleMargin = {\r\n                                        left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\r\n                                        right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\r\n                                        top: 0,\r\n                                        bottom: 0\r\n                                    };\r\n\r\n                                    // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\r\n                                    // on the margin. Sometimes they need to increase in size slightly\r\n                                    box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\r\n                                } else {\r\n                                    box.update(minBoxSize.minSize.width, maxChartAreaHeight);\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        // Update, and calculate the left and right margins for the horizontal boxes\r\n                        helpers.each(leftBoxes.concat(rightBoxes), fitBox);\r\n\r\n                        helpers.each(leftBoxes, function(box) {\r\n                            totalLeftBoxesWidth += box.width;\r\n                        });\r\n\r\n                        helpers.each(rightBoxes, function(box) {\r\n                            totalRightBoxesWidth += box.width;\r\n                        });\r\n\r\n                        // Set the Left and Right margins for the horizontal boxes\r\n                        helpers.each(topBoxes.concat(bottomBoxes), fitBox);\r\n\r\n                        // Figure out how much margin is on the top and bottom of the vertical boxes\r\n                        helpers.each(topBoxes, function(box) {\r\n                            totalTopBoxesHeight += box.height;\r\n                        });\r\n\r\n                        helpers.each(bottomBoxes, function(box) {\r\n                            totalBottomBoxesHeight += box.height;\r\n                        });\r\n\r\n                        function finalFitVerticalBox(box) {\r\n                            var minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\r\n                                return minSize.box === box;\r\n                            });\r\n\r\n                            var scaleMargin = {\r\n                                left: 0,\r\n                                right: 0,\r\n                                top: totalTopBoxesHeight,\r\n                                bottom: totalBottomBoxesHeight\r\n                            };\r\n\r\n                            if (minBoxSize) {\r\n                                box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\r\n                            }\r\n                        }\r\n\r\n                        // Let the left layout know the final margin\r\n                        helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\r\n\r\n                        // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\r\n                        totalLeftBoxesWidth = leftPadding;\r\n                        totalRightBoxesWidth = rightPadding;\r\n                        totalTopBoxesHeight = topPadding;\r\n                        totalBottomBoxesHeight = bottomPadding;\r\n\r\n                        helpers.each(leftBoxes, function(box) {\r\n                            totalLeftBoxesWidth += box.width;\r\n                        });\r\n\r\n                        helpers.each(rightBoxes, function(box) {\r\n                            totalRightBoxesWidth += box.width;\r\n                        });\r\n\r\n                        helpers.each(topBoxes, function(box) {\r\n                            totalTopBoxesHeight += box.height;\r\n                        });\r\n                        helpers.each(bottomBoxes, function(box) {\r\n                            totalBottomBoxesHeight += box.height;\r\n                        });\r\n\r\n                        // We may be adding some padding to account for rotated x axis labels\r\n                        var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\r\n                        totalLeftBoxesWidth += leftPaddingAddition;\r\n                        totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\r\n\r\n                        var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\r\n                        totalTopBoxesHeight += topPaddingAddition;\r\n                        totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\r\n\r\n                        // Figure out if our chart area changed. This would occur if the dataset layout label rotation\r\n                        // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\r\n                        // without calling `fit` again\r\n                        var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\r\n                        var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\r\n\r\n                        if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\r\n                            helpers.each(leftBoxes, function(box) {\r\n                                box.height = newMaxChartAreaHeight;\r\n                            });\r\n\r\n                            helpers.each(rightBoxes, function(box) {\r\n                                box.height = newMaxChartAreaHeight;\r\n                            });\r\n\r\n                            helpers.each(topBoxes, function(box) {\r\n                                if (!box.fullWidth) {\r\n                                    box.width = newMaxChartAreaWidth;\r\n                                }\r\n                            });\r\n\r\n                            helpers.each(bottomBoxes, function(box) {\r\n                                if (!box.fullWidth) {\r\n                                    box.width = newMaxChartAreaWidth;\r\n                                }\r\n                            });\r\n\r\n                            maxChartAreaHeight = newMaxChartAreaHeight;\r\n                            maxChartAreaWidth = newMaxChartAreaWidth;\r\n                        }\r\n\r\n                        // Step 7 - Position the boxes\r\n                        var left = leftPadding + leftPaddingAddition;\r\n                        var top = topPadding + topPaddingAddition;\r\n\r\n                        function placeBox(box) {\r\n                            if (box.isHorizontal()) {\r\n                                box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\r\n                                box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\r\n                                box.top = top;\r\n                                box.bottom = top + box.height;\r\n\r\n                                // Move to next point\r\n                                top = box.bottom;\r\n\r\n                            } else {\r\n\r\n                                box.left = left;\r\n                                box.right = left + box.width;\r\n                                box.top = totalTopBoxesHeight;\r\n                                box.bottom = totalTopBoxesHeight + maxChartAreaHeight;\r\n\r\n                                // Move to next point\r\n                                left = box.right;\r\n                            }\r\n                        }\r\n\r\n                        helpers.each(leftBoxes.concat(topBoxes), placeBox);\r\n\r\n                        // Account for chart width and height\r\n                        left += maxChartAreaWidth;\r\n                        top += maxChartAreaHeight;\r\n\r\n                        helpers.each(rightBoxes, placeBox);\r\n                        helpers.each(bottomBoxes, placeBox);\r\n\r\n                        // Step 8\r\n                        chart.chartArea = {\r\n                            left: totalLeftBoxesWidth,\r\n                            top: totalTopBoxesHeight,\r\n                            right: totalLeftBoxesWidth + maxChartAreaWidth,\r\n                            bottom: totalTopBoxesHeight + maxChartAreaHeight\r\n                        };\r\n\r\n                        // Step 9\r\n                        helpers.each(chartAreaBoxes, function(box) {\r\n                            box.left = chart.chartArea.left;\r\n                            box.top = chart.chartArea.top;\r\n                            box.right = chart.chartArea.right;\r\n                            box.bottom = chart.chartArea.bottom;\r\n\r\n                            box.update(maxChartAreaWidth, maxChartAreaHeight);\r\n                        });\r\n                    }\r\n                };\r\n            };\r\n\r\n        }, {}],\r\n        30: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                Chart.defaults.global.plugins = {};\r\n\r\n                /**\r\n                 * The plugin service singleton\r\n                 * @namespace Chart.plugins\r\n                 * @since 2.1.0\r\n                 */\r\n                Chart.plugins = {\r\n                    /**\r\n                     * Globally registered plugins.\r\n                     * @private\r\n                     */\r\n                    _plugins: [],\r\n\r\n                    /**\r\n                     * This identifier is used to invalidate the descriptors cache attached to each chart\r\n                     * when a global plugin is registered or unregistered. In this case, the cache ID is\r\n                     * incremented and descriptors are regenerated during following API calls.\r\n                     * @private\r\n                     */\r\n                    _cacheId: 0,\r\n\r\n                    /**\r\n                     * Registers the given plugin(s) if not already registered.\r\n                     * @param {Array|Object} plugins plugin instance(s).\r\n                     */\r\n                    register: function(plugins) {\r\n                        var p = this._plugins;\r\n                        ([]).concat(plugins).forEach(function(plugin) {\r\n                            if (p.indexOf(plugin) === -1) {\r\n                                p.push(plugin);\r\n                            }\r\n                        });\r\n\r\n                        this._cacheId++;\r\n                    },\r\n\r\n                    /**\r\n                     * Unregisters the given plugin(s) only if registered.\r\n                     * @param {Array|Object} plugins plugin instance(s).\r\n                     */\r\n                    unregister: function(plugins) {\r\n                        var p = this._plugins;\r\n                        ([]).concat(plugins).forEach(function(plugin) {\r\n                            var idx = p.indexOf(plugin);\r\n                            if (idx !== -1) {\r\n                                p.splice(idx, 1);\r\n                            }\r\n                        });\r\n\r\n                        this._cacheId++;\r\n                    },\r\n\r\n                    /**\r\n                     * Remove all registered plugins.\r\n                     * @since 2.1.5\r\n                     */\r\n                    clear: function() {\r\n                        this._plugins = [];\r\n                        this._cacheId++;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns the number of registered plugins?\r\n                     * @returns {Number}\r\n                     * @since 2.1.5\r\n                     */\r\n                    count: function() {\r\n                        return this._plugins.length;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns all registered plugin instances.\r\n                     * @returns {Array} array of plugin objects.\r\n                     * @since 2.1.5\r\n                     */\r\n                    getAll: function() {\r\n                        return this._plugins;\r\n                    },\r\n\r\n                    /**\r\n                     * Calls enabled plugins for `chart` on the specified hook and with the given args.\r\n                     * This method immediately returns as soon as a plugin explicitly returns false. The\r\n                     * returned value can be used, for instance, to interrupt the current action.\r\n                     * @param {Object} chart - The chart instance for which plugins should be called.\r\n                     * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\r\n                     * @param {Array} [args] - Extra arguments to apply to the hook call.\r\n                     * @returns {Boolean} false if any of the plugins return false, else returns true.\r\n                     */\r\n                    notify: function(chart, hook, args) {\r\n                        var descriptors = this.descriptors(chart);\r\n                        var ilen = descriptors.length;\r\n                        var i, descriptor, plugin, params, method;\r\n\r\n                        for (i = 0; i < ilen; ++i) {\r\n                            descriptor = descriptors[i];\r\n                            plugin = descriptor.plugin;\r\n                            method = plugin[hook];\r\n                            if (typeof method === 'function') {\r\n                                params = [chart].concat(args || []);\r\n                                params.push(descriptor.options);\r\n                                if (method.apply(plugin, params) === false) {\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        return true;\r\n                    },\r\n\r\n                    /**\r\n                     * Returns descriptors of enabled plugins for the given chart.\r\n                     * @returns {Array} [{ plugin, options }]\r\n                     * @private\r\n                     */\r\n                    descriptors: function(chart) {\r\n                        var cache = chart._plugins || (chart._plugins = {});\r\n                        if (cache.id === this._cacheId) {\r\n                            return cache.descriptors;\r\n                        }\r\n\r\n                        var plugins = [];\r\n                        var descriptors = [];\r\n                        var config = (chart && chart.config) || {};\r\n                        var defaults = Chart.defaults.global.plugins;\r\n                        var options = (config.options && config.options.plugins) || {};\r\n\r\n                        this._plugins.concat(config.plugins || []).forEach(function(plugin) {\r\n                            var idx = plugins.indexOf(plugin);\r\n                            if (idx !== -1) {\r\n                                return;\r\n                            }\r\n\r\n                            var id = plugin.id;\r\n                            var opts = options[id];\r\n                            if (opts === false) {\r\n                                return;\r\n                            }\r\n\r\n                            if (opts === true) {\r\n                                opts = helpers.clone(defaults[id]);\r\n                            }\r\n\r\n                            plugins.push(plugin);\r\n                            descriptors.push({\r\n                                plugin: plugin,\r\n                                options: opts || {}\r\n                            });\r\n                        });\r\n\r\n                        cache.descriptors = descriptors;\r\n                        cache.id = this._cacheId;\r\n                        return descriptors;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Plugin extension hooks.\r\n                 * @interface IPlugin\r\n                 * @since 2.1.0\r\n                 */\r\n                /**\r\n                 * @method IPlugin#beforeInit\r\n                 * @desc Called before initializing `chart`.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Object} options - The plugin options.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#afterInit\r\n                 * @desc Called after `chart` has been initialized and before the first update.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Object} options - The plugin options.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#beforeUpdate\r\n                 * @desc Called before updating `chart`. If any plugin returns `false`, the update\r\n                 * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Object} options - The plugin options.\r\n                 * @returns {Boolean} `false` to cancel the chart update.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#afterUpdate\r\n                 * @desc Called after `chart` has been updated and before rendering. Note that this\r\n                 * hook will not be called if the chart update has been previously cancelled.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Object} options - The plugin options.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#beforeDatasetsUpdate\r\n                 * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\r\n                 * the datasets update is cancelled until another `update` is triggered.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Object} options - The plugin options.\r\n                 * @returns {Boolean} false to cancel the datasets update.\r\n                 * @since version 2.1.5\r\n                 */\r\n                /**\r\n                 * @method IPlugin#afterDatasetsUpdate\r\n                 * @desc Called after the `chart` datasets have been updated. Note that this hook\r\n                 * will not be called if the datasets update has been previously cancelled.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Object} options - The plugin options.\r\n                 * @since version 2.1.5\r\n                 */\r\n                /**\r\n                 * @method IPlugin#beforeDatasetUpdate\r\n                 * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\r\n                 * returns `false`, the datasets update is cancelled until another `update` is triggered.\r\n                 * @param {Chart} chart - The chart instance.\r\n                 * @param {Object} args - The call arguments.\r\n                 * @param {Object} args.index - The dataset index.\r\n                 * @param {Number} args.meta - The dataset metadata.\r\n                 * @param {Object} options - The plugin options.\r\n                 * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#afterDatasetUpdate\r\n                 * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\r\n                 * that this hook will not be called if the datasets update has been previously cancelled.\r\n                 * @param {Chart} chart - The chart instance.\r\n                 * @param {Object} args - The call arguments.\r\n                 * @param {Object} args.index - The dataset index.\r\n                 * @param {Number} args.meta - The dataset metadata.\r\n                 * @param {Object} options - The plugin options.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#beforeLayout\r\n                 * @desc Called before laying out `chart`. If any plugin returns `false`,\r\n                 * the layout update is cancelled until another `update` is triggered.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Object} options - The plugin options.\r\n                 * @returns {Boolean} `false` to cancel the chart layout.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#afterLayout\r\n                 * @desc Called after the `chart` has been layed out. Note that this hook will not\r\n                 * be called if the layout update has been previously cancelled.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Object} options - The plugin options.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#beforeRender\r\n                 * @desc Called before rendering `chart`. If any plugin returns `false`,\r\n                 * the rendering is cancelled until another `render` is triggered.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Object} options - The plugin options.\r\n                 * @returns {Boolean} `false` to cancel the chart rendering.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#afterRender\r\n                 * @desc Called after the `chart` has been fully rendered (and animation completed). Note\r\n                 * that this hook will not be called if the rendering has been previously cancelled.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Object} options - The plugin options.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#beforeDraw\r\n                 * @desc Called before drawing `chart` at every animation frame specified by the given\r\n                 * easing value. If any plugin returns `false`, the frame drawing is cancelled until\r\n                 * another `render` is triggered.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n                 * @param {Object} options - The plugin options.\r\n                 * @returns {Boolean} `false` to cancel the chart drawing.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#afterDraw\r\n                 * @desc Called after the `chart` has been drawn for the specific easing value. Note\r\n                 * that this hook will not be called if the drawing has been previously cancelled.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n                 * @param {Object} options - The plugin options.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#beforeDatasetsDraw\r\n                 * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\r\n                 * the datasets drawing is cancelled until another `render` is triggered.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n                 * @param {Object} options - The plugin options.\r\n                 * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#afterDatasetsDraw\r\n                 * @desc Called after the `chart` datasets have been drawn. Note that this hook\r\n                 * will not be called if the datasets drawing has been previously cancelled.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\r\n                 * @param {Object} options - The plugin options.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#beforeDatasetDraw\r\n                 * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\r\n                 * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\r\n                 * is cancelled until another `render` is triggered.\r\n                 * @param {Chart} chart - The chart instance.\r\n                 * @param {Object} args - The call arguments.\r\n                 * @param {Object} args.index - The dataset index.\r\n                 * @param {Number} args.meta - The dataset metadata.\r\n                 * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n                 * @param {Object} options - The plugin options.\r\n                 * @returns {Boolean} `false` to cancel the chart datasets drawing.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#afterDatasetDraw\r\n                 * @desc Called after the `chart` datasets at the given `args.index` have been drawn\r\n                 * (datasets are drawn in the reverse order). Note that this hook will not be called\r\n                 * if the datasets drawing has been previously cancelled.\r\n                 * @param {Chart} chart - The chart instance.\r\n                 * @param {Object} args - The call arguments.\r\n                 * @param {Object} args.index - The dataset index.\r\n                 * @param {Number} args.meta - The dataset metadata.\r\n                 * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\r\n                 * @param {Object} options - The plugin options.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#beforeEvent\r\n                 * @desc Called before processing the specified `event`. If any plugin returns `false`,\r\n                 * the event will be discarded.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {IEvent} event - The event object.\r\n                 * @param {Object} options - The plugin options.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#afterEvent\r\n                 * @desc Called after the `event` has been consumed. Note that this hook\r\n                 * will not be called if the `event` has been previously discarded.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {IEvent} event - The event object.\r\n                 * @param {Object} options - The plugin options.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#resize\r\n                 * @desc Called after the chart as been resized.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\r\n                 * @param {Object} options - The plugin options.\r\n                 */\r\n                /**\r\n                 * @method IPlugin#destroy\r\n                 * @desc Called after the chart as been destroyed.\r\n                 * @param {Chart.Controller} chart - The chart instance.\r\n                 * @param {Object} options - The plugin options.\r\n                 */\r\n\r\n                /**\r\n                 * Provided for backward compatibility, use Chart.plugins instead\r\n                 * @namespace Chart.pluginService\r\n                 * @deprecated since version 2.1.5\r\n                 * @todo remove at version 3\r\n                 * @private\r\n                 */\r\n                Chart.pluginService = Chart.plugins;\r\n\r\n                /**\r\n                 * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\r\n                 * effect, instead simply create/register plugins via plain JavaScript objects.\r\n                 * @interface Chart.PluginBase\r\n                 * @deprecated since version 2.5.0\r\n                 * @todo remove at version 3\r\n                 * @private\r\n                 */\r\n                Chart.PluginBase = Chart.Element.extend({});\r\n            };\r\n\r\n        }, {}],\r\n        31: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                Chart.defaults.scale = {\r\n                    display: true,\r\n                    position: 'left',\r\n\r\n                    // grid line settings\r\n                    gridLines: {\r\n                        display: true,\r\n                        color: 'rgba(0, 0, 0, 0.1)',\r\n                        lineWidth: 1,\r\n                        drawBorder: true,\r\n                        drawOnChartArea: true,\r\n                        drawTicks: true,\r\n                        tickMarkLength: 10,\r\n                        zeroLineWidth: 1,\r\n                        zeroLineColor: 'rgba(0,0,0,0.25)',\r\n                        zeroLineBorderDash: [],\r\n                        zeroLineBorderDashOffset: 0.0,\r\n                        offsetGridLines: false,\r\n                        borderDash: [],\r\n                        borderDashOffset: 0.0\r\n                    },\r\n\r\n                    // scale label\r\n                    scaleLabel: {\r\n                        // actual label\r\n                        labelString: '',\r\n\r\n                        // display property\r\n                        display: false\r\n                    },\r\n\r\n                    // label settings\r\n                    ticks: {\r\n                        beginAtZero: false,\r\n                        minRotation: 0,\r\n                        maxRotation: 50,\r\n                        mirror: false,\r\n                        padding: 0,\r\n                        reverse: false,\r\n                        display: true,\r\n                        autoSkip: true,\r\n                        autoSkipPadding: 0,\r\n                        labelOffset: 0,\r\n                        // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n                        callback: Chart.Ticks.formatters.values\r\n                    }\r\n                };\r\n\r\n                function computeTextSize(context, tick, font) {\r\n                    return helpers.isArray(tick) ?\r\n                        helpers.longestText(context, font, tick) :\r\n                        context.measureText(tick).width;\r\n                }\r\n\r\n                function parseFontOptions(options) {\r\n                    var getValueOrDefault = helpers.getValueOrDefault;\r\n                    var globalDefaults = Chart.defaults.global;\r\n                    var size = getValueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\r\n                    var style = getValueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\r\n                    var family = getValueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\r\n\r\n                    return {\r\n                        size: size,\r\n                        style: style,\r\n                        family: family,\r\n                        font: helpers.fontString(size, style, family)\r\n                    };\r\n                }\r\n\r\n                Chart.Scale = Chart.Element.extend({\r\n                    /**\r\n                     * Get the padding needed for the scale\r\n                     * @method getPadding\r\n                     * @private\r\n                     * @returns {Padding} the necessary padding\r\n                     */\r\n                    getPadding: function() {\r\n                        var me = this;\r\n                        return {\r\n                            left: me.paddingLeft || 0,\r\n                            top: me.paddingTop || 0,\r\n                            right: me.paddingRight || 0,\r\n                            bottom: me.paddingBottom || 0\r\n                        };\r\n                    },\r\n\r\n                    // These methods are ordered by lifecyle. Utilities then follow.\r\n                    // Any function defined here is inherited by all scale types.\r\n                    // Any function can be extended by the scale type\r\n\r\n                    beforeUpdate: function() {\r\n                        helpers.callback(this.options.beforeUpdate, [this]);\r\n                    },\r\n                    update: function(maxWidth, maxHeight, margins) {\r\n                        var me = this;\r\n\r\n                        // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                        me.beforeUpdate();\r\n\r\n                        // Absorb the master measurements\r\n                        me.maxWidth = maxWidth;\r\n                        me.maxHeight = maxHeight;\r\n                        me.margins = helpers.extend({\r\n                            left: 0,\r\n                            right: 0,\r\n                            top: 0,\r\n                            bottom: 0\r\n                        }, margins);\r\n                        me.longestTextCache = me.longestTextCache || {};\r\n\r\n                        // Dimensions\r\n                        me.beforeSetDimensions();\r\n                        me.setDimensions();\r\n                        me.afterSetDimensions();\r\n\r\n                        // Data min/max\r\n                        me.beforeDataLimits();\r\n                        me.determineDataLimits();\r\n                        me.afterDataLimits();\r\n\r\n                        // Ticks\r\n                        me.beforeBuildTicks();\r\n                        me.buildTicks();\r\n                        me.afterBuildTicks();\r\n\r\n                        me.beforeTickToLabelConversion();\r\n                        me.convertTicksToLabels();\r\n                        me.afterTickToLabelConversion();\r\n\r\n                        // Tick Rotation\r\n                        me.beforeCalculateTickRotation();\r\n                        me.calculateTickRotation();\r\n                        me.afterCalculateTickRotation();\r\n                        // Fit\r\n                        me.beforeFit();\r\n                        me.fit();\r\n                        me.afterFit();\r\n                        //\r\n                        me.afterUpdate();\r\n\r\n                        return me.minSize;\r\n\r\n                    },\r\n                    afterUpdate: function() {\r\n                        helpers.callback(this.options.afterUpdate, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeSetDimensions: function() {\r\n                        helpers.callback(this.options.beforeSetDimensions, [this]);\r\n                    },\r\n                    setDimensions: function() {\r\n                        var me = this;\r\n                        // Set the unconstrained dimension before label rotation\r\n                        if (me.isHorizontal()) {\r\n                            // Reset position before calculating rotation\r\n                            me.width = me.maxWidth;\r\n                            me.left = 0;\r\n                            me.right = me.width;\r\n                        } else {\r\n                            me.height = me.maxHeight;\r\n\r\n                            // Reset position before calculating rotation\r\n                            me.top = 0;\r\n                            me.bottom = me.height;\r\n                        }\r\n\r\n                        // Reset padding\r\n                        me.paddingLeft = 0;\r\n                        me.paddingTop = 0;\r\n                        me.paddingRight = 0;\r\n                        me.paddingBottom = 0;\r\n                    },\r\n                    afterSetDimensions: function() {\r\n                        helpers.callback(this.options.afterSetDimensions, [this]);\r\n                    },\r\n\r\n                    // Data limits\r\n                    beforeDataLimits: function() {\r\n                        helpers.callback(this.options.beforeDataLimits, [this]);\r\n                    },\r\n                    determineDataLimits: helpers.noop,\r\n                    afterDataLimits: function() {\r\n                        helpers.callback(this.options.afterDataLimits, [this]);\r\n                    },\r\n\r\n                    //\r\n                    beforeBuildTicks: function() {\r\n                        helpers.callback(this.options.beforeBuildTicks, [this]);\r\n                    },\r\n                    buildTicks: helpers.noop,\r\n                    afterBuildTicks: function() {\r\n                        helpers.callback(this.options.afterBuildTicks, [this]);\r\n                    },\r\n\r\n                    beforeTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.beforeTickToLabelConversion, [this]);\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        // Convert ticks to strings\r\n                        var tickOpts = me.options.ticks;\r\n                        me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback);\r\n                    },\r\n                    afterTickToLabelConversion: function() {\r\n                        helpers.callback(this.options.afterTickToLabelConversion, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.beforeCalculateTickRotation, [this]);\r\n                    },\r\n                    calculateTickRotation: function() {\r\n                        var me = this;\r\n                        var context = me.ctx;\r\n                        var tickOpts = me.options.ticks;\r\n\r\n                        // Get the width of each grid by calculating the difference\r\n                        // between x offsets between 0 and 1.\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        context.font = tickFont.font;\r\n\r\n                        var labelRotation = tickOpts.minRotation || 0;\r\n\r\n                        if (me.options.display && me.isHorizontal()) {\r\n                            var originalLabelWidth = helpers.longestText(context, tickFont.font, me.ticks, me.longestTextCache);\r\n                            var labelWidth = originalLabelWidth;\r\n                            var cosRotation;\r\n                            var sinRotation;\r\n\r\n                            // Allow 3 pixels x2 padding either side for label readability\r\n                            var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\r\n\r\n                            // Max label rotation can be set or default to 90 - also act as a loop counter\r\n                            while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\r\n                                var angleRadians = helpers.toRadians(labelRotation);\r\n                                cosRotation = Math.cos(angleRadians);\r\n                                sinRotation = Math.sin(angleRadians);\r\n\r\n                                if (sinRotation * originalLabelWidth > me.maxHeight) {\r\n                                    // go back one step\r\n                                    labelRotation--;\r\n                                    break;\r\n                                }\r\n\r\n                                labelRotation++;\r\n                                labelWidth = cosRotation * originalLabelWidth;\r\n                            }\r\n                        }\r\n\r\n                        me.labelRotation = labelRotation;\r\n                    },\r\n                    afterCalculateTickRotation: function() {\r\n                        helpers.callback(this.options.afterCalculateTickRotation, [this]);\r\n                    },\r\n\r\n                    //\r\n\r\n                    beforeFit: function() {\r\n                        helpers.callback(this.options.beforeFit, [this]);\r\n                    },\r\n                    fit: function() {\r\n                        var me = this;\r\n                        // Reset\r\n                        var minSize = me.minSize = {\r\n                            width: 0,\r\n                            height: 0\r\n                        };\r\n\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n                        var scaleLabelOpts = opts.scaleLabel;\r\n                        var gridLineOpts = opts.gridLines;\r\n                        var display = opts.display;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        var tickFont = parseFontOptions(tickOpts);\r\n                        var scaleLabelFontSize = parseFontOptions(scaleLabelOpts).size * 1.5;\r\n                        var tickMarkLength = opts.gridLines.tickMarkLength;\r\n\r\n                        // Width\r\n                        if (isHorizontal) {\r\n                            // subtract the margins to line up with the chartArea if we are a full width scale\r\n                            minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\r\n                        } else {\r\n                            minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        }\r\n\r\n                        // height\r\n                        if (isHorizontal) {\r\n                            minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\r\n                        } else {\r\n                            minSize.height = me.maxHeight; // fill all the height\r\n                        }\r\n\r\n                        // Are we showing a title for the scale?\r\n                        if (scaleLabelOpts.display && display) {\r\n                            if (isHorizontal) {\r\n                                minSize.height += scaleLabelFontSize;\r\n                            } else {\r\n                                minSize.width += scaleLabelFontSize;\r\n                            }\r\n                        }\r\n\r\n                        // Don't bother fitting the ticks if we are not showing them\r\n                        if (tickOpts.display && display) {\r\n                            var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, me.ticks, me.longestTextCache);\r\n                            var tallestLabelHeightInLines = helpers.numberOfLabelLines(me.ticks);\r\n                            var lineSpace = tickFont.size * 0.5;\r\n\r\n                            if (isHorizontal) {\r\n                                // A horizontal axis is more constrained by the height.\r\n                                me.longestLabelWidth = largestTextWidth;\r\n\r\n                                var angleRadians = helpers.toRadians(me.labelRotation);\r\n                                var cosRotation = Math.cos(angleRadians);\r\n                                var sinRotation = Math.sin(angleRadians);\r\n\r\n                                // TODO - improve this calculation\r\n                                var labelHeight = (sinRotation * largestTextWidth) +\r\n                                    (tickFont.size * tallestLabelHeightInLines) +\r\n                                    (lineSpace * tallestLabelHeightInLines);\r\n\r\n                                minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight);\r\n                                me.ctx.font = tickFont.font;\r\n\r\n                                var firstTick = me.ticks[0];\r\n                                var firstLabelWidth = computeTextSize(me.ctx, firstTick, tickFont.font);\r\n\r\n                                var lastTick = me.ticks[me.ticks.length - 1];\r\n                                var lastLabelWidth = computeTextSize(me.ctx, lastTick, tickFont.font);\r\n\r\n                                // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned which means that the right padding is dominated\r\n                                // by the font height\r\n                                if (me.labelRotation !== 0) {\r\n                                    me.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\r\n                                } else {\r\n                                    me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\r\n                                    me.paddingRight = lastLabelWidth / 2 + 3;\r\n                                }\r\n                            } else {\r\n                                // A vertical axis is more constrained by the width. Labels are the dominant factor here, so get that length first\r\n                                // Account for padding\r\n\r\n                                if (tickOpts.mirror) {\r\n                                    largestTextWidth = 0;\r\n                                } else {\r\n                                    largestTextWidth += me.options.ticks.padding;\r\n                                }\r\n                                minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\r\n                                me.paddingTop = tickFont.size / 2;\r\n                                me.paddingBottom = tickFont.size / 2;\r\n                            }\r\n                        }\r\n\r\n                        me.handleMargins();\r\n\r\n                        me.width = minSize.width;\r\n                        me.height = minSize.height;\r\n                    },\r\n\r\n                    /**\r\n                     * Handle margins and padding interactions\r\n                     * @private\r\n                     */\r\n                    handleMargins: function() {\r\n                        var me = this;\r\n                        if (me.margins) {\r\n                            me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\r\n                            me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\r\n                            me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\r\n                            me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\r\n                        }\r\n                    },\r\n\r\n                    afterFit: function() {\r\n                        helpers.callback(this.options.afterFit, [this]);\r\n                    },\r\n\r\n                    // Shared Methods\r\n                    isHorizontal: function() {\r\n                        return this.options.position === 'top' || this.options.position === 'bottom';\r\n                    },\r\n                    isFullWidth: function() {\r\n                        return (this.options.fullWidth);\r\n                    },\r\n\r\n                    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\r\n                    getRightValue: function(rawValue) {\r\n                        // Null and undefined values first\r\n                        if (rawValue === null || typeof(rawValue) === 'undefined') {\r\n                            return NaN;\r\n                        }\r\n                        // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\r\n                        if (typeof(rawValue) === 'number' && !isFinite(rawValue)) {\r\n                            return NaN;\r\n                        }\r\n                        // If it is in fact an object, dive in one more level\r\n                        if (typeof(rawValue) === 'object') {\r\n                            if ((rawValue instanceof Date) || (rawValue.isValid)) {\r\n                                return rawValue;\r\n                            }\r\n                            return this.getRightValue(this.isHorizontal() ? rawValue.x : rawValue.y);\r\n                        }\r\n\r\n                        // Value is good, return it\r\n                        return rawValue;\r\n                    },\r\n\r\n                    // Used to get the value to display in the tooltip for the data at the given index\r\n                    // function getLabelForIndex(index, datasetIndex)\r\n                    getLabelForIndex: helpers.noop,\r\n\r\n                    // Used to get data value locations.  Value can either be an index or a numerical value\r\n                    getPixelForValue: helpers.noop,\r\n\r\n                    // Used to get the data value from a given pixel. This is the inverse of getPixelForValue\r\n                    getValueForPixel: helpers.noop,\r\n\r\n                    // Used for tick location, should\r\n                    getPixelForTick: function(index, includeOffset) {\r\n                        var me = this;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var tickWidth = innerWidth / Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n                            var pixel = (tickWidth * index) + me.paddingLeft;\r\n\r\n                            if (includeOffset) {\r\n                                pixel += tickWidth / 2;\r\n                            }\r\n\r\n                            var finalVal = me.left + Math.round(pixel);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\r\n                        return me.top + (index * (innerHeight / (me.ticks.length - 1)));\r\n                    },\r\n\r\n                    // Utility for getting the pixel location of a percentage of scale\r\n                    getPixelForDecimal: function(decimal /* , includeOffset*/ ) {\r\n                        var me = this;\r\n                        if (me.isHorizontal()) {\r\n                            var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\r\n                            var valueOffset = (innerWidth * decimal) + me.paddingLeft;\r\n\r\n                            var finalVal = me.left + Math.round(valueOffset);\r\n                            finalVal += me.isFullWidth() ? me.margins.left : 0;\r\n                            return finalVal;\r\n                        }\r\n                        return me.top + (decimal * me.height);\r\n                    },\r\n\r\n                    getBasePixel: function() {\r\n                        return this.getPixelForValue(this.getBaseValue());\r\n                    },\r\n\r\n                    getBaseValue: function() {\r\n                        var me = this;\r\n                        var min = me.min;\r\n                        var max = me.max;\r\n\r\n                        return me.beginAtZero ? 0 :\r\n                            min < 0 && max < 0 ? max :\r\n                            min > 0 && max > 0 ? min :\r\n                            0;\r\n                    },\r\n\r\n                    // Actually draw the scale on the canvas\r\n                    // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\r\n                    draw: function(chartArea) {\r\n                        var me = this;\r\n                        var options = me.options;\r\n                        if (!options.display) {\r\n                            return;\r\n                        }\r\n\r\n                        var context = me.ctx;\r\n                        var globalDefaults = Chart.defaults.global;\r\n                        var optionTicks = options.ticks;\r\n                        var gridLines = options.gridLines;\r\n                        var scaleLabel = options.scaleLabel;\r\n\r\n                        var isRotated = me.labelRotation !== 0;\r\n                        var skipRatio;\r\n                        var useAutoskipper = optionTicks.autoSkip;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        // figure out the maximum number of gridlines to show\r\n                        var maxTicks;\r\n                        if (optionTicks.maxTicksLimit) {\r\n                            maxTicks = optionTicks.maxTicksLimit;\r\n                        }\r\n\r\n                        var tickFontColor = helpers.getValueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\r\n                        var tickFont = parseFontOptions(optionTicks);\r\n\r\n                        var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\r\n\r\n                        var scaleLabelFontColor = helpers.getValueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\r\n                        var scaleLabelFont = parseFontOptions(scaleLabel);\r\n\r\n                        var labelRotationRadians = helpers.toRadians(me.labelRotation);\r\n                        var cosRotation = Math.cos(labelRotationRadians);\r\n                        var longestRotatedLabel = me.longestLabelWidth * cosRotation;\r\n\r\n                        // Make sure we draw text in the correct color and font\r\n                        context.fillStyle = tickFontColor;\r\n\r\n                        var itemsToDraw = [];\r\n\r\n                        if (isHorizontal) {\r\n                            skipRatio = false;\r\n\r\n                            if ((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length > (me.width - (me.paddingLeft + me.paddingRight))) {\r\n                                skipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * me.ticks.length) / (me.width - (me.paddingLeft + me.paddingRight)));\r\n                            }\r\n\r\n                            // if they defined a max number of optionTicks,\r\n                            // increase skipRatio until that number is met\r\n                            if (maxTicks && me.ticks.length > maxTicks) {\r\n                                while (!skipRatio || me.ticks.length / (skipRatio || 1) > maxTicks) {\r\n                                    if (!skipRatio) {\r\n                                        skipRatio = 1;\r\n                                    }\r\n                                    skipRatio += 1;\r\n                                }\r\n                            }\r\n\r\n                            if (!useAutoskipper) {\r\n                                skipRatio = false;\r\n                            }\r\n                        }\r\n\r\n\r\n                        var xTickStart = options.position === 'right' ? me.left : me.right - tl;\r\n                        var xTickEnd = options.position === 'right' ? me.left + tl : me.right;\r\n                        var yTickStart = options.position === 'bottom' ? me.top : me.bottom - tl;\r\n                        var yTickEnd = options.position === 'bottom' ? me.top + tl : me.bottom;\r\n\r\n                        helpers.each(me.ticks, function(label, index) {\r\n                            // If the callback returned a null or undefined value, do not draw this line\r\n                            if (label === undefined || label === null) {\r\n                                return;\r\n                            }\r\n\r\n                            var isLastTick = me.ticks.length === index + 1;\r\n\r\n                            // Since we always show the last tick,we need may need to hide the last shown one before\r\n                            var shouldSkip = (skipRatio > 1 && index % skipRatio > 0) || (index % skipRatio === 0 && index + skipRatio >= me.ticks.length);\r\n                            if (shouldSkip && !isLastTick || (label === undefined || label === null)) {\r\n                                return;\r\n                            }\r\n\r\n                            var lineWidth, lineColor, borderDash, borderDashOffset;\r\n                            if (index === (typeof me.zeroLineIndex !== 'undefined' ? me.zeroLineIndex : 0)) {\r\n                                // Draw the first index specially\r\n                                lineWidth = gridLines.zeroLineWidth;\r\n                                lineColor = gridLines.zeroLineColor;\r\n                                borderDash = gridLines.zeroLineBorderDash;\r\n                                borderDashOffset = gridLines.zeroLineBorderDashOffset;\r\n                            } else {\r\n                                lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, index);\r\n                                lineColor = helpers.getValueAtIndexOrDefault(gridLines.color, index);\r\n                                borderDash = helpers.getValueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\r\n                                borderDashOffset = helpers.getValueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\r\n                            }\r\n\r\n                            // Common properties\r\n                            var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\r\n                            var textAlign = 'middle';\r\n                            var textBaseline = 'middle';\r\n\r\n                            if (isHorizontal) {\r\n\r\n                                if (options.position === 'bottom') {\r\n                                    // bottom\r\n                                    textBaseline = !isRotated ? 'top' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'right';\r\n                                    labelY = me.top + tl;\r\n                                } else {\r\n                                    // top\r\n                                    textBaseline = !isRotated ? 'bottom' : 'middle';\r\n                                    textAlign = !isRotated ? 'center' : 'left';\r\n                                    labelY = me.bottom - tl;\r\n                                }\r\n\r\n                                var xLineValue = me.getPixelForTick(index) + helpers.aliasPixel(lineWidth); // xvalues for grid lines\r\n                                labelX = me.getPixelForTick(index, gridLines.offsetGridLines) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\r\n\r\n                                tx1 = tx2 = x1 = x2 = xLineValue;\r\n                                ty1 = yTickStart;\r\n                                ty2 = yTickEnd;\r\n                                y1 = chartArea.top;\r\n                                y2 = chartArea.bottom;\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                var tickPadding = optionTicks.padding;\r\n                                var labelXOffset;\r\n\r\n                                if (optionTicks.mirror) {\r\n                                    textAlign = isLeft ? 'left' : 'right';\r\n                                    labelXOffset = tickPadding;\r\n                                } else {\r\n                                    textAlign = isLeft ? 'right' : 'left';\r\n                                    labelXOffset = tl + tickPadding;\r\n                                }\r\n\r\n                                labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\r\n\r\n                                var yLineValue = me.getPixelForTick(index); // xvalues for grid lines\r\n                                yLineValue += helpers.aliasPixel(lineWidth);\r\n                                labelY = me.getPixelForTick(index, gridLines.offsetGridLines);\r\n\r\n                                tx1 = xTickStart;\r\n                                tx2 = xTickEnd;\r\n                                x1 = chartArea.left;\r\n                                x2 = chartArea.right;\r\n                                ty1 = ty2 = y1 = y2 = yLineValue;\r\n                            }\r\n\r\n                            itemsToDraw.push({\r\n                                tx1: tx1,\r\n                                ty1: ty1,\r\n                                tx2: tx2,\r\n                                ty2: ty2,\r\n                                x1: x1,\r\n                                y1: y1,\r\n                                x2: x2,\r\n                                y2: y2,\r\n                                labelX: labelX,\r\n                                labelY: labelY,\r\n                                glWidth: lineWidth,\r\n                                glColor: lineColor,\r\n                                glBorderDash: borderDash,\r\n                                glBorderDashOffset: borderDashOffset,\r\n                                rotation: -1 * labelRotationRadians,\r\n                                label: label,\r\n                                textBaseline: textBaseline,\r\n                                textAlign: textAlign\r\n                            });\r\n                        });\r\n\r\n                        // Draw all of the tick labels, tick marks, and grid lines at the correct places\r\n                        helpers.each(itemsToDraw, function(itemToDraw) {\r\n                            if (gridLines.display) {\r\n                                context.save();\r\n                                context.lineWidth = itemToDraw.glWidth;\r\n                                context.strokeStyle = itemToDraw.glColor;\r\n                                if (context.setLineDash) {\r\n                                    context.setLineDash(itemToDraw.glBorderDash);\r\n                                    context.lineDashOffset = itemToDraw.glBorderDashOffset;\r\n                                }\r\n\r\n                                context.beginPath();\r\n\r\n                                if (gridLines.drawTicks) {\r\n                                    context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\r\n                                    context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\r\n                                }\r\n\r\n                                if (gridLines.drawOnChartArea) {\r\n                                    context.moveTo(itemToDraw.x1, itemToDraw.y1);\r\n                                    context.lineTo(itemToDraw.x2, itemToDraw.y2);\r\n                                }\r\n\r\n                                context.stroke();\r\n                                context.restore();\r\n                            }\r\n\r\n                            if (optionTicks.display) {\r\n                                context.save();\r\n                                context.translate(itemToDraw.labelX, itemToDraw.labelY);\r\n                                context.rotate(itemToDraw.rotation);\r\n                                context.font = tickFont.font;\r\n                                context.textBaseline = itemToDraw.textBaseline;\r\n                                context.textAlign = itemToDraw.textAlign;\r\n\r\n                                var label = itemToDraw.label;\r\n                                if (helpers.isArray(label)) {\r\n                                    for (var i = 0, y = 0; i < label.length; ++i) {\r\n                                        // We just make sure the multiline element is a string here..\r\n                                        context.fillText('' + label[i], 0, y);\r\n                                        // apply same lineSpacing as calculated @ L#320\r\n                                        y += (tickFont.size * 1.5);\r\n                                    }\r\n                                } else {\r\n                                    context.fillText(label, 0, 0);\r\n                                }\r\n                                context.restore();\r\n                            }\r\n                        });\r\n\r\n                        if (scaleLabel.display) {\r\n                            // Draw the scale label\r\n                            var scaleLabelX;\r\n                            var scaleLabelY;\r\n                            var rotation = 0;\r\n\r\n                            if (isHorizontal) {\r\n                                scaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\r\n                                scaleLabelY = options.position === 'bottom' ? me.bottom - (scaleLabelFont.size / 2) : me.top + (scaleLabelFont.size / 2);\r\n                            } else {\r\n                                var isLeft = options.position === 'left';\r\n                                scaleLabelX = isLeft ? me.left + (scaleLabelFont.size / 2) : me.right - (scaleLabelFont.size / 2);\r\n                                scaleLabelY = me.top + ((me.bottom - me.top) / 2);\r\n                                rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\r\n                            }\r\n\r\n                            context.save();\r\n                            context.translate(scaleLabelX, scaleLabelY);\r\n                            context.rotate(rotation);\r\n                            context.textAlign = 'center';\r\n                            context.textBaseline = 'middle';\r\n                            context.fillStyle = scaleLabelFontColor; // render in correct colour\r\n                            context.font = scaleLabelFont.font;\r\n                            context.fillText(scaleLabel.labelString, 0, 0);\r\n                            context.restore();\r\n                        }\r\n\r\n                        if (gridLines.drawBorder) {\r\n                            // Draw the line at the edge of the axis\r\n                            context.lineWidth = helpers.getValueAtIndexOrDefault(gridLines.lineWidth, 0);\r\n                            context.strokeStyle = helpers.getValueAtIndexOrDefault(gridLines.color, 0);\r\n                            var x1 = me.left,\r\n                                x2 = me.right,\r\n                                y1 = me.top,\r\n                                y2 = me.bottom;\r\n\r\n                            var aliasPixel = helpers.aliasPixel(context.lineWidth);\r\n                            if (isHorizontal) {\r\n                                y1 = y2 = options.position === 'top' ? me.bottom : me.top;\r\n                                y1 += aliasPixel;\r\n                                y2 += aliasPixel;\r\n                            } else {\r\n                                x1 = x2 = options.position === 'left' ? me.right : me.left;\r\n                                x1 += aliasPixel;\r\n                                x2 += aliasPixel;\r\n                            }\r\n\r\n                            context.beginPath();\r\n                            context.moveTo(x1, y1);\r\n                            context.lineTo(x2, y2);\r\n                            context.stroke();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, {}],\r\n        32: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                Chart.scaleService = {\r\n                    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\r\n                    // use the new chart options to grab the correct scale\r\n                    constructors: {},\r\n                    // Use a registration function so that we can move to an ES6 map when we no longer need to support\r\n                    // old browsers\r\n\r\n                    // Scale config defaults\r\n                    defaults: {},\r\n                    registerScaleType: function(type, scaleConstructor, defaults) {\r\n                        this.constructors[type] = scaleConstructor;\r\n                        this.defaults[type] = helpers.clone(defaults);\r\n                    },\r\n                    getScaleConstructor: function(type) {\r\n                        return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\r\n                    },\r\n                    getScaleDefaults: function(type) {\r\n                        // Return the scale defaults merged with the global settings so that we always use the latest ones\r\n                        return this.defaults.hasOwnProperty(type) ? helpers.scaleMerge(Chart.defaults.scale, this.defaults[type]) : {};\r\n                    },\r\n                    updateScaleDefaults: function(type, additions) {\r\n                        var defaults = this.defaults;\r\n                        if (defaults.hasOwnProperty(type)) {\r\n                            defaults[type] = helpers.extend(defaults[type], additions);\r\n                        }\r\n                    },\r\n                    addScalesToLayout: function(chart) {\r\n                        // Adds each scale to the chart.boxes array to be sized accordingly\r\n                        helpers.each(chart.scales, function(scale) {\r\n                            // Set ILayoutItem parameters for backwards compatibility\r\n                            scale.fullWidth = scale.options.fullWidth;\r\n                            scale.position = scale.options.position;\r\n                            scale.weight = scale.options.weight;\r\n                            Chart.layoutService.addBox(chart, scale);\r\n                        });\r\n                    }\r\n                };\r\n            };\r\n\r\n        }, {}],\r\n        33: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                /**\r\n                 * Namespace to hold static tick generation functions\r\n                 * @namespace Chart.Ticks\r\n                 */\r\n                Chart.Ticks = {\r\n                    /**\r\n                     * Namespace to hold generators for different types of ticks\r\n                     * @namespace Chart.Ticks.generators\r\n                     */\r\n                    generators: {\r\n                        /**\r\n                         * Interface for the options provided to the numeric tick generator\r\n                         * @interface INumericTickGenerationOptions\r\n                         */\r\n                        /**\r\n                         * The maximum number of ticks to display\r\n                         * @name INumericTickGenerationOptions#maxTicks\r\n                         * @type Number\r\n                         */\r\n                        /**\r\n                         * The distance between each tick.\r\n                         * @name INumericTickGenerationOptions#stepSize\r\n                         * @type Number\r\n                         * @optional\r\n                         */\r\n                        /**\r\n                         * Forced minimum for the ticks. If not specified, the minimum of the data range is used to calculate the tick minimum\r\n                         * @name INumericTickGenerationOptions#min\r\n                         * @type Number\r\n                         * @optional\r\n                         */\r\n                        /**\r\n                         * The maximum value of the ticks. If not specified, the maximum of the data range is used to calculate the tick maximum\r\n                         * @name INumericTickGenerationOptions#max\r\n                         * @type Number\r\n                         * @optional\r\n                         */\r\n\r\n                        /**\r\n                         * Generate a set of linear ticks\r\n                         * @method Chart.Ticks.generators.linear\r\n                         * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\r\n                         * @param dataRange {IRange} the range of the data\r\n                         * @returns {Array<Number>} array of tick values\r\n                         */\r\n                        linear: function(generationOptions, dataRange) {\r\n                            var ticks = [];\r\n                            // To get a \"nice\" value for the tick spacing, we will use the appropriately named\r\n                            // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\r\n                            // for details.\r\n\r\n                            var spacing;\r\n                            if (generationOptions.stepSize && generationOptions.stepSize > 0) {\r\n                                spacing = generationOptions.stepSize;\r\n                            } else {\r\n                                var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\r\n                                spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\r\n                            }\r\n                            var niceMin = Math.floor(dataRange.min / spacing) * spacing;\r\n                            var niceMax = Math.ceil(dataRange.max / spacing) * spacing;\r\n\r\n                            // If min, max and stepSize is set and they make an evenly spaced scale use it.\r\n                            if (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\r\n                                // If very close to our whole number, use it.\r\n                                if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\r\n                                    niceMin = generationOptions.min;\r\n                                    niceMax = generationOptions.max;\r\n                                }\r\n                            }\r\n\r\n                            var numSpaces = (niceMax - niceMin) / spacing;\r\n                            // If very close to our rounded value, use it.\r\n                            if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\r\n                                numSpaces = Math.round(numSpaces);\r\n                            } else {\r\n                                numSpaces = Math.ceil(numSpaces);\r\n                            }\r\n\r\n                            // Put the values into the ticks array\r\n                            ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\r\n                            for (var j = 1; j < numSpaces; ++j) {\r\n                                ticks.push(niceMin + (j * spacing));\r\n                            }\r\n                            ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\r\n\r\n                            return ticks;\r\n                        },\r\n\r\n                        /**\r\n                         * Generate a set of logarithmic ticks\r\n                         * @method Chart.Ticks.generators.logarithmic\r\n                         * @param generationOptions {INumericTickGenerationOptions} the options used to generate the ticks\r\n                         * @param dataRange {IRange} the range of the data\r\n                         * @returns {Array<Number>} array of tick values\r\n                         */\r\n                        logarithmic: function(generationOptions, dataRange) {\r\n                            var ticks = [];\r\n                            var getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n                            // Figure out what the max number of ticks we can support it is based on the size of\r\n                            // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n                            // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n                            // the graph\r\n                            var tickVal = getValueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\r\n\r\n                            var endExp = Math.floor(helpers.log10(dataRange.max));\r\n                            var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\r\n                            var exp;\r\n                            var significand;\r\n\r\n                            if (tickVal === 0) {\r\n                                exp = Math.floor(helpers.log10(dataRange.minNotZero));\r\n                                significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\r\n\r\n                                ticks.push(tickVal);\r\n                                tickVal = significand * Math.pow(10, exp);\r\n                            } else {\r\n                                exp = Math.floor(helpers.log10(tickVal));\r\n                                significand = Math.floor(tickVal / Math.pow(10, exp));\r\n                            }\r\n\r\n                            do {\r\n                                ticks.push(tickVal);\r\n\r\n                                ++significand;\r\n                                if (significand === 10) {\r\n                                    significand = 1;\r\n                                    ++exp;\r\n                                }\r\n\r\n                                tickVal = significand * Math.pow(10, exp);\r\n                            } while (exp < endExp || (exp === endExp && significand < endSignificand));\r\n\r\n                            var lastTick = getValueOrDefault(generationOptions.max, tickVal);\r\n                            ticks.push(lastTick);\r\n\r\n                            return ticks;\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Namespace to hold formatters for different types of ticks\r\n                     * @namespace Chart.Ticks.formatters\r\n                     */\r\n                    formatters: {\r\n                        /**\r\n                         * Formatter for value labels\r\n                         * @method Chart.Ticks.formatters.values\r\n                         * @param value the value to display\r\n                         * @return {String|Array} the label to display\r\n                         */\r\n                        values: function(value) {\r\n                            return helpers.isArray(value) ? value : '' + value;\r\n                        },\r\n\r\n                        /**\r\n                         * Formatter for linear numeric ticks\r\n                         * @method Chart.Ticks.formatters.linear\r\n                         * @param tickValue {Number} the value to be formatted\r\n                         * @param index {Number} the position of the tickValue parameter in the ticks array\r\n                         * @param ticks {Array<Number>} the list of ticks being converted\r\n                         * @return {String} string representation of the tickValue parameter\r\n                         */\r\n                        linear: function(tickValue, index, ticks) {\r\n                            // If we have lots of ticks, don't use the ones\r\n                            var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\r\n\r\n                            // If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n                            if (Math.abs(delta) > 1) {\r\n                                if (tickValue !== Math.floor(tickValue)) {\r\n                                    // not an integer\r\n                                    delta = tickValue - Math.floor(tickValue);\r\n                                }\r\n                            }\r\n\r\n                            var logDelta = helpers.log10(Math.abs(delta));\r\n                            var tickString = '';\r\n\r\n                            if (tickValue !== 0) {\r\n                                var numDecimal = -1 * Math.floor(logDelta);\r\n                                numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\r\n                                tickString = tickValue.toFixed(numDecimal);\r\n                            } else {\r\n                                tickString = '0'; // never show decimal places for 0\r\n                            }\r\n\r\n                            return tickString;\r\n                        },\r\n\r\n                        logarithmic: function(tickValue, index, ticks) {\r\n                            var remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\r\n\r\n                            if (tickValue === 0) {\r\n                                return '0';\r\n                            } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\r\n                                return tickValue.toExponential();\r\n                            }\r\n                            return '';\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n\r\n        }, {}],\r\n        34: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                /**\r\n                 * Helper method to merge the opacity into a color\r\n                 */\r\n                function mergeOpacity(colorString, opacity) {\r\n                    var color = helpers.color(colorString);\r\n                    return color.alpha(opacity * color.alpha()).rgbaString();\r\n                }\r\n\r\n                Chart.defaults.global.tooltips = {\r\n                    enabled: true,\r\n                    custom: null,\r\n                    mode: 'nearest',\r\n                    position: 'average',\r\n                    intersect: true,\r\n                    backgroundColor: 'rgba(0,0,0,0.8)',\r\n                    titleFontStyle: 'bold',\r\n                    titleSpacing: 2,\r\n                    titleMarginBottom: 6,\r\n                    titleFontColor: '#fff',\r\n                    titleAlign: 'left',\r\n                    bodySpacing: 2,\r\n                    bodyFontColor: '#fff',\r\n                    bodyAlign: 'left',\r\n                    footerFontStyle: 'bold',\r\n                    footerSpacing: 2,\r\n                    footerMarginTop: 6,\r\n                    footerFontColor: '#fff',\r\n                    footerAlign: 'left',\r\n                    yPadding: 6,\r\n                    xPadding: 6,\r\n                    caretPadding: 2,\r\n                    caretSize: 5,\r\n                    cornerRadius: 6,\r\n                    multiKeyBackground: '#fff',\r\n                    displayColors: true,\r\n                    borderColor: 'rgba(0,0,0,0)',\r\n                    borderWidth: 0,\r\n                    callbacks: {\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeTitle: helpers.noop,\r\n                        title: function(tooltipItems, data) {\r\n                            // Pick first xLabel for now\r\n                            var title = '';\r\n                            var labels = data.labels;\r\n                            var labelCount = labels ? labels.length : 0;\r\n\r\n                            if (tooltipItems.length > 0) {\r\n                                var item = tooltipItems[0];\r\n\r\n                                if (item.xLabel) {\r\n                                    title = item.xLabel;\r\n                                } else if (labelCount > 0 && item.index < labelCount) {\r\n                                    title = labels[item.index];\r\n                                }\r\n                            }\r\n\r\n                            return title;\r\n                        },\r\n                        afterTitle: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItem, data)\r\n                        beforeLabel: helpers.noop,\r\n                        label: function(tooltipItem, data) {\r\n                            var label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n\r\n                            if (label) {\r\n                                label += ': ';\r\n                            }\r\n                            label += tooltipItem.yLabel;\r\n                            return label;\r\n                        },\r\n                        labelColor: function(tooltipItem, chart) {\r\n                            var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\r\n                            var activeElement = meta.data[tooltipItem.index];\r\n                            var view = activeElement._view;\r\n                            return {\r\n                                borderColor: view.borderColor,\r\n                                backgroundColor: view.backgroundColor\r\n                            };\r\n                        },\r\n                        afterLabel: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        afterBody: helpers.noop,\r\n\r\n                        // Args are: (tooltipItems, data)\r\n                        beforeFooter: helpers.noop,\r\n                        footer: helpers.noop,\r\n                        afterFooter: helpers.noop\r\n                    }\r\n                };\r\n\r\n                // Helper to push or concat based on if the 2nd parameter is an array or not\r\n                function pushOrConcat(base, toPush) {\r\n                    if (toPush) {\r\n                        if (helpers.isArray(toPush)) {\r\n                            // base = base.concat(toPush);\r\n                            Array.prototype.push.apply(base, toPush);\r\n                        } else {\r\n                            base.push(toPush);\r\n                        }\r\n                    }\r\n\r\n                    return base;\r\n                }\r\n\r\n                // Private helper to create a tooltip item model\r\n                // @param element : the chart element (point, arc, bar) to create the tooltip item for\r\n                // @return : new tooltip item\r\n                function createTooltipItem(element) {\r\n                    var xScale = element._xScale;\r\n                    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\r\n                    var index = element._index,\r\n                        datasetIndex = element._datasetIndex;\r\n\r\n                    return {\r\n                        xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\r\n                        index: index,\r\n                        datasetIndex: datasetIndex,\r\n                        x: element._model.x,\r\n                        y: element._model.y\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the reset model for the tooltip\r\n                 * @param tooltipOpts {Object} the tooltip options\r\n                 */\r\n                function getBaseModel(tooltipOpts) {\r\n                    var globalDefaults = Chart.defaults.global;\r\n                    var getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n                    return {\r\n                        // Positioning\r\n                        xPadding: tooltipOpts.xPadding,\r\n                        yPadding: tooltipOpts.yPadding,\r\n                        xAlign: tooltipOpts.xAlign,\r\n                        yAlign: tooltipOpts.yAlign,\r\n\r\n                        // Body\r\n                        bodyFontColor: tooltipOpts.bodyFontColor,\r\n                        _bodyFontFamily: getValueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\r\n                        _bodyFontStyle: getValueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\r\n                        _bodyAlign: tooltipOpts.bodyAlign,\r\n                        bodyFontSize: getValueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\r\n                        bodySpacing: tooltipOpts.bodySpacing,\r\n\r\n                        // Title\r\n                        titleFontColor: tooltipOpts.titleFontColor,\r\n                        _titleFontFamily: getValueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\r\n                        _titleFontStyle: getValueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\r\n                        titleFontSize: getValueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\r\n                        _titleAlign: tooltipOpts.titleAlign,\r\n                        titleSpacing: tooltipOpts.titleSpacing,\r\n                        titleMarginBottom: tooltipOpts.titleMarginBottom,\r\n\r\n                        // Footer\r\n                        footerFontColor: tooltipOpts.footerFontColor,\r\n                        _footerFontFamily: getValueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\r\n                        _footerFontStyle: getValueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\r\n                        footerFontSize: getValueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\r\n                        _footerAlign: tooltipOpts.footerAlign,\r\n                        footerSpacing: tooltipOpts.footerSpacing,\r\n                        footerMarginTop: tooltipOpts.footerMarginTop,\r\n\r\n                        // Appearance\r\n                        caretSize: tooltipOpts.caretSize,\r\n                        cornerRadius: tooltipOpts.cornerRadius,\r\n                        backgroundColor: tooltipOpts.backgroundColor,\r\n                        opacity: 0,\r\n                        legendColorBackground: tooltipOpts.multiKeyBackground,\r\n                        displayColors: tooltipOpts.displayColors,\r\n                        borderColor: tooltipOpts.borderColor,\r\n                        borderWidth: tooltipOpts.borderWidth\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Get the size of the tooltip\r\n                 */\r\n                function getTooltipSize(tooltip, model) {\r\n                    var ctx = tooltip._chart.ctx;\r\n\r\n                    var height = model.yPadding * 2; // Tooltip Padding\r\n                    var width = 0;\r\n\r\n                    // Count of all lines in the body\r\n                    var body = model.body;\r\n                    var combinedBodyLength = body.reduce(function(count, bodyItem) {\r\n                        return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\r\n                    }, 0);\r\n                    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\r\n\r\n                    var titleLineCount = model.title.length;\r\n                    var footerLineCount = model.footer.length;\r\n                    var titleFontSize = model.titleFontSize,\r\n                        bodyFontSize = model.bodyFontSize,\r\n                        footerFontSize = model.footerFontSize;\r\n\r\n                    height += titleLineCount * titleFontSize; // Title Lines\r\n                    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\r\n                    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\r\n                    height += combinedBodyLength * bodyFontSize; // Body Lines\r\n                    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\r\n                    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\r\n                    height += footerLineCount * (footerFontSize); // Footer Lines\r\n                    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\r\n\r\n                    // Title width\r\n                    var widthPadding = 0;\r\n                    var maxLineWidth = function(line) {\r\n                        width = Math.max(width, ctx.measureText(line).width + widthPadding);\r\n                    };\r\n\r\n                    ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\r\n                    helpers.each(model.title, maxLineWidth);\r\n\r\n                    // Body width\r\n                    ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\r\n                    helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\r\n\r\n                    // Body lines may include some extra width due to the color box\r\n                    widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\r\n                    helpers.each(body, function(bodyItem) {\r\n                        helpers.each(bodyItem.before, maxLineWidth);\r\n                        helpers.each(bodyItem.lines, maxLineWidth);\r\n                        helpers.each(bodyItem.after, maxLineWidth);\r\n                    });\r\n\r\n                    // Reset back to 0\r\n                    widthPadding = 0;\r\n\r\n                    // Footer width\r\n                    ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\r\n                    helpers.each(model.footer, maxLineWidth);\r\n\r\n                    // Add padding\r\n                    width += 2 * model.xPadding;\r\n\r\n                    return {\r\n                        width: width,\r\n                        height: height\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper to get the alignment of a tooltip given the size\r\n                 */\r\n                function determineAlignment(tooltip, size) {\r\n                    var model = tooltip._model;\r\n                    var chart = tooltip._chart;\r\n                    var chartArea = tooltip._chart.chartArea;\r\n                    var xAlign = 'center';\r\n                    var yAlign = 'center';\r\n\r\n                    if (model.y < size.height) {\r\n                        yAlign = 'top';\r\n                    } else if (model.y > (chart.height - size.height)) {\r\n                        yAlign = 'bottom';\r\n                    }\r\n\r\n                    var lf, rf; // functions to determine left, right alignment\r\n                    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\r\n                    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\r\n                    var midX = (chartArea.left + chartArea.right) / 2;\r\n                    var midY = (chartArea.top + chartArea.bottom) / 2;\r\n\r\n                    if (yAlign === 'center') {\r\n                        lf = function(x) {\r\n                            return x <= midX;\r\n                        };\r\n                        rf = function(x) {\r\n                            return x > midX;\r\n                        };\r\n                    } else {\r\n                        lf = function(x) {\r\n                            return x <= (size.width / 2);\r\n                        };\r\n                        rf = function(x) {\r\n                            return x >= (chart.width - (size.width / 2));\r\n                        };\r\n                    }\r\n\r\n                    olf = function(x) {\r\n                        return x + size.width > chart.width;\r\n                    };\r\n                    orf = function(x) {\r\n                        return x - size.width < 0;\r\n                    };\r\n                    yf = function(y) {\r\n                        return y <= midY ? 'top' : 'bottom';\r\n                    };\r\n\r\n                    if (lf(model.x)) {\r\n                        xAlign = 'left';\r\n\r\n                        // Is tooltip too wide and goes over the right side of the chart.?\r\n                        if (olf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    } else if (rf(model.x)) {\r\n                        xAlign = 'right';\r\n\r\n                        // Is tooltip too wide and goes outside left edge of canvas?\r\n                        if (orf(model.x)) {\r\n                            xAlign = 'center';\r\n                            yAlign = yf(model.y);\r\n                        }\r\n                    }\r\n\r\n                    var opts = tooltip._options;\r\n                    return {\r\n                        xAlign: opts.xAlign ? opts.xAlign : xAlign,\r\n                        yAlign: opts.yAlign ? opts.yAlign : yAlign\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\r\n                 */\r\n                function getBackgroundPoint(vm, size, alignment) {\r\n                    // Background Position\r\n                    var x = vm.x;\r\n                    var y = vm.y;\r\n\r\n                    var caretSize = vm.caretSize,\r\n                        caretPadding = vm.caretPadding,\r\n                        cornerRadius = vm.cornerRadius,\r\n                        xAlign = alignment.xAlign,\r\n                        yAlign = alignment.yAlign,\r\n                        paddingAndSize = caretSize + caretPadding,\r\n                        radiusAndPadding = cornerRadius + caretPadding;\r\n\r\n                    if (xAlign === 'right') {\r\n                        x -= size.width;\r\n                    } else if (xAlign === 'center') {\r\n                        x -= (size.width / 2);\r\n                    }\r\n\r\n                    if (yAlign === 'top') {\r\n                        y += paddingAndSize;\r\n                    } else if (yAlign === 'bottom') {\r\n                        y -= size.height + paddingAndSize;\r\n                    } else {\r\n                        y -= (size.height / 2);\r\n                    }\r\n\r\n                    if (yAlign === 'center') {\r\n                        if (xAlign === 'left') {\r\n                            x += paddingAndSize;\r\n                        } else if (xAlign === 'right') {\r\n                            x -= paddingAndSize;\r\n                        }\r\n                    } else if (xAlign === 'left') {\r\n                        x -= radiusAndPadding;\r\n                    } else if (xAlign === 'right') {\r\n                        x += radiusAndPadding;\r\n                    }\r\n\r\n                    return {\r\n                        x: x,\r\n                        y: y\r\n                    };\r\n                }\r\n\r\n                Chart.Tooltip = Chart.Element.extend({\r\n                    initialize: function() {\r\n                        this._model = getBaseModel(this._options);\r\n                    },\r\n\r\n                    // Get the title\r\n                    // Args are: (tooltipItem, data)\r\n                    getTitle: function() {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n                        var callbacks = opts.callbacks;\r\n\r\n                        var beforeTitle = callbacks.beforeTitle.apply(me, arguments),\r\n                            title = callbacks.title.apply(me, arguments),\r\n                            afterTitle = callbacks.afterTitle.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeTitle);\r\n                        lines = pushOrConcat(lines, title);\r\n                        lines = pushOrConcat(lines, afterTitle);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBeforeBody: function() {\r\n                        var lines = this._options.callbacks.beforeBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getBody: function(tooltipItems, data) {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n                        var bodyItems = [];\r\n\r\n                        helpers.each(tooltipItems, function(tooltipItem) {\r\n                            var bodyItem = {\r\n                                before: [],\r\n                                lines: [],\r\n                                after: []\r\n                            };\r\n                            pushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\r\n                            pushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\r\n\r\n                            bodyItems.push(bodyItem);\r\n                        });\r\n\r\n                        return bodyItems;\r\n                    },\r\n\r\n                    // Args are: (tooltipItem, data)\r\n                    getAfterBody: function() {\r\n                        var lines = this._options.callbacks.afterBody.apply(this, arguments);\r\n                        return helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\r\n                    },\r\n\r\n                    // Get the footer and beforeFooter and afterFooter lines\r\n                    // Args are: (tooltipItem, data)\r\n                    getFooter: function() {\r\n                        var me = this;\r\n                        var callbacks = me._options.callbacks;\r\n\r\n                        var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\r\n                        var footer = callbacks.footer.apply(me, arguments);\r\n                        var afterFooter = callbacks.afterFooter.apply(me, arguments);\r\n\r\n                        var lines = [];\r\n                        lines = pushOrConcat(lines, beforeFooter);\r\n                        lines = pushOrConcat(lines, footer);\r\n                        lines = pushOrConcat(lines, afterFooter);\r\n\r\n                        return lines;\r\n                    },\r\n\r\n                    update: function(changed) {\r\n                        var me = this;\r\n                        var opts = me._options;\r\n\r\n                        // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\r\n                        // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\r\n                        // which breaks any animations.\r\n                        var existingModel = me._model;\r\n                        var model = me._model = getBaseModel(opts);\r\n                        var active = me._active;\r\n\r\n                        var data = me._data;\r\n\r\n                        // In the case where active.length === 0 we need to keep these at existing values for good animations\r\n                        var alignment = {\r\n                            xAlign: existingModel.xAlign,\r\n                            yAlign: existingModel.yAlign\r\n                        };\r\n                        var backgroundPoint = {\r\n                            x: existingModel.x,\r\n                            y: existingModel.y\r\n                        };\r\n                        var tooltipSize = {\r\n                            width: existingModel.width,\r\n                            height: existingModel.height\r\n                        };\r\n                        var tooltipPosition = {\r\n                            x: existingModel.caretX,\r\n                            y: existingModel.caretY\r\n                        };\r\n\r\n                        var i, len;\r\n\r\n                        if (active.length) {\r\n                            model.opacity = 1;\r\n\r\n                            var labelColors = [];\r\n                            tooltipPosition = Chart.Tooltip.positioners[opts.position](active, me._eventPosition);\r\n\r\n                            var tooltipItems = [];\r\n                            for (i = 0, len = active.length; i < len; ++i) {\r\n                                tooltipItems.push(createTooltipItem(active[i]));\r\n                            }\r\n\r\n                            // If the user provided a filter function, use it to modify the tooltip items\r\n                            if (opts.filter) {\r\n                                tooltipItems = tooltipItems.filter(function(a) {\r\n                                    return opts.filter(a, data);\r\n                                });\r\n                            }\r\n\r\n                            // If the user provided a sorting function, use it to modify the tooltip items\r\n                            if (opts.itemSort) {\r\n                                tooltipItems = tooltipItems.sort(function(a, b) {\r\n                                    return opts.itemSort(a, b, data);\r\n                                });\r\n                            }\r\n\r\n                            // Determine colors for boxes\r\n                            helpers.each(tooltipItems, function(tooltipItem) {\r\n                                labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\r\n                            });\r\n\r\n                            // Build the Text Lines\r\n                            model.title = me.getTitle(tooltipItems, data);\r\n                            model.beforeBody = me.getBeforeBody(tooltipItems, data);\r\n                            model.body = me.getBody(tooltipItems, data);\r\n                            model.afterBody = me.getAfterBody(tooltipItems, data);\r\n                            model.footer = me.getFooter(tooltipItems, data);\r\n\r\n                            // Initial positioning and colors\r\n                            model.x = Math.round(tooltipPosition.x);\r\n                            model.y = Math.round(tooltipPosition.y);\r\n                            model.caretPadding = opts.caretPadding;\r\n                            model.labelColors = labelColors;\r\n\r\n                            // data points\r\n                            model.dataPoints = tooltipItems;\r\n\r\n                            // We need to determine alignment of the tooltip\r\n                            tooltipSize = getTooltipSize(this, model);\r\n                            alignment = determineAlignment(this, tooltipSize);\r\n                            // Final Size and Position\r\n                            backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment);\r\n                        } else {\r\n                            model.opacity = 0;\r\n                        }\r\n\r\n                        model.xAlign = alignment.xAlign;\r\n                        model.yAlign = alignment.yAlign;\r\n                        model.x = backgroundPoint.x;\r\n                        model.y = backgroundPoint.y;\r\n                        model.width = tooltipSize.width;\r\n                        model.height = tooltipSize.height;\r\n\r\n                        // Point where the caret on the tooltip points to\r\n                        model.caretX = tooltipPosition.x;\r\n                        model.caretY = tooltipPosition.y;\r\n\r\n                        me._model = model;\r\n\r\n                        if (changed && opts.custom) {\r\n                            opts.custom.call(me, model);\r\n                        }\r\n\r\n                        return me;\r\n                    },\r\n                    drawCaret: function(tooltipPoint, size) {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n                        var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\r\n\r\n                        ctx.lineTo(caretPosition.x1, caretPosition.y1);\r\n                        ctx.lineTo(caretPosition.x2, caretPosition.y2);\r\n                        ctx.lineTo(caretPosition.x3, caretPosition.y3);\r\n                    },\r\n                    getCaretPosition: function(tooltipPoint, size, vm) {\r\n                        var x1, x2, x3;\r\n                        var y1, y2, y3;\r\n                        var caretSize = vm.caretSize;\r\n                        var cornerRadius = vm.cornerRadius;\r\n                        var xAlign = vm.xAlign,\r\n                            yAlign = vm.yAlign;\r\n                        var ptX = tooltipPoint.x,\r\n                            ptY = tooltipPoint.y;\r\n                        var width = size.width,\r\n                            height = size.height;\r\n\r\n                        if (yAlign === 'center') {\r\n                            y2 = ptY + (height / 2);\r\n\r\n                            if (xAlign === 'left') {\r\n                                x1 = ptX;\r\n                                x2 = x1 - caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 + caretSize;\r\n                                y3 = y2 - caretSize;\r\n                            } else {\r\n                                x1 = ptX + width;\r\n                                x2 = x1 + caretSize;\r\n                                x3 = x1;\r\n\r\n                                y1 = y2 - caretSize;\r\n                                y3 = y2 + caretSize;\r\n                            }\r\n                        } else {\r\n                            if (xAlign === 'left') {\r\n                                x2 = ptX + cornerRadius + (caretSize);\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else if (xAlign === 'right') {\r\n                                x2 = ptX + width - cornerRadius - caretSize;\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            } else {\r\n                                x2 = ptX + (width / 2);\r\n                                x1 = x2 - caretSize;\r\n                                x3 = x2 + caretSize;\r\n                            }\r\n                            if (yAlign === 'top') {\r\n                                y1 = ptY;\r\n                                y2 = y1 - caretSize;\r\n                                y3 = y1;\r\n                            } else {\r\n                                y1 = ptY + height;\r\n                                y2 = y1 + caretSize;\r\n                                y3 = y1;\r\n                                // invert drawing order\r\n                                var tmp = x3;\r\n                                x3 = x1;\r\n                                x1 = tmp;\r\n                            }\r\n                        }\r\n                        return { x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3 };\r\n                    },\r\n                    drawTitle: function(pt, vm, ctx, opacity) {\r\n                        var title = vm.title;\r\n\r\n                        if (title.length) {\r\n                            ctx.textAlign = vm._titleAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            var titleFontSize = vm.titleFontSize,\r\n                                titleSpacing = vm.titleSpacing;\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\r\n                            ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\r\n\r\n                            var i, len;\r\n                            for (i = 0, len = title.length; i < len; ++i) {\r\n                                ctx.fillText(title[i], pt.x, pt.y);\r\n                                pt.y += titleFontSize + titleSpacing; // Line Height and spacing\r\n\r\n                                if (i + 1 === title.length) {\r\n                                    pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    drawBody: function(pt, vm, ctx, opacity) {\r\n                        var bodyFontSize = vm.bodyFontSize;\r\n                        var bodySpacing = vm.bodySpacing;\r\n                        var body = vm.body;\r\n\r\n                        ctx.textAlign = vm._bodyAlign;\r\n                        ctx.textBaseline = 'top';\r\n\r\n                        var textColor = mergeOpacity(vm.bodyFontColor, opacity);\r\n                        ctx.fillStyle = textColor;\r\n                        ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\r\n\r\n                        // Before Body\r\n                        var xLinePadding = 0;\r\n                        var fillLineOfText = function(line) {\r\n                            ctx.fillText(line, pt.x + xLinePadding, pt.y);\r\n                            pt.y += bodyFontSize + bodySpacing;\r\n                        };\r\n\r\n                        // Before body lines\r\n                        helpers.each(vm.beforeBody, fillLineOfText);\r\n\r\n                        var drawColorBoxes = vm.displayColors;\r\n                        xLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\r\n\r\n                        // Draw body lines now\r\n                        helpers.each(body, function(bodyItem, i) {\r\n                            helpers.each(bodyItem.before, fillLineOfText);\r\n\r\n                            helpers.each(bodyItem.lines, function(line) {\r\n                                // Draw Legend-like boxes if needed\r\n                                if (drawColorBoxes) {\r\n                                    // Fill a white rect so that colours merge nicely if the opacity is < 1\r\n                                    ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\r\n                                    ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Border\r\n                                    ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\r\n                                    ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\r\n\r\n                                    // Inner square\r\n                                    ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\r\n                                    ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\r\n\r\n                                    ctx.fillStyle = textColor;\r\n                                }\r\n\r\n                                fillLineOfText(line);\r\n                            });\r\n\r\n                            helpers.each(bodyItem.after, fillLineOfText);\r\n                        });\r\n\r\n                        // Reset back to 0 for after body\r\n                        xLinePadding = 0;\r\n\r\n                        // After body lines\r\n                        helpers.each(vm.afterBody, fillLineOfText);\r\n                        pt.y -= bodySpacing; // Remove last body spacing\r\n                    },\r\n                    drawFooter: function(pt, vm, ctx, opacity) {\r\n                        var footer = vm.footer;\r\n\r\n                        if (footer.length) {\r\n                            pt.y += vm.footerMarginTop;\r\n\r\n                            ctx.textAlign = vm._footerAlign;\r\n                            ctx.textBaseline = 'top';\r\n\r\n                            ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\r\n                            ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\r\n\r\n                            helpers.each(footer, function(line) {\r\n                                ctx.fillText(line, pt.x, pt.y);\r\n                                pt.y += vm.footerFontSize + vm.footerSpacing;\r\n                            });\r\n                        }\r\n                    },\r\n                    drawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\r\n                        ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\r\n                        ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\r\n                        ctx.lineWidth = vm.borderWidth;\r\n                        var xAlign = vm.xAlign;\r\n                        var yAlign = vm.yAlign;\r\n                        var x = pt.x;\r\n                        var y = pt.y;\r\n                        var width = tooltipSize.width;\r\n                        var height = tooltipSize.height;\r\n                        var radius = vm.cornerRadius;\r\n\r\n                        ctx.beginPath();\r\n                        ctx.moveTo(x + radius, y);\r\n                        if (yAlign === 'top') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width - radius, y);\r\n                        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n                        if (yAlign === 'center' && xAlign === 'right') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + width, y + height - radius);\r\n                        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\r\n                        if (yAlign === 'bottom') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x + radius, y + height);\r\n                        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n                        if (yAlign === 'center' && xAlign === 'left') {\r\n                            this.drawCaret(pt, tooltipSize);\r\n                        }\r\n                        ctx.lineTo(x, y + radius);\r\n                        ctx.quadraticCurveTo(x, y, x + radius, y);\r\n                        ctx.closePath();\r\n\r\n                        ctx.fill();\r\n\r\n                        if (vm.borderWidth > 0) {\r\n                            ctx.stroke();\r\n                        }\r\n                    },\r\n                    draw: function() {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n\r\n                        if (vm.opacity === 0) {\r\n                            return;\r\n                        }\r\n\r\n                        var tooltipSize = {\r\n                            width: vm.width,\r\n                            height: vm.height\r\n                        };\r\n                        var pt = {\r\n                            x: vm.x,\r\n                            y: vm.y\r\n                        };\r\n\r\n                        // IE11/Edge does not like very small opacities, so snap to 0\r\n                        var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\r\n\r\n                        // Truthy/falsey value for empty tooltip\r\n                        var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\r\n\r\n                        if (this._options.enabled && hasTooltipContent) {\r\n                            // Draw Background\r\n                            this.drawBackground(pt, vm, ctx, tooltipSize, opacity);\r\n\r\n                            // Draw Title, Body, and Footer\r\n                            pt.x += vm.xPadding;\r\n                            pt.y += vm.yPadding;\r\n\r\n                            // Titles\r\n                            this.drawTitle(pt, vm, ctx, opacity);\r\n\r\n                            // Body\r\n                            this.drawBody(pt, vm, ctx, opacity);\r\n\r\n                            // Footer\r\n                            this.drawFooter(pt, vm, ctx, opacity);\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event - The event to handle\r\n                     * @returns {Boolean} true if the tooltip changed\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var options = me._options;\r\n                        var changed = false;\r\n\r\n                        me._lastActive = me._lastActive || [];\r\n\r\n                        // Find Active Elements for tooltips\r\n                        if (e.type === 'mouseout') {\r\n                            me._active = [];\r\n                        } else {\r\n                            me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\r\n                        }\r\n\r\n                        // Remember Last Actives\r\n                        changed = !helpers.arrayEquals(me._active, me._lastActive);\r\n\r\n                        // If tooltip didn't change, do not handle the target event\r\n                        if (!changed) {\r\n                            return false;\r\n                        }\r\n\r\n                        me._lastActive = me._active;\r\n\r\n                        if (options.enabled || options.custom) {\r\n                            me._eventPosition = {\r\n                                x: e.x,\r\n                                y: e.y\r\n                            };\r\n\r\n                            var model = me._model;\r\n                            me.update(true);\r\n                            me.pivot();\r\n\r\n                            // See if our tooltip position changed\r\n                            changed |= (model.x !== me._model.x) || (model.y !== me._model.y);\r\n                        }\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                /**\r\n                 * @namespace Chart.Tooltip.positioners\r\n                 */\r\n                Chart.Tooltip.positioners = {\r\n                    /**\r\n                     * Average mode places the tooltip at the average position of the elements shown\r\n                     * @function Chart.Tooltip.positioners.average\r\n                     * @param elements {ChartElement[]} the elements being displayed in the tooltip\r\n                     * @returns {Point} tooltip position\r\n                     */\r\n                    average: function(elements) {\r\n                        if (!elements.length) {\r\n                            return false;\r\n                        }\r\n\r\n                        var i, len;\r\n                        var x = 0;\r\n                        var y = 0;\r\n                        var count = 0;\r\n\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var pos = el.tooltipPosition();\r\n                                x += pos.x;\r\n                                y += pos.y;\r\n                                ++count;\r\n                            }\r\n                        }\r\n\r\n                        return {\r\n                            x: Math.round(x / count),\r\n                            y: Math.round(y / count)\r\n                        };\r\n                    },\r\n\r\n                    /**\r\n                     * Gets the tooltip position nearest of the item nearest to the event position\r\n                     * @function Chart.Tooltip.positioners.nearest\r\n                     * @param elements {Chart.Element[]} the tooltip elements\r\n                     * @param eventPosition {Point} the position of the event in canvas coordinates\r\n                     * @returns {Point} the tooltip position\r\n                     */\r\n                    nearest: function(elements, eventPosition) {\r\n                        var x = eventPosition.x;\r\n                        var y = eventPosition.y;\r\n\r\n                        var nearestElement;\r\n                        var minDistance = Number.POSITIVE_INFINITY;\r\n                        var i, len;\r\n                        for (i = 0, len = elements.length; i < len; ++i) {\r\n                            var el = elements[i];\r\n                            if (el && el.hasValue()) {\r\n                                var center = el.getCenterPoint();\r\n                                var d = helpers.distanceBetweenPoints(eventPosition, center);\r\n\r\n                                if (d < minDistance) {\r\n                                    minDistance = d;\r\n                                    nearestElement = el;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        if (nearestElement) {\r\n                            var tp = nearestElement.tooltipPosition();\r\n                            x = tp.x;\r\n                            y = tp.y;\r\n                        }\r\n\r\n                        return {\r\n                            x: x,\r\n                            y: y\r\n                        };\r\n                    }\r\n                };\r\n            };\r\n\r\n        }, {}],\r\n        35: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers,\r\n                    globalOpts = Chart.defaults.global;\r\n\r\n                globalOpts.elements.arc = {\r\n                    backgroundColor: globalOpts.defaultColor,\r\n                    borderColor: '#fff',\r\n                    borderWidth: 2\r\n                };\r\n\r\n                Chart.elements.Arc = Chart.Element.extend({\r\n                    inLabelRange: function(mouseX) {\r\n                        var vm = this._view;\r\n\r\n                        if (vm) {\r\n                            return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\r\n                        }\r\n                        return false;\r\n                    },\r\n                    inRange: function(chartX, chartY) {\r\n                        var vm = this._view;\r\n\r\n                        if (vm) {\r\n                            var pointRelativePosition = helpers.getAngleFromPoint(vm, {\r\n                                    x: chartX,\r\n                                    y: chartY\r\n                                }),\r\n                                angle = pointRelativePosition.angle,\r\n                                distance = pointRelativePosition.distance;\r\n\r\n                            // Sanitise angle range\r\n                            var startAngle = vm.startAngle;\r\n                            var endAngle = vm.endAngle;\r\n                            while (endAngle < startAngle) {\r\n                                endAngle += 2.0 * Math.PI;\r\n                            }\r\n                            while (angle > endAngle) {\r\n                                angle -= 2.0 * Math.PI;\r\n                            }\r\n                            while (angle < startAngle) {\r\n                                angle += 2.0 * Math.PI;\r\n                            }\r\n\r\n                            // Check if within the range of the open/close angle\r\n                            var betweenAngles = (angle >= startAngle && angle <= endAngle),\r\n                                withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\r\n\r\n                            return (betweenAngles && withinRadius);\r\n                        }\r\n                        return false;\r\n                    },\r\n                    getCenterPoint: function() {\r\n                        var vm = this._view;\r\n                        var halfAngle = (vm.startAngle + vm.endAngle) / 2;\r\n                        var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\r\n                        return {\r\n                            x: vm.x + Math.cos(halfAngle) * halfRadius,\r\n                            y: vm.y + Math.sin(halfAngle) * halfRadius\r\n                        };\r\n                    },\r\n                    getArea: function() {\r\n                        var vm = this._view;\r\n                        return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\r\n                    },\r\n                    tooltipPosition: function() {\r\n                        var vm = this._view;\r\n\r\n                        var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2),\r\n                            rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\r\n                        return {\r\n                            x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\r\n                            y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\r\n                        };\r\n                    },\r\n                    draw: function() {\r\n\r\n                        var ctx = this._chart.ctx,\r\n                            vm = this._view,\r\n                            sA = vm.startAngle,\r\n                            eA = vm.endAngle;\r\n\r\n                        ctx.beginPath();\r\n\r\n                        ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\r\n                        ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\r\n\r\n                        ctx.closePath();\r\n                        ctx.strokeStyle = vm.borderColor;\r\n                        ctx.lineWidth = vm.borderWidth;\r\n\r\n                        ctx.fillStyle = vm.backgroundColor;\r\n\r\n                        ctx.fill();\r\n                        ctx.lineJoin = 'bevel';\r\n\r\n                        if (vm.borderWidth) {\r\n                            ctx.stroke();\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, {}],\r\n        36: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n                var globalDefaults = Chart.defaults.global;\r\n\r\n                Chart.defaults.global.elements.line = {\r\n                    tension: 0.4,\r\n                    backgroundColor: globalDefaults.defaultColor,\r\n                    borderWidth: 3,\r\n                    borderColor: globalDefaults.defaultColor,\r\n                    borderCapStyle: 'butt',\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: 'miter',\r\n                    capBezierPoints: true,\r\n                    fill: true, // do we fill in the area between the line and its base axis\r\n                };\r\n\r\n                Chart.elements.Line = Chart.Element.extend({\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var vm = me._view;\r\n                        var ctx = me._chart.ctx;\r\n                        var spanGaps = vm.spanGaps;\r\n                        var points = me._children.slice(); // clone array\r\n                        var globalOptionLineElements = globalDefaults.elements.line;\r\n                        var lastDrawnIndex = -1;\r\n                        var index, current, previous, currentVM;\r\n\r\n                        // If we are looping, adding the first point again\r\n                        if (me._loop && points.length) {\r\n                            points.push(points[0]);\r\n                        }\r\n\r\n                        ctx.save();\r\n\r\n                        // Stroke Line Options\r\n                        ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\r\n\r\n                        // IE 9 and 10 do not support line dash\r\n                        if (ctx.setLineDash) {\r\n                            ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\r\n                        }\r\n\r\n                        ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\r\n                        ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\r\n                        ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\r\n                        ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\r\n\r\n                        // Stroke Line\r\n                        ctx.beginPath();\r\n                        lastDrawnIndex = -1;\r\n\r\n                        for (index = 0; index < points.length; ++index) {\r\n                            current = points[index];\r\n                            previous = helpers.previousItem(points, index);\r\n                            currentVM = current._view;\r\n\r\n                            // First point moves to it's starting position no matter what\r\n                            if (index === 0) {\r\n                                if (!currentVM.skip) {\r\n                                    ctx.moveTo(currentVM.x, currentVM.y);\r\n                                    lastDrawnIndex = index;\r\n                                }\r\n                            } else {\r\n                                previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\r\n\r\n                                if (!currentVM.skip) {\r\n                                    if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\r\n                                        // There was a gap and this is the first point after the gap\r\n                                        ctx.moveTo(currentVM.x, currentVM.y);\r\n                                    } else {\r\n                                        // Line to next point\r\n                                        helpers.canvas.lineTo(ctx, previous._view, current._view);\r\n                                    }\r\n                                    lastDrawnIndex = index;\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        ctx.stroke();\r\n                        ctx.restore();\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, {}],\r\n        37: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers,\r\n                    globalOpts = Chart.defaults.global,\r\n                    defaultColor = globalOpts.defaultColor;\r\n\r\n                globalOpts.elements.point = {\r\n                    radius: 3,\r\n                    pointStyle: 'circle',\r\n                    backgroundColor: defaultColor,\r\n                    borderWidth: 1,\r\n                    borderColor: defaultColor,\r\n                    // Hover\r\n                    hitRadius: 1,\r\n                    hoverRadius: 4,\r\n                    hoverBorderWidth: 1\r\n                };\r\n\r\n                function xRange(mouseX) {\r\n                    var vm = this._view;\r\n                    return vm ? (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\r\n                }\r\n\r\n                function yRange(mouseY) {\r\n                    var vm = this._view;\r\n                    return vm ? (Math.pow(mouseY - vm.y, 2) < Math.pow(vm.radius + vm.hitRadius, 2)) : false;\r\n                }\r\n\r\n                Chart.elements.Point = Chart.Element.extend({\r\n                    inRange: function(mouseX, mouseY) {\r\n                        var vm = this._view;\r\n                        return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\r\n                    },\r\n\r\n                    inLabelRange: xRange,\r\n                    inXRange: xRange,\r\n                    inYRange: yRange,\r\n\r\n                    getCenterPoint: function() {\r\n                        var vm = this._view;\r\n                        return {\r\n                            x: vm.x,\r\n                            y: vm.y\r\n                        };\r\n                    },\r\n                    getArea: function() {\r\n                        return Math.PI * Math.pow(this._view.radius, 2);\r\n                    },\r\n                    tooltipPosition: function() {\r\n                        var vm = this._view;\r\n                        return {\r\n                            x: vm.x,\r\n                            y: vm.y,\r\n                            padding: vm.radius + vm.borderWidth\r\n                        };\r\n                    },\r\n                    draw: function(chartArea) {\r\n                        var vm = this._view;\r\n                        var model = this._model;\r\n                        var ctx = this._chart.ctx;\r\n                        var pointStyle = vm.pointStyle;\r\n                        var radius = vm.radius;\r\n                        var x = vm.x;\r\n                        var y = vm.y;\r\n                        var color = Chart.helpers.color;\r\n                        var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\r\n                        var ratio = 0;\r\n\r\n                        if (vm.skip) {\r\n                            return;\r\n                        }\r\n\r\n                        ctx.strokeStyle = vm.borderColor || defaultColor;\r\n                        ctx.lineWidth = helpers.getValueOrDefault(vm.borderWidth, globalOpts.elements.point.borderWidth);\r\n                        ctx.fillStyle = vm.backgroundColor || defaultColor;\r\n\r\n                        // Cliping for Points.\r\n                        // going out from inner charArea?\r\n                        if ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\r\n                            // Point fade out\r\n                            if (model.x < chartArea.left) {\r\n                                ratio = (x - model.x) / (chartArea.left - model.x);\r\n                            } else if (chartArea.right * errMargin < model.x) {\r\n                                ratio = (model.x - x) / (model.x - chartArea.right);\r\n                            } else if (model.y < chartArea.top) {\r\n                                ratio = (y - model.y) / (chartArea.top - model.y);\r\n                            } else if (chartArea.bottom * errMargin < model.y) {\r\n                                ratio = (model.y - y) / (model.y - chartArea.bottom);\r\n                            }\r\n                            ratio = Math.round(ratio * 100) / 100;\r\n                            ctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\r\n                            ctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\r\n                        }\r\n\r\n                        Chart.canvasHelpers.drawPoint(ctx, pointStyle, radius, x, y);\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, {}],\r\n        38: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var globalOpts = Chart.defaults.global;\r\n\r\n                globalOpts.elements.rectangle = {\r\n                    backgroundColor: globalOpts.defaultColor,\r\n                    borderWidth: 0,\r\n                    borderColor: globalOpts.defaultColor,\r\n                    borderSkipped: 'bottom'\r\n                };\r\n\r\n                function isVertical(bar) {\r\n                    return bar._view.width !== undefined;\r\n                }\r\n\r\n                /**\r\n                 * Helper function to get the bounds of the bar regardless of the orientation\r\n                 * @private\r\n                 * @param bar {Chart.Element.Rectangle} the bar\r\n                 * @return {Bounds} bounds of the bar\r\n                 */\r\n                function getBarBounds(bar) {\r\n                    var vm = bar._view;\r\n                    var x1, x2, y1, y2;\r\n\r\n                    if (isVertical(bar)) {\r\n                        // vertical\r\n                        var halfWidth = vm.width / 2;\r\n                        x1 = vm.x - halfWidth;\r\n                        x2 = vm.x + halfWidth;\r\n                        y1 = Math.min(vm.y, vm.base);\r\n                        y2 = Math.max(vm.y, vm.base);\r\n                    } else {\r\n                        // horizontal bar\r\n                        var halfHeight = vm.height / 2;\r\n                        x1 = Math.min(vm.x, vm.base);\r\n                        x2 = Math.max(vm.x, vm.base);\r\n                        y1 = vm.y - halfHeight;\r\n                        y2 = vm.y + halfHeight;\r\n                    }\r\n\r\n                    return {\r\n                        left: x1,\r\n                        top: y1,\r\n                        right: x2,\r\n                        bottom: y2\r\n                    };\r\n                }\r\n\r\n                Chart.elements.Rectangle = Chart.Element.extend({\r\n                    draw: function() {\r\n                        var ctx = this._chart.ctx;\r\n                        var vm = this._view;\r\n                        var left, right, top, bottom, signX, signY, borderSkipped;\r\n                        var borderWidth = vm.borderWidth;\r\n\r\n                        if (!vm.horizontal) {\r\n                            // bar\r\n                            left = vm.x - vm.width / 2;\r\n                            right = vm.x + vm.width / 2;\r\n                            top = vm.y;\r\n                            bottom = vm.base;\r\n                            signX = 1;\r\n                            signY = bottom > top ? 1 : -1;\r\n                            borderSkipped = vm.borderSkipped || 'bottom';\r\n                        } else {\r\n                            // horizontal bar\r\n                            left = vm.base;\r\n                            right = vm.x;\r\n                            top = vm.y - vm.height / 2;\r\n                            bottom = vm.y + vm.height / 2;\r\n                            signX = right > left ? 1 : -1;\r\n                            signY = 1;\r\n                            borderSkipped = vm.borderSkipped || 'left';\r\n                        }\r\n\r\n                        // Canvas doesn't allow us to stroke inside the width so we can\r\n                        // adjust the sizes to fit if we're setting a stroke on the line\r\n                        if (borderWidth) {\r\n                            // borderWidth shold be less than bar width and bar height.\r\n                            var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n                            borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n                            var halfStroke = borderWidth / 2;\r\n                            // Adjust borderWidth when bar top position is near vm.base(zero).\r\n                            var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n                            var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n                            var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n                            var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n                            // not become a vertical line?\r\n                            if (borderLeft !== borderRight) {\r\n                                top = borderTop;\r\n                                bottom = borderBottom;\r\n                            }\r\n                            // not become a horizontal line?\r\n                            if (borderTop !== borderBottom) {\r\n                                left = borderLeft;\r\n                                right = borderRight;\r\n                            }\r\n                        }\r\n\r\n                        ctx.beginPath();\r\n                        ctx.fillStyle = vm.backgroundColor;\r\n                        ctx.strokeStyle = vm.borderColor;\r\n                        ctx.lineWidth = borderWidth;\r\n\r\n                        // Corner points, from bottom-left to bottom-right clockwise\r\n                        // | 1 2 |\r\n                        // | 0 3 |\r\n                        var corners = [\r\n                            [left, bottom],\r\n                            [left, top],\r\n                            [right, top],\r\n                            [right, bottom]\r\n                        ];\r\n\r\n                        // Find first (starting) corner with fallback to 'bottom'\r\n                        var borders = ['bottom', 'left', 'top', 'right'];\r\n                        var startCorner = borders.indexOf(borderSkipped, 0);\r\n                        if (startCorner === -1) {\r\n                            startCorner = 0;\r\n                        }\r\n\r\n                        function cornerAt(index) {\r\n                            return corners[(startCorner + index) % 4];\r\n                        }\r\n\r\n                        // Draw rectangle from 'startCorner'\r\n                        var corner = cornerAt(0);\r\n                        ctx.moveTo(corner[0], corner[1]);\r\n\r\n                        for (var i = 1; i < 4; i++) {\r\n                            corner = cornerAt(i);\r\n                            ctx.lineTo(corner[0], corner[1]);\r\n                        }\r\n\r\n                        ctx.fill();\r\n                        if (borderWidth) {\r\n                            ctx.stroke();\r\n                        }\r\n                    },\r\n                    height: function() {\r\n                        var vm = this._view;\r\n                        return vm.base - vm.y;\r\n                    },\r\n                    inRange: function(mouseX, mouseY) {\r\n                        var inRange = false;\r\n\r\n                        if (this._view) {\r\n                            var bounds = getBarBounds(this);\r\n                            inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                        }\r\n\r\n                        return inRange;\r\n                    },\r\n                    inLabelRange: function(mouseX, mouseY) {\r\n                        var me = this;\r\n                        if (!me._view) {\r\n                            return false;\r\n                        }\r\n\r\n                        var inRange = false;\r\n                        var bounds = getBarBounds(me);\r\n\r\n                        if (isVertical(me)) {\r\n                            inRange = mouseX >= bounds.left && mouseX <= bounds.right;\r\n                        } else {\r\n                            inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                        }\r\n\r\n                        return inRange;\r\n                    },\r\n                    inXRange: function(mouseX) {\r\n                        var bounds = getBarBounds(this);\r\n                        return mouseX >= bounds.left && mouseX <= bounds.right;\r\n                    },\r\n                    inYRange: function(mouseY) {\r\n                        var bounds = getBarBounds(this);\r\n                        return mouseY >= bounds.top && mouseY <= bounds.bottom;\r\n                    },\r\n                    getCenterPoint: function() {\r\n                        var vm = this._view;\r\n                        var x, y;\r\n                        if (isVertical(this)) {\r\n                            x = vm.x;\r\n                            y = (vm.y + vm.base) / 2;\r\n                        } else {\r\n                            x = (vm.x + vm.base) / 2;\r\n                            y = vm.y;\r\n                        }\r\n\r\n                        return { x: x, y: y };\r\n                    },\r\n                    getArea: function() {\r\n                        var vm = this._view;\r\n                        return vm.width * Math.abs(vm.y - vm.base);\r\n                    },\r\n                    tooltipPosition: function() {\r\n                        var vm = this._view;\r\n                        return {\r\n                            x: vm.x,\r\n                            y: vm.y\r\n                        };\r\n                    }\r\n                });\r\n\r\n            };\r\n\r\n        }, {}],\r\n        39: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            // Chart.Platform implementation for targeting a web browser\r\n            module.exports = function(Chart) {\r\n                var helpers = Chart.helpers;\r\n\r\n                // DOM event types -> Chart.js event types.\r\n                // Note: only events with different types are mapped.\r\n                // https://developer.mozilla.org/en-US/docs/Web/Events\r\n                var eventTypeMap = {\r\n                    // Touch events\r\n                    touchstart: 'mousedown',\r\n                    touchmove: 'mousemove',\r\n                    touchend: 'mouseup',\r\n\r\n                    // Pointer events\r\n                    pointerenter: 'mouseenter',\r\n                    pointerdown: 'mousedown',\r\n                    pointermove: 'mousemove',\r\n                    pointerup: 'mouseup',\r\n                    pointerleave: 'mouseout',\r\n                    pointerout: 'mouseout'\r\n                };\r\n\r\n                /**\r\n                 * The \"used\" size is the final value of a dimension property after all calculations have\r\n                 * been performed. This method uses the computed style of `element` but returns undefined\r\n                 * if the computed style is not expressed in pixels. That can happen in some cases where\r\n                 * `element` has a size relative to its parent and this last one is not yet displayed,\r\n                 * for example because of `display: none` on a parent node.\r\n                 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n                 * @returns {Number} Size in pixels or undefined if unknown.\r\n                 */\r\n                function readUsedSize(element, property) {\r\n                    var value = helpers.getStyle(element, property);\r\n                    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n                    return matches ? Number(matches[1]) : undefined;\r\n                }\r\n\r\n                /**\r\n                 * Initializes the canvas style and render size without modifying the canvas display size,\r\n                 * since responsiveness is handled by the controller.resize() method. The config is used\r\n                 * to determine the aspect ratio to apply in case no explicit height has been specified.\r\n                 */\r\n                function initCanvas(canvas, config) {\r\n                    var style = canvas.style;\r\n\r\n                    // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\r\n                    // returns null or '' if no explicit value has been set to the canvas attribute.\r\n                    var renderHeight = canvas.getAttribute('height');\r\n                    var renderWidth = canvas.getAttribute('width');\r\n\r\n                    // Chart.js modifies some canvas values that we want to restore on destroy\r\n                    canvas._chartjs = {\r\n                        initial: {\r\n                            height: renderHeight,\r\n                            width: renderWidth,\r\n                            style: {\r\n                                display: style.display,\r\n                                height: style.height,\r\n                                width: style.width\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    // Force canvas to display as block to avoid extra space caused by inline\r\n                    // elements, which would interfere with the responsive resize process.\r\n                    // https://github.com/chartjs/Chart.js/issues/2538\r\n                    style.display = style.display || 'block';\r\n\r\n                    if (renderWidth === null || renderWidth === '') {\r\n                        var displayWidth = readUsedSize(canvas, 'width');\r\n                        if (displayWidth !== undefined) {\r\n                            canvas.width = displayWidth;\r\n                        }\r\n                    }\r\n\r\n                    if (renderHeight === null || renderHeight === '') {\r\n                        if (canvas.style.height === '') {\r\n                            // If no explicit render height and style height, let's apply the aspect ratio,\r\n                            // which one can be specified by the user but also by charts as default option\r\n                            // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\r\n                            canvas.height = canvas.width / (config.options.aspectRatio || 2);\r\n                        } else {\r\n                            var displayHeight = readUsedSize(canvas, 'height');\r\n                            if (displayWidth !== undefined) {\r\n                                canvas.height = displayHeight;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return canvas;\r\n                }\r\n\r\n                function createEvent(type, chart, x, y, nativeEvent) {\r\n                    return {\r\n                        type: type,\r\n                        chart: chart,\r\n                        native: nativeEvent || null,\r\n                        x: x !== undefined ? x : null,\r\n                        y: y !== undefined ? y : null,\r\n                    };\r\n                }\r\n\r\n                function fromNativeEvent(event, chart) {\r\n                    var type = eventTypeMap[event.type] || event.type;\r\n                    var pos = helpers.getRelativePosition(event, chart);\r\n                    return createEvent(type, chart, pos.x, pos.y, event);\r\n                }\r\n\r\n                function createResizer(handler) {\r\n                    var iframe = document.createElement('iframe');\r\n                    iframe.className = 'chartjs-hidden-iframe';\r\n                    iframe.style.cssText =\r\n                        'display:block;' +\r\n                        'overflow:hidden;' +\r\n                        'border:0;' +\r\n                        'margin:0;' +\r\n                        'top:0;' +\r\n                        'left:0;' +\r\n                        'bottom:0;' +\r\n                        'right:0;' +\r\n                        'height:100%;' +\r\n                        'width:100%;' +\r\n                        'position:absolute;' +\r\n                        'pointer-events:none;' +\r\n                        'z-index:-1;';\r\n\r\n                    // Prevent the iframe to gain focus on tab.\r\n                    // https://github.com/chartjs/Chart.js/issues/3090\r\n                    iframe.tabIndex = -1;\r\n\r\n                    // If the iframe is re-attached to the DOM, the resize listener is removed because the\r\n                    // content is reloaded, so make sure to install the handler after the iframe is loaded.\r\n                    // https://github.com/chartjs/Chart.js/issues/3521\r\n                    helpers.addEvent(iframe, 'load', function() {\r\n                        helpers.addEvent(iframe.contentWindow || iframe, 'resize', handler);\r\n\r\n                        // The iframe size might have changed while loading, which can also\r\n                        // happen if the size has been changed while detached from the DOM.\r\n                        handler();\r\n                    });\r\n\r\n                    return iframe;\r\n                }\r\n\r\n                function addResizeListener(node, listener, chart) {\r\n                    var stub = node._chartjs = {\r\n                        ticking: false\r\n                    };\r\n\r\n                    // Throttle the callback notification until the next animation frame.\r\n                    var notify = function() {\r\n                        if (!stub.ticking) {\r\n                            stub.ticking = true;\r\n                            helpers.requestAnimFrame.call(window, function() {\r\n                                if (stub.resizer) {\r\n                                    stub.ticking = false;\r\n                                    return listener(createEvent('resize', chart));\r\n                                }\r\n                            });\r\n                        }\r\n                    };\r\n\r\n                    // Let's keep track of this added iframe and thus avoid DOM query when removing it.\r\n                    stub.resizer = createResizer(notify);\r\n\r\n                    node.insertBefore(stub.resizer, node.firstChild);\r\n                }\r\n\r\n                function removeResizeListener(node) {\r\n                    if (!node || !node._chartjs) {\r\n                        return;\r\n                    }\r\n\r\n                    var resizer = node._chartjs.resizer;\r\n                    if (resizer) {\r\n                        resizer.parentNode.removeChild(resizer);\r\n                        node._chartjs.resizer = null;\r\n                    }\r\n\r\n                    delete node._chartjs;\r\n                }\r\n\r\n                return {\r\n                    acquireContext: function(item, config) {\r\n                        if (typeof item === 'string') {\r\n                            item = document.getElementById(item);\r\n                        } else if (item.length) {\r\n                            // Support for array based queries (such as jQuery)\r\n                            item = item[0];\r\n                        }\r\n\r\n                        if (item && item.canvas) {\r\n                            // Support for any object associated to a canvas (including a context2d)\r\n                            item = item.canvas;\r\n                        }\r\n\r\n                        // To prevent canvas fingerprinting, some add-ons undefine the getContext\r\n                        // method, for example: https://github.com/kkapsner/CanvasBlocker\r\n                        // https://github.com/chartjs/Chart.js/issues/2807\r\n                        var context = item && item.getContext && item.getContext('2d');\r\n\r\n                        // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\r\n                        // inside an iframe or when running in a protected environment. We could guess the\r\n                        // types from their toString() value but let's keep things flexible and assume it's\r\n                        // a sufficient condition if the item has a context2D which has item as `canvas`.\r\n                        // https://github.com/chartjs/Chart.js/issues/3887\r\n                        // https://github.com/chartjs/Chart.js/issues/4102\r\n                        // https://github.com/chartjs/Chart.js/issues/4152\r\n                        if (context && context.canvas === item) {\r\n                            initCanvas(item, config);\r\n                            return context;\r\n                        }\r\n\r\n                        return null;\r\n                    },\r\n\r\n                    releaseContext: function(context) {\r\n                        var canvas = context.canvas;\r\n                        if (!canvas._chartjs) {\r\n                            return;\r\n                        }\r\n\r\n                        var initial = canvas._chartjs.initial;\r\n                        ['height', 'width'].forEach(function(prop) {\r\n                            var value = initial[prop];\r\n                            if (value === undefined || value === null) {\r\n                                canvas.removeAttribute(prop);\r\n                            } else {\r\n                                canvas.setAttribute(prop, value);\r\n                            }\r\n                        });\r\n\r\n                        helpers.each(initial.style || {}, function(value, key) {\r\n                            canvas.style[key] = value;\r\n                        });\r\n\r\n                        // The canvas render size might have been changed (and thus the state stack discarded),\r\n                        // we can't use save() and restore() to restore the initial state. So make sure that at\r\n                        // least the canvas context is reset to the default state by setting the canvas width.\r\n                        // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\r\n                        canvas.width = canvas.width;\r\n\r\n                        delete canvas._chartjs;\r\n                    },\r\n\r\n                    addEventListener: function(chart, type, listener) {\r\n                        var canvas = chart.canvas;\r\n                        if (type === 'resize') {\r\n                            // Note: the resize event is not supported on all browsers.\r\n                            addResizeListener(canvas.parentNode, listener, chart);\r\n                            return;\r\n                        }\r\n\r\n                        var stub = listener._chartjs || (listener._chartjs = {});\r\n                        var proxies = stub.proxies || (stub.proxies = {});\r\n                        var proxy = proxies[chart.id + '_' + type] = function(event) {\r\n                            listener(fromNativeEvent(event, chart));\r\n                        };\r\n\r\n                        helpers.addEvent(canvas, type, proxy);\r\n                    },\r\n\r\n                    removeEventListener: function(chart, type, listener) {\r\n                        var canvas = chart.canvas;\r\n                        if (type === 'resize') {\r\n                            // Note: the resize event is not supported on all browsers.\r\n                            removeResizeListener(canvas.parentNode, listener);\r\n                            return;\r\n                        }\r\n\r\n                        var stub = listener._chartjs || {};\r\n                        var proxies = stub.proxies || {};\r\n                        var proxy = proxies[chart.id + '_' + type];\r\n                        if (!proxy) {\r\n                            return;\r\n                        }\r\n\r\n                        helpers.removeEvent(canvas, type, proxy);\r\n                    }\r\n                };\r\n            };\r\n\r\n        }, {}],\r\n        40: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            // By default, select the browser (DOM) platform.\r\n            // @TODO Make possible to select another platform at build time.\r\n            var implementation = require(39);\r\n\r\n            module.exports = function(Chart) {\r\n                /**\r\n                 * @namespace Chart.platform\r\n                 * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\r\n                 * @since 2.4.0\r\n                 */\r\n                Chart.platform = {\r\n                    /**\r\n                     * Called at chart construction time, returns a context2d instance implementing\r\n                     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\r\n                     * @param {*} item - The native item from which to acquire context (platform specific)\r\n                     * @param {Object} options - The chart options\r\n                     * @returns {CanvasRenderingContext2D} context2d instance\r\n                     */\r\n                    acquireContext: function() {},\r\n\r\n                    /**\r\n                     * Called at chart destruction time, releases any resources associated to the context\r\n                     * previously returned by the acquireContext() method.\r\n                     * @param {CanvasRenderingContext2D} context - The context2d instance\r\n                     * @returns {Boolean} true if the method succeeded, else false\r\n                     */\r\n                    releaseContext: function() {},\r\n\r\n                    /**\r\n                     * Registers the specified listener on the given chart.\r\n                     * @param {Chart} chart - Chart from which to listen for event\r\n                     * @param {String} type - The ({@link IEvent}) type to listen for\r\n                     * @param {Function} listener - Receives a notification (an object that implements\r\n                     * the {@link IEvent} interface) when an event of the specified type occurs.\r\n                     */\r\n                    addEventListener: function() {},\r\n\r\n                    /**\r\n                     * Removes the specified listener previously registered with addEventListener.\r\n                     * @param {Chart} chart -Chart from which to remove the listener\r\n                     * @param {String} type - The ({@link IEvent}) type to remove\r\n                     * @param {Function} listener - The listener function to remove from the event target.\r\n                     */\r\n                    removeEventListener: function() {}\r\n                };\r\n\r\n                /**\r\n                 * @interface IPlatform\r\n                 * Allows abstracting platform dependencies away from the chart\r\n                 * @borrows Chart.platform.acquireContext as acquireContext\r\n                 * @borrows Chart.platform.releaseContext as releaseContext\r\n                 * @borrows Chart.platform.addEventListener as addEventListener\r\n                 * @borrows Chart.platform.removeEventListener as removeEventListener\r\n                 */\r\n\r\n                /**\r\n                 * @interface IEvent\r\n                 * @prop {String} type - The event type name, possible values are:\r\n                 * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\r\n                 * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\r\n                 * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\r\n                 * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\r\n                 * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\r\n                 */\r\n\r\n                Chart.helpers.extend(Chart.platform, implementation(Chart));\r\n            };\r\n\r\n        }, { \"39\": 39 }],\r\n        41: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n                /**\r\n                 * Plugin based on discussion from the following Chart.js issues:\r\n                 * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\r\n                 * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\r\n                 */\r\n                Chart.defaults.global.plugins.filler = {\r\n                    propagate: true\r\n                };\r\n\r\n                var defaults = Chart.defaults;\r\n                var helpers = Chart.helpers;\r\n                var mappers = {\r\n                    dataset: function(source) {\r\n                        var index = source.fill;\r\n                        var chart = source.chart;\r\n                        var meta = chart.getDatasetMeta(index);\r\n                        var visible = meta && chart.isDatasetVisible(index);\r\n                        var points = (visible && meta.dataset._children) || [];\r\n\r\n                        return !points.length ? null : function(point, i) {\r\n                            return points[i]._view || null;\r\n                        };\r\n                    },\r\n\r\n                    boundary: function(source) {\r\n                        var boundary = source.boundary;\r\n                        var x = boundary ? boundary.x : null;\r\n                        var y = boundary ? boundary.y : null;\r\n\r\n                        return function(point) {\r\n                            return {\r\n                                x: x === null ? point.x : x,\r\n                                y: y === null ? point.y : y,\r\n                            };\r\n                        };\r\n                    }\r\n                };\r\n\r\n                // @todo if (fill[0] === '#')\r\n                function decodeFill(el, index, count) {\r\n                    var model = el._model || {};\r\n                    var fill = model.fill;\r\n                    var target;\r\n\r\n                    if (fill === undefined) {\r\n                        fill = !!model.backgroundColor;\r\n                    }\r\n\r\n                    if (fill === false || fill === null) {\r\n                        return false;\r\n                    }\r\n\r\n                    if (fill === true) {\r\n                        return 'origin';\r\n                    }\r\n\r\n                    target = parseFloat(fill, 10);\r\n                    if (isFinite(target) && Math.floor(target) === target) {\r\n                        if (fill[0] === '-' || fill[0] === '+') {\r\n                            target = index + target;\r\n                        }\r\n\r\n                        if (target === index || target < 0 || target >= count) {\r\n                            return false;\r\n                        }\r\n\r\n                        return target;\r\n                    }\r\n\r\n                    switch (fill) {\r\n                        // compatibility\r\n                        case 'bottom':\r\n                            return 'start';\r\n                        case 'top':\r\n                            return 'end';\r\n                        case 'zero':\r\n                            return 'origin';\r\n                            // supported boundaries\r\n                        case 'origin':\r\n                        case 'start':\r\n                        case 'end':\r\n                            return fill;\r\n                            // invalid fill values\r\n                        default:\r\n                            return false;\r\n                    }\r\n                }\r\n\r\n                function computeBoundary(source) {\r\n                    var model = source.el._model || {};\r\n                    var scale = source.el._scale || {};\r\n                    var fill = source.fill;\r\n                    var target = null;\r\n                    var horizontal;\r\n\r\n                    if (isFinite(fill)) {\r\n                        return null;\r\n                    }\r\n\r\n                    // Backward compatibility: until v3, we still need to support boundary values set on\r\n                    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\r\n                    // controllers might still use it (e.g. the Smith chart).\r\n\r\n                    if (fill === 'start') {\r\n                        target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\r\n                    } else if (fill === 'end') {\r\n                        target = model.scaleTop === undefined ? scale.top : model.scaleTop;\r\n                    } else if (model.scaleZero !== undefined) {\r\n                        target = model.scaleZero;\r\n                    } else if (scale.getBasePosition) {\r\n                        target = scale.getBasePosition();\r\n                    } else if (scale.getBasePixel) {\r\n                        target = scale.getBasePixel();\r\n                    }\r\n\r\n                    if (target !== undefined && target !== null) {\r\n                        if (target.x !== undefined && target.y !== undefined) {\r\n                            return target;\r\n                        }\r\n\r\n                        if (typeof target === 'number' && isFinite(target)) {\r\n                            horizontal = scale.isHorizontal();\r\n                            return {\r\n                                x: horizontal ? target : null,\r\n                                y: horizontal ? null : target\r\n                            };\r\n                        }\r\n                    }\r\n\r\n                    return null;\r\n                }\r\n\r\n                function resolveTarget(sources, index, propagate) {\r\n                    var source = sources[index];\r\n                    var fill = source.fill;\r\n                    var visited = [index];\r\n                    var target;\r\n\r\n                    if (!propagate) {\r\n                        return fill;\r\n                    }\r\n\r\n                    while (fill !== false && visited.indexOf(fill) === -1) {\r\n                        if (!isFinite(fill)) {\r\n                            return fill;\r\n                        }\r\n\r\n                        target = sources[fill];\r\n                        if (!target) {\r\n                            return false;\r\n                        }\r\n\r\n                        if (target.visible) {\r\n                            return fill;\r\n                        }\r\n\r\n                        visited.push(fill);\r\n                        fill = target.fill;\r\n                    }\r\n\r\n                    return false;\r\n                }\r\n\r\n                function createMapper(source) {\r\n                    var fill = source.fill;\r\n                    var type = 'dataset';\r\n\r\n                    if (fill === false) {\r\n                        return null;\r\n                    }\r\n\r\n                    if (!isFinite(fill)) {\r\n                        type = 'boundary';\r\n                    }\r\n\r\n                    return mappers[type](source);\r\n                }\r\n\r\n                function isDrawable(point) {\r\n                    return point && !point.skip;\r\n                }\r\n\r\n                function drawArea(ctx, curve0, curve1, len0, len1) {\r\n                    var i;\r\n\r\n                    if (!len0 || !len1) {\r\n                        return;\r\n                    }\r\n\r\n                    // building first area curve (normal)\r\n                    ctx.moveTo(curve0[0].x, curve0[0].y);\r\n                    for (i = 1; i < len0; ++i) {\r\n                        helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\r\n                    }\r\n\r\n                    // joining the two area curves\r\n                    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\r\n\r\n                    // building opposite area curve (reverse)\r\n                    for (i = len1 - 1; i > 0; --i) {\r\n                        helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\r\n                    }\r\n                }\r\n\r\n                function doFill(ctx, points, mapper, view, color, loop) {\r\n                    var count = points.length;\r\n                    var span = view.spanGaps;\r\n                    var curve0 = [];\r\n                    var curve1 = [];\r\n                    var len0 = 0;\r\n                    var len1 = 0;\r\n                    var i, ilen, index, p0, p1, d0, d1;\r\n\r\n                    ctx.beginPath();\r\n\r\n                    for (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\r\n                        index = i % count;\r\n                        p0 = points[index]._view;\r\n                        p1 = mapper(p0, index, view);\r\n                        d0 = isDrawable(p0);\r\n                        d1 = isDrawable(p1);\r\n\r\n                        if (d0 && d1) {\r\n                            len0 = curve0.push(p0);\r\n                            len1 = curve1.push(p1);\r\n                        } else if (len0 && len1) {\r\n                            if (!span) {\r\n                                drawArea(ctx, curve0, curve1, len0, len1);\r\n                                len0 = len1 = 0;\r\n                                curve0 = [];\r\n                                curve1 = [];\r\n                            } else {\r\n                                if (d0) {\r\n                                    curve0.push(p0);\r\n                                }\r\n                                if (d1) {\r\n                                    curve1.push(p1);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    drawArea(ctx, curve0, curve1, len0, len1);\r\n\r\n                    ctx.closePath();\r\n                    ctx.fillStyle = color;\r\n                    ctx.fill();\r\n                }\r\n\r\n                return {\r\n                    id: 'filler',\r\n\r\n                    afterDatasetsUpdate: function(chart, options) {\r\n                        var count = (chart.data.datasets || []).length;\r\n                        var propagate = options.propagate;\r\n                        var sources = [];\r\n                        var meta, i, el, source;\r\n\r\n                        for (i = 0; i < count; ++i) {\r\n                            meta = chart.getDatasetMeta(i);\r\n                            el = meta.dataset;\r\n                            source = null;\r\n\r\n                            if (el && el._model && el instanceof Chart.elements.Line) {\r\n                                source = {\r\n                                    visible: chart.isDatasetVisible(i),\r\n                                    fill: decodeFill(el, i, count),\r\n                                    chart: chart,\r\n                                    el: el\r\n                                };\r\n                            }\r\n\r\n                            meta.$filler = source;\r\n                            sources.push(source);\r\n                        }\r\n\r\n                        for (i = 0; i < count; ++i) {\r\n                            source = sources[i];\r\n                            if (!source) {\r\n                                continue;\r\n                            }\r\n\r\n                            source.fill = resolveTarget(sources, i, propagate);\r\n                            source.boundary = computeBoundary(source);\r\n                            source.mapper = createMapper(source);\r\n                        }\r\n                    },\r\n\r\n                    beforeDatasetDraw: function(chart, args) {\r\n                        var meta = args.meta.$filler;\r\n                        if (!meta) {\r\n                            return;\r\n                        }\r\n\r\n                        var el = meta.el;\r\n                        var view = el._view;\r\n                        var points = el._children || [];\r\n                        var mapper = meta.mapper;\r\n                        var color = view.backgroundColor || defaults.global.defaultColor;\r\n\r\n                        if (mapper && color && points.length) {\r\n                            doFill(chart.ctx, points, mapper, view, color, el._loop);\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n\r\n        }, {}],\r\n        42: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n                var layout = Chart.layoutService;\r\n                var noop = helpers.noop;\r\n\r\n                Chart.defaults.global.legend = {\r\n                    display: true,\r\n                    position: 'top',\r\n                    fullWidth: true,\r\n                    reverse: false,\r\n                    weight: 1000,\r\n\r\n                    // a callback that will handle\r\n                    onClick: function(e, legendItem) {\r\n                        var index = legendItem.datasetIndex;\r\n                        var ci = this.chart;\r\n                        var meta = ci.getDatasetMeta(index);\r\n\r\n                        // See controller.isDatasetVisible comment\r\n                        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\r\n\r\n                        // We hid a dataset ... rerender the chart\r\n                        ci.update();\r\n                    },\r\n\r\n                    onHover: null,\r\n\r\n                    labels: {\r\n                        boxWidth: 40,\r\n                        padding: 10,\r\n                        // Generates labels shown in the legend\r\n                        // Valid properties to return:\r\n                        // text : text to display\r\n                        // fillStyle : fill of coloured box\r\n                        // strokeStyle: stroke of coloured box\r\n                        // hidden : if this legend item refers to a hidden item\r\n                        // lineCap : cap style for line\r\n                        // lineDash\r\n                        // lineDashOffset :\r\n                        // lineJoin :\r\n                        // lineWidth :\r\n                        generateLabels: function(chart) {\r\n                            var data = chart.data;\r\n                            return helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\r\n                                return {\r\n                                    text: dataset.label,\r\n                                    fillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\r\n                                    hidden: !chart.isDatasetVisible(i),\r\n                                    lineCap: dataset.borderCapStyle,\r\n                                    lineDash: dataset.borderDash,\r\n                                    lineDashOffset: dataset.borderDashOffset,\r\n                                    lineJoin: dataset.borderJoinStyle,\r\n                                    lineWidth: dataset.borderWidth,\r\n                                    strokeStyle: dataset.borderColor,\r\n                                    pointStyle: dataset.pointStyle,\r\n\r\n                                    // Below is extra data used for toggling the datasets\r\n                                    datasetIndex: i\r\n                                };\r\n                            }, this) : [];\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Helper function to get the box width based on the usePointStyle option\r\n                 * @param labelopts {Object} the label options on the legend\r\n                 * @param fontSize {Number} the label font size\r\n                 * @return {Number} width of the color box area\r\n                 */\r\n                function getBoxWidth(labelOpts, fontSize) {\r\n                    return labelOpts.usePointStyle ?\r\n                        fontSize * Math.SQRT2 :\r\n                        labelOpts.boxWidth;\r\n                }\r\n\r\n                Chart.Legend = Chart.Element.extend({\r\n\r\n                    initialize: function(config) {\r\n                        helpers.extend(this, config);\r\n\r\n                        // Contains hit boxes for each dataset (in dataset order)\r\n                        this.legendHitBoxes = [];\r\n\r\n                        // Are we in doughnut mode which has a different data type\r\n                        this.doughnutMode = false;\r\n                    },\r\n\r\n                    // These methods are ordered by lifecycle. Utilities then follow.\r\n                    // Any function defined here is inherited by all legend types.\r\n                    // Any function can be extended by the legend type\r\n\r\n                    beforeUpdate: noop,\r\n                    update: function(maxWidth, maxHeight, margins) {\r\n                        var me = this;\r\n\r\n                        // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                        me.beforeUpdate();\r\n\r\n                        // Absorb the master measurements\r\n                        me.maxWidth = maxWidth;\r\n                        me.maxHeight = maxHeight;\r\n                        me.margins = margins;\r\n\r\n                        // Dimensions\r\n                        me.beforeSetDimensions();\r\n                        me.setDimensions();\r\n                        me.afterSetDimensions();\r\n                        // Labels\r\n                        me.beforeBuildLabels();\r\n                        me.buildLabels();\r\n                        me.afterBuildLabels();\r\n\r\n                        // Fit\r\n                        me.beforeFit();\r\n                        me.fit();\r\n                        me.afterFit();\r\n                        //\r\n                        me.afterUpdate();\r\n\r\n                        return me.minSize;\r\n                    },\r\n                    afterUpdate: noop,\r\n\r\n                    //\r\n\r\n                    beforeSetDimensions: noop,\r\n                    setDimensions: function() {\r\n                        var me = this;\r\n                        // Set the unconstrained dimension before label rotation\r\n                        if (me.isHorizontal()) {\r\n                            // Reset position before calculating rotation\r\n                            me.width = me.maxWidth;\r\n                            me.left = 0;\r\n                            me.right = me.width;\r\n                        } else {\r\n                            me.height = me.maxHeight;\r\n\r\n                            // Reset position before calculating rotation\r\n                            me.top = 0;\r\n                            me.bottom = me.height;\r\n                        }\r\n\r\n                        // Reset padding\r\n                        me.paddingLeft = 0;\r\n                        me.paddingTop = 0;\r\n                        me.paddingRight = 0;\r\n                        me.paddingBottom = 0;\r\n\r\n                        // Reset minSize\r\n                        me.minSize = {\r\n                            width: 0,\r\n                            height: 0\r\n                        };\r\n                    },\r\n                    afterSetDimensions: noop,\r\n\r\n                    //\r\n\r\n                    beforeBuildLabels: noop,\r\n                    buildLabels: function() {\r\n                        var me = this;\r\n                        var labelOpts = me.options.labels;\r\n                        var legendItems = labelOpts.generateLabels.call(me, me.chart);\r\n\r\n                        if (labelOpts.filter) {\r\n                            legendItems = legendItems.filter(function(item) {\r\n                                return labelOpts.filter(item, me.chart.data);\r\n                            });\r\n                        }\r\n\r\n                        if (me.options.reverse) {\r\n                            legendItems.reverse();\r\n                        }\r\n\r\n                        me.legendItems = legendItems;\r\n                    },\r\n                    afterBuildLabels: noop,\r\n\r\n                    //\r\n\r\n                    beforeFit: noop,\r\n                    fit: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var labelOpts = opts.labels;\r\n                        var display = opts.display;\r\n\r\n                        var ctx = me.ctx;\r\n\r\n                        var globalDefault = Chart.defaults.global,\r\n                            itemOrDefault = helpers.getValueOrDefault,\r\n                            fontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n                            fontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n                            fontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n                            labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n                        // Reset hit boxes\r\n                        var hitboxes = me.legendHitBoxes = [];\r\n\r\n                        var minSize = me.minSize;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        if (isHorizontal) {\r\n                            minSize.width = me.maxWidth; // fill all the width\r\n                            minSize.height = display ? 10 : 0;\r\n                        } else {\r\n                            minSize.width = display ? 10 : 0;\r\n                            minSize.height = me.maxHeight; // fill all the height\r\n                        }\r\n\r\n                        // Increase sizes here\r\n                        if (display) {\r\n                            ctx.font = labelFont;\r\n\r\n                            if (isHorizontal) {\r\n                                // Labels\r\n\r\n                                // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\r\n                                var lineWidths = me.lineWidths = [0];\r\n                                var totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\r\n\r\n                                ctx.textAlign = 'left';\r\n                                ctx.textBaseline = 'top';\r\n\r\n                                helpers.each(me.legendItems, function(legendItem, i) {\r\n                                    var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                    var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                    if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\r\n                                        totalHeight += fontSize + (labelOpts.padding);\r\n                                        lineWidths[lineWidths.length] = me.left;\r\n                                    }\r\n\r\n                                    // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                    hitboxes[i] = {\r\n                                        left: 0,\r\n                                        top: 0,\r\n                                        width: width,\r\n                                        height: fontSize\r\n                                    };\r\n\r\n                                    lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\r\n                                });\r\n\r\n                                minSize.height += totalHeight;\r\n\r\n                            } else {\r\n                                var vPadding = labelOpts.padding;\r\n                                var columnWidths = me.columnWidths = [];\r\n                                var totalWidth = labelOpts.padding;\r\n                                var currentColWidth = 0;\r\n                                var currentColHeight = 0;\r\n                                var itemHeight = fontSize + vPadding;\r\n\r\n                                helpers.each(me.legendItems, function(legendItem, i) {\r\n                                    var boxWidth = getBoxWidth(labelOpts, fontSize);\r\n                                    var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\r\n\r\n                                    // If too tall, go to new column\r\n                                    if (currentColHeight + itemHeight > minSize.height) {\r\n                                        totalWidth += currentColWidth + labelOpts.padding;\r\n                                        columnWidths.push(currentColWidth); // previous column width\r\n\r\n                                        currentColWidth = 0;\r\n                                        currentColHeight = 0;\r\n                                    }\r\n\r\n                                    // Get max width\r\n                                    currentColWidth = Math.max(currentColWidth, itemWidth);\r\n                                    currentColHeight += itemHeight;\r\n\r\n                                    // Store the hitbox width and height here. Final position will be updated in `draw`\r\n                                    hitboxes[i] = {\r\n                                        left: 0,\r\n                                        top: 0,\r\n                                        width: itemWidth,\r\n                                        height: fontSize\r\n                                    };\r\n                                });\r\n\r\n                                totalWidth += currentColWidth;\r\n                                columnWidths.push(currentColWidth);\r\n                                minSize.width += totalWidth;\r\n                            }\r\n                        }\r\n\r\n                        me.width = minSize.width;\r\n                        me.height = minSize.height;\r\n                    },\r\n                    afterFit: noop,\r\n\r\n                    // Shared Methods\r\n                    isHorizontal: function() {\r\n                        return this.options.position === 'top' || this.options.position === 'bottom';\r\n                    },\r\n\r\n                    // Actually draw the legend on the canvas\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var labelOpts = opts.labels;\r\n                        var globalDefault = Chart.defaults.global,\r\n                            lineDefault = globalDefault.elements.line,\r\n                            legendWidth = me.width,\r\n                            lineWidths = me.lineWidths;\r\n\r\n                        if (opts.display) {\r\n                            var ctx = me.ctx,\r\n                                cursor,\r\n                                itemOrDefault = helpers.getValueOrDefault,\r\n                                fontColor = itemOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor),\r\n                                fontSize = itemOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize),\r\n                                fontStyle = itemOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle),\r\n                                fontFamily = itemOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily),\r\n                                labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n                            // Canvas setup\r\n                            ctx.textAlign = 'left';\r\n                            ctx.textBaseline = 'top';\r\n                            ctx.lineWidth = 0.5;\r\n                            ctx.strokeStyle = fontColor; // for strikethrough effect\r\n                            ctx.fillStyle = fontColor; // render in correct colour\r\n                            ctx.font = labelFont;\r\n\r\n                            var boxWidth = getBoxWidth(labelOpts, fontSize),\r\n                                hitboxes = me.legendHitBoxes;\r\n\r\n                            // current position\r\n                            var drawLegendBox = function(x, y, legendItem) {\r\n                                if (isNaN(boxWidth) || boxWidth <= 0) {\r\n                                    return;\r\n                                }\r\n\r\n                                // Set the ctx for the box\r\n                                ctx.save();\r\n\r\n                                ctx.fillStyle = itemOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\r\n                                ctx.lineCap = itemOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\r\n                                ctx.lineDashOffset = itemOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\r\n                                ctx.lineJoin = itemOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\r\n                                ctx.lineWidth = itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\r\n                                ctx.strokeStyle = itemOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\r\n                                var isLineWidthZero = (itemOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\r\n\r\n                                if (ctx.setLineDash) {\r\n                                    // IE 9 and 10 do not support line dash\r\n                                    ctx.setLineDash(itemOrDefault(legendItem.lineDash, lineDefault.borderDash));\r\n                                }\r\n\r\n                                if (opts.labels && opts.labels.usePointStyle) {\r\n                                    // Recalculate x and y for drawPoint() because its expecting\r\n                                    // x and y to be center of figure (instead of top left)\r\n                                    var radius = fontSize * Math.SQRT2 / 2;\r\n                                    var offSet = radius / Math.SQRT2;\r\n                                    var centerX = x + offSet;\r\n                                    var centerY = y + offSet;\r\n\r\n                                    // Draw pointStyle as legend symbol\r\n                                    Chart.canvasHelpers.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\r\n                                } else {\r\n                                    // Draw box as legend symbol\r\n                                    if (!isLineWidthZero) {\r\n                                        ctx.strokeRect(x, y, boxWidth, fontSize);\r\n                                    }\r\n                                    ctx.fillRect(x, y, boxWidth, fontSize);\r\n                                }\r\n\r\n                                ctx.restore();\r\n                            };\r\n                            var fillText = function(x, y, legendItem, textWidth) {\r\n                                ctx.fillText(legendItem.text, boxWidth + (fontSize / 2) + x, y);\r\n\r\n                                if (legendItem.hidden) {\r\n                                    // Strikethrough the text if hidden\r\n                                    ctx.beginPath();\r\n                                    ctx.lineWidth = 2;\r\n                                    ctx.moveTo(boxWidth + (fontSize / 2) + x, y + (fontSize / 2));\r\n                                    ctx.lineTo(boxWidth + (fontSize / 2) + x + textWidth, y + (fontSize / 2));\r\n                                    ctx.stroke();\r\n                                }\r\n                            };\r\n\r\n                            // Horizontal\r\n                            var isHorizontal = me.isHorizontal();\r\n                            if (isHorizontal) {\r\n                                cursor = {\r\n                                    x: me.left + ((legendWidth - lineWidths[0]) / 2),\r\n                                    y: me.top + labelOpts.padding,\r\n                                    line: 0\r\n                                };\r\n                            } else {\r\n                                cursor = {\r\n                                    x: me.left + labelOpts.padding,\r\n                                    y: me.top + labelOpts.padding,\r\n                                    line: 0\r\n                                };\r\n                            }\r\n\r\n                            var itemHeight = fontSize + labelOpts.padding;\r\n                            helpers.each(me.legendItems, function(legendItem, i) {\r\n                                var textWidth = ctx.measureText(legendItem.text).width,\r\n                                    width = boxWidth + (fontSize / 2) + textWidth,\r\n                                    x = cursor.x,\r\n                                    y = cursor.y;\r\n\r\n                                if (isHorizontal) {\r\n                                    if (x + width >= legendWidth) {\r\n                                        y = cursor.y += itemHeight;\r\n                                        cursor.line++;\r\n                                        x = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\r\n                                    }\r\n                                } else if (y + itemHeight > me.bottom) {\r\n                                    x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\r\n                                    y = cursor.y = me.top + labelOpts.padding;\r\n                                    cursor.line++;\r\n                                }\r\n\r\n                                drawLegendBox(x, y, legendItem);\r\n\r\n                                hitboxes[i].left = x;\r\n                                hitboxes[i].top = y;\r\n\r\n                                // Fill the actual label\r\n                                fillText(x, y, legendItem, textWidth);\r\n\r\n                                if (isHorizontal) {\r\n                                    cursor.x += width + (labelOpts.padding);\r\n                                } else {\r\n                                    cursor.y += itemHeight;\r\n                                }\r\n\r\n                            });\r\n                        }\r\n                    },\r\n\r\n                    /**\r\n                     * Handle an event\r\n                     * @private\r\n                     * @param {IEvent} event - The event to handle\r\n                     * @return {Boolean} true if a change occured\r\n                     */\r\n                    handleEvent: function(e) {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var type = e.type === 'mouseup' ? 'click' : e.type;\r\n                        var changed = false;\r\n\r\n                        if (type === 'mousemove') {\r\n                            if (!opts.onHover) {\r\n                                return;\r\n                            }\r\n                        } else if (type === 'click') {\r\n                            if (!opts.onClick) {\r\n                                return;\r\n                            }\r\n                        } else {\r\n                            return;\r\n                        }\r\n\r\n                        // Chart event already has relative position in it\r\n                        var x = e.x,\r\n                            y = e.y;\r\n\r\n                        if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\r\n                            // See if we are touching one of the dataset boxes\r\n                            var lh = me.legendHitBoxes;\r\n                            for (var i = 0; i < lh.length; ++i) {\r\n                                var hitBox = lh[i];\r\n\r\n                                if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\r\n                                    // Touching an element\r\n                                    if (type === 'click') {\r\n                                        // use e.native for backwards compatibility\r\n                                        opts.onClick.call(me, e.native, me.legendItems[i]);\r\n                                        changed = true;\r\n                                        break;\r\n                                    } else if (type === 'mousemove') {\r\n                                        // use e.native for backwards compatibility\r\n                                        opts.onHover.call(me, e.native, me.legendItems[i]);\r\n                                        changed = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        return changed;\r\n                    }\r\n                });\r\n\r\n                function createNewLegendAndAttach(chart, legendOpts) {\r\n                    var legend = new Chart.Legend({\r\n                        ctx: chart.ctx,\r\n                        options: legendOpts,\r\n                        chart: chart\r\n                    });\r\n\r\n                    layout.configure(chart, legend, legendOpts);\r\n                    layout.addBox(chart, legend);\r\n                    chart.legend = legend;\r\n                }\r\n\r\n                return {\r\n                    id: 'legend',\r\n\r\n                    beforeInit: function(chart) {\r\n                        var legendOpts = chart.options.legend;\r\n\r\n                        if (legendOpts) {\r\n                            createNewLegendAndAttach(chart, legendOpts);\r\n                        }\r\n                    },\r\n\r\n                    beforeUpdate: function(chart) {\r\n                        var legendOpts = chart.options.legend;\r\n                        var legend = chart.legend;\r\n\r\n                        if (legendOpts) {\r\n                            legendOpts = helpers.configMerge(Chart.defaults.global.legend, legendOpts);\r\n\r\n                            if (legend) {\r\n                                layout.configure(chart, legend, legendOpts);\r\n                                legend.options = legendOpts;\r\n                            } else {\r\n                                createNewLegendAndAttach(chart, legendOpts);\r\n                            }\r\n                        } else if (legend) {\r\n                            layout.removeBox(chart, legend);\r\n                            delete chart.legend;\r\n                        }\r\n                    },\r\n\r\n                    afterEvent: function(chart, e) {\r\n                        var legend = chart.legend;\r\n                        if (legend) {\r\n                            legend.handleEvent(e);\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n\r\n        }, {}],\r\n        43: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n                var layout = Chart.layoutService;\r\n                var noop = helpers.noop;\r\n\r\n                Chart.defaults.global.title = {\r\n                    display: false,\r\n                    position: 'top',\r\n                    fullWidth: true,\r\n                    weight: 2000, // by default greater than legend (1000) to be above\r\n                    fontStyle: 'bold',\r\n                    padding: 10,\r\n\r\n                    // actual title\r\n                    text: ''\r\n                };\r\n\r\n                Chart.Title = Chart.Element.extend({\r\n                    initialize: function(config) {\r\n                        var me = this;\r\n                        helpers.extend(me, config);\r\n\r\n                        // Contains hit boxes for each dataset (in dataset order)\r\n                        me.legendHitBoxes = [];\r\n                    },\r\n\r\n                    // These methods are ordered by lifecycle. Utilities then follow.\r\n\r\n                    beforeUpdate: noop,\r\n                    update: function(maxWidth, maxHeight, margins) {\r\n                        var me = this;\r\n\r\n                        // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\r\n                        me.beforeUpdate();\r\n\r\n                        // Absorb the master measurements\r\n                        me.maxWidth = maxWidth;\r\n                        me.maxHeight = maxHeight;\r\n                        me.margins = margins;\r\n\r\n                        // Dimensions\r\n                        me.beforeSetDimensions();\r\n                        me.setDimensions();\r\n                        me.afterSetDimensions();\r\n                        // Labels\r\n                        me.beforeBuildLabels();\r\n                        me.buildLabels();\r\n                        me.afterBuildLabels();\r\n\r\n                        // Fit\r\n                        me.beforeFit();\r\n                        me.fit();\r\n                        me.afterFit();\r\n                        //\r\n                        me.afterUpdate();\r\n\r\n                        return me.minSize;\r\n\r\n                    },\r\n                    afterUpdate: noop,\r\n\r\n                    //\r\n\r\n                    beforeSetDimensions: noop,\r\n                    setDimensions: function() {\r\n                        var me = this;\r\n                        // Set the unconstrained dimension before label rotation\r\n                        if (me.isHorizontal()) {\r\n                            // Reset position before calculating rotation\r\n                            me.width = me.maxWidth;\r\n                            me.left = 0;\r\n                            me.right = me.width;\r\n                        } else {\r\n                            me.height = me.maxHeight;\r\n\r\n                            // Reset position before calculating rotation\r\n                            me.top = 0;\r\n                            me.bottom = me.height;\r\n                        }\r\n\r\n                        // Reset padding\r\n                        me.paddingLeft = 0;\r\n                        me.paddingTop = 0;\r\n                        me.paddingRight = 0;\r\n                        me.paddingBottom = 0;\r\n\r\n                        // Reset minSize\r\n                        me.minSize = {\r\n                            width: 0,\r\n                            height: 0\r\n                        };\r\n                    },\r\n                    afterSetDimensions: noop,\r\n\r\n                    //\r\n\r\n                    beforeBuildLabels: noop,\r\n                    buildLabels: noop,\r\n                    afterBuildLabels: noop,\r\n\r\n                    //\r\n\r\n                    beforeFit: noop,\r\n                    fit: function() {\r\n                        var me = this,\r\n                            valueOrDefault = helpers.getValueOrDefault,\r\n                            opts = me.options,\r\n                            globalDefaults = Chart.defaults.global,\r\n                            display = opts.display,\r\n                            fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n                            minSize = me.minSize;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            minSize.width = me.maxWidth; // fill all the width\r\n                            minSize.height = display ? fontSize + (opts.padding * 2) : 0;\r\n                        } else {\r\n                            minSize.width = display ? fontSize + (opts.padding * 2) : 0;\r\n                            minSize.height = me.maxHeight; // fill all the height\r\n                        }\r\n\r\n                        me.width = minSize.width;\r\n                        me.height = minSize.height;\r\n\r\n                    },\r\n                    afterFit: noop,\r\n\r\n                    // Shared Methods\r\n                    isHorizontal: function() {\r\n                        var pos = this.options.position;\r\n                        return pos === 'top' || pos === 'bottom';\r\n                    },\r\n\r\n                    // Actually draw the title block on the canvas\r\n                    draw: function() {\r\n                        var me = this,\r\n                            ctx = me.ctx,\r\n                            valueOrDefault = helpers.getValueOrDefault,\r\n                            opts = me.options,\r\n                            globalDefaults = Chart.defaults.global;\r\n\r\n                        if (opts.display) {\r\n                            var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize),\r\n                                fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle),\r\n                                fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily),\r\n                                titleFont = helpers.fontString(fontSize, fontStyle, fontFamily),\r\n                                rotation = 0,\r\n                                titleX,\r\n                                titleY,\r\n                                top = me.top,\r\n                                left = me.left,\r\n                                bottom = me.bottom,\r\n                                right = me.right,\r\n                                maxWidth;\r\n\r\n                            ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\r\n                            ctx.font = titleFont;\r\n\r\n                            // Horizontal\r\n                            if (me.isHorizontal()) {\r\n                                titleX = left + ((right - left) / 2); // midpoint of the width\r\n                                titleY = top + ((bottom - top) / 2); // midpoint of the height\r\n                                maxWidth = right - left;\r\n                            } else {\r\n                                titleX = opts.position === 'left' ? left + (fontSize / 2) : right - (fontSize / 2);\r\n                                titleY = top + ((bottom - top) / 2);\r\n                                maxWidth = bottom - top;\r\n                                rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\r\n                            }\r\n\r\n                            ctx.save();\r\n                            ctx.translate(titleX, titleY);\r\n                            ctx.rotate(rotation);\r\n                            ctx.textAlign = 'center';\r\n                            ctx.textBaseline = 'middle';\r\n                            ctx.fillText(opts.text, 0, 0, maxWidth);\r\n                            ctx.restore();\r\n                        }\r\n                    }\r\n                });\r\n\r\n                function createNewTitleBlockAndAttach(chart, titleOpts) {\r\n                    var title = new Chart.Title({\r\n                        ctx: chart.ctx,\r\n                        options: titleOpts,\r\n                        chart: chart\r\n                    });\r\n\r\n                    layout.configure(chart, title, titleOpts);\r\n                    layout.addBox(chart, title);\r\n                    chart.titleBlock = title;\r\n                }\r\n\r\n                return {\r\n                    id: 'title',\r\n\r\n                    beforeInit: function(chart) {\r\n                        var titleOpts = chart.options.title;\r\n\r\n                        if (titleOpts) {\r\n                            createNewTitleBlockAndAttach(chart, titleOpts);\r\n                        }\r\n                    },\r\n\r\n                    beforeUpdate: function(chart) {\r\n                        var titleOpts = chart.options.title;\r\n                        var titleBlock = chart.titleBlock;\r\n\r\n                        if (titleOpts) {\r\n                            titleOpts = helpers.configMerge(Chart.defaults.global.title, titleOpts);\r\n\r\n                            if (titleBlock) {\r\n                                layout.configure(chart, titleBlock, titleOpts);\r\n                                titleBlock.options = titleOpts;\r\n                            } else {\r\n                                createNewTitleBlockAndAttach(chart, titleOpts);\r\n                            }\r\n                        } else if (titleBlock) {\r\n                            Chart.layoutService.removeBox(chart, titleBlock);\r\n                            delete chart.titleBlock;\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n\r\n        }, {}],\r\n        44: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n                // Default config for a category scale\r\n                var defaultConfig = {\r\n                    position: 'bottom'\r\n                };\r\n\r\n                var DatasetScale = Chart.Scale.extend({\r\n                    /**\r\n                     * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\r\n                     * else fall back to data.labels\r\n                     * @private\r\n                     */\r\n                    getLabels: function() {\r\n                        var data = this.chart.data;\r\n                        return (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\r\n                    },\r\n\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        me.minIndex = 0;\r\n                        me.maxIndex = labels.length - 1;\r\n                        var findIndex;\r\n\r\n                        if (me.options.ticks.min !== undefined) {\r\n                            // user specified min value\r\n                            findIndex = helpers.indexOf(labels, me.options.ticks.min);\r\n                            me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\r\n                        }\r\n\r\n                        if (me.options.ticks.max !== undefined) {\r\n                            // user specified max value\r\n                            findIndex = helpers.indexOf(labels, me.options.ticks.max);\r\n                            me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\r\n                        }\r\n\r\n                        me.min = labels[me.minIndex];\r\n                        me.max = labels[me.maxIndex];\r\n                    },\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var labels = me.getLabels();\r\n                        // If we are viewing some subset of labels, slice the original array\r\n                        me.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\r\n                    },\r\n\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        var me = this;\r\n                        var data = me.chart.data;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        if (data.yLabels && !isHorizontal) {\r\n                            return me.getRightValue(data.datasets[datasetIndex].data[index]);\r\n                        }\r\n                        return me.ticks[index - me.minIndex];\r\n                    },\r\n\r\n                    // Used to get data value locations.  Value can either be an index or a numerical value\r\n                    getPixelForValue: function(value, index, datasetIndex, includeOffset) {\r\n                        var me = this;\r\n                        // 1 is added because we need the length but we have the indexes\r\n                        var offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n\r\n                        // If value is a data object, then index is the index in the data array,\r\n                        // not the index of the scale. We need to change that.\r\n                        var valueCategory;\r\n                        if (value !== undefined && value !== null) {\r\n                            valueCategory = me.isHorizontal() ? value.x : value.y;\r\n                        }\r\n                        if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\r\n                            var labels = me.getLabels();\r\n                            value = valueCategory || value;\r\n                            var idx = labels.indexOf(value);\r\n                            index = idx !== -1 ? idx : index;\r\n                        }\r\n\r\n                        if (me.isHorizontal()) {\r\n                            var valueWidth = me.width / offsetAmt;\r\n                            var widthOffset = (valueWidth * (index - me.minIndex));\r\n\r\n                            if (me.options.gridLines.offsetGridLines && includeOffset || me.maxIndex === me.minIndex && includeOffset) {\r\n                                widthOffset += (valueWidth / 2);\r\n                            }\r\n\r\n                            return me.left + Math.round(widthOffset);\r\n                        }\r\n                        var valueHeight = me.height / offsetAmt;\r\n                        var heightOffset = (valueHeight * (index - me.minIndex));\r\n\r\n                        if (me.options.gridLines.offsetGridLines && includeOffset) {\r\n                            heightOffset += (valueHeight / 2);\r\n                        }\r\n\r\n                        return me.top + Math.round(heightOffset);\r\n                    },\r\n                    getPixelForTick: function(index, includeOffset) {\r\n                        return this.getPixelForValue(this.ticks[index], index + this.minIndex, null, includeOffset);\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var value;\r\n                        var offsetAmt = Math.max((me.ticks.length - ((me.options.gridLines.offsetGridLines) ? 0 : 1)), 1);\r\n                        var horz = me.isHorizontal();\r\n                        var valueDimension = (horz ? me.width : me.height) / offsetAmt;\r\n\r\n                        pixel -= horz ? me.left : me.top;\r\n\r\n                        if (me.options.gridLines.offsetGridLines) {\r\n                            pixel -= (valueDimension / 2);\r\n                        }\r\n\r\n                        if (pixel <= 0) {\r\n                            value = 0;\r\n                        } else {\r\n                            value = Math.round(pixel / valueDimension);\r\n                        }\r\n\r\n                        return value;\r\n                    },\r\n                    getBasePixel: function() {\r\n                        return this.bottom;\r\n                    }\r\n                });\r\n\r\n                Chart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\r\n\r\n            };\r\n\r\n        }, {}],\r\n        45: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                var defaultConfig = {\r\n                    position: 'left',\r\n                    ticks: {\r\n                        callback: Chart.Ticks.formatters.linear\r\n                    }\r\n                };\r\n\r\n                var LinearScale = Chart.LinearScaleBase.extend({\r\n\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var chart = me.chart;\r\n                        var data = chart.data;\r\n                        var datasets = data.datasets;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var DEFAULT_MIN = 0;\r\n                        var DEFAULT_MAX = 1;\r\n\r\n                        function IDMatches(meta) {\r\n                            return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n                        }\r\n\r\n                        // First Calculate the range\r\n                        me.min = null;\r\n                        me.max = null;\r\n\r\n                        var hasStacks = opts.stacked;\r\n                        if (hasStacks === undefined) {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                if (hasStacks) {\r\n                                    return;\r\n                                }\r\n\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n                                    meta.stack !== undefined) {\r\n                                    hasStacks = true;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (opts.stacked || hasStacks) {\r\n                            var valuesPerStack = {};\r\n\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                var key = [\r\n                                    meta.type,\r\n                                    // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n                                    ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n                                    meta.stack\r\n                                ].join('.');\r\n\r\n                                if (valuesPerStack[key] === undefined) {\r\n                                    valuesPerStack[key] = {\r\n                                        positiveValues: [],\r\n                                        negativeValues: []\r\n                                    };\r\n                                }\r\n\r\n                                // Store these per type\r\n                                var positiveValues = valuesPerStack[key].positiveValues;\r\n                                var negativeValues = valuesPerStack[key].negativeValues;\r\n\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        positiveValues[index] = positiveValues[index] || 0;\r\n                                        negativeValues[index] = negativeValues[index] || 0;\r\n\r\n                                        if (opts.relativePoints) {\r\n                                            positiveValues[index] = 100;\r\n                                        } else if (value < 0) {\r\n                                            negativeValues[index] += value;\r\n                                        } else {\r\n                                            positiveValues[index] += value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            helpers.each(valuesPerStack, function(valuesForType) {\r\n                                var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\r\n                                var minVal = helpers.min(values);\r\n                                var maxVal = helpers.max(values);\r\n                                me.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n                                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n                            });\r\n\r\n                        } else {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        if (me.min === null) {\r\n                                            me.min = value;\r\n                                        } else if (value < me.min) {\r\n                                            me.min = value;\r\n                                        }\r\n\r\n                                        if (me.max === null) {\r\n                                            me.max = value;\r\n                                        } else if (value > me.max) {\r\n                                            me.max = value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        me.min = isFinite(me.min) ? me.min : DEFAULT_MIN;\r\n                        me.max = isFinite(me.max) ? me.max : DEFAULT_MAX;\r\n\r\n                        // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n                        this.handleTickRangeOptions();\r\n                    },\r\n                    getTickLimit: function() {\r\n                        var maxTicks;\r\n                        var me = this;\r\n                        var tickOpts = me.options.ticks;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\r\n                        } else {\r\n                            // The factor of 2 used to scale the font size has been experimentally determined.\r\n                            var tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, Chart.defaults.global.defaultFontSize);\r\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\r\n                        }\r\n\r\n                        return maxTicks;\r\n                    },\r\n                    // Called after the ticks are built. We need\r\n                    handleDirectionalChanges: function() {\r\n                        if (!this.isHorizontal()) {\r\n                            // We are in a vertical orientation. The top value is the highest. So reverse the array\r\n                            this.ticks.reverse();\r\n                        }\r\n                    },\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n                    },\r\n                    // Utils\r\n                    getPixelForValue: function(value) {\r\n                        // This must be called after fit has been run so that\r\n                        // this.left, this.top, this.right, and this.bottom have been defined\r\n                        var me = this;\r\n                        var start = me.start;\r\n\r\n                        var rightValue = +me.getRightValue(value);\r\n                        var pixel;\r\n                        var range = me.end - start;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            pixel = me.left + (me.width / range * (rightValue - start));\r\n                            return Math.round(pixel);\r\n                        }\r\n\r\n                        pixel = me.bottom - (me.height / range * (rightValue - start));\r\n                        return Math.round(pixel);\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var isHorizontal = me.isHorizontal();\r\n                        var innerDimension = isHorizontal ? me.width : me.height;\r\n                        var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\r\n                        return me.start + ((me.end - me.start) * offset);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.ticksAsNumbers[index]);\r\n                    }\r\n                });\r\n                Chart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\r\n\r\n            };\r\n\r\n        }, {}],\r\n        46: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers,\r\n                    noop = helpers.noop;\r\n\r\n                Chart.LinearScaleBase = Chart.Scale.extend({\r\n                    handleTickRangeOptions: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\r\n                        // do nothing since that would make the chart weird. If the user really wants a weird chart\r\n                        // axis, they can manually override it\r\n                        if (tickOpts.beginAtZero) {\r\n                            var minSign = helpers.sign(me.min);\r\n                            var maxSign = helpers.sign(me.max);\r\n\r\n                            if (minSign < 0 && maxSign < 0) {\r\n                                // move the top up to 0\r\n                                me.max = 0;\r\n                            } else if (minSign > 0 && maxSign > 0) {\r\n                                // move the bottom down to 0\r\n                                me.min = 0;\r\n                            }\r\n                        }\r\n\r\n                        if (tickOpts.min !== undefined) {\r\n                            me.min = tickOpts.min;\r\n                        } else if (tickOpts.suggestedMin !== undefined) {\r\n                            if (me.min === null) {\r\n                                me.min = tickOpts.suggestedMin;\r\n                            } else {\r\n                                me.min = Math.min(me.min, tickOpts.suggestedMin);\r\n                            }\r\n                        }\r\n\r\n                        if (tickOpts.max !== undefined) {\r\n                            me.max = tickOpts.max;\r\n                        } else if (tickOpts.suggestedMax !== undefined) {\r\n                            if (me.max === null) {\r\n                                me.max = tickOpts.suggestedMax;\r\n                            } else {\r\n                                me.max = Math.max(me.max, tickOpts.suggestedMax);\r\n                            }\r\n                        }\r\n\r\n                        if (me.min === me.max) {\r\n                            me.max++;\r\n\r\n                            if (!tickOpts.beginAtZero) {\r\n                                me.min--;\r\n                            }\r\n                        }\r\n                    },\r\n                    getTickLimit: noop,\r\n                    handleDirectionalChanges: noop,\r\n\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        // Figure out what the max number of ticks we can support it is based on the size of\r\n                        // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\r\n                        // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\r\n                        // the graph. Make sure we always have at least 2 ticks\r\n                        var maxTicks = me.getTickLimit();\r\n                        maxTicks = Math.max(2, maxTicks);\r\n\r\n                        var numericGeneratorOptions = {\r\n                            maxTicks: maxTicks,\r\n                            min: tickOpts.min,\r\n                            max: tickOpts.max,\r\n                            stepSize: helpers.getValueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\r\n                        };\r\n                        var ticks = me.ticks = Chart.Ticks.generators.linear(numericGeneratorOptions, me);\r\n\r\n                        me.handleDirectionalChanges();\r\n\r\n                        // At this point, we need to update our max and min given the tick values since we have expanded the\r\n                        // range of the scale\r\n                        me.max = helpers.max(ticks);\r\n                        me.min = helpers.min(ticks);\r\n\r\n                        if (tickOpts.reverse) {\r\n                            ticks.reverse();\r\n\r\n                            me.start = me.max;\r\n                            me.end = me.min;\r\n                        } else {\r\n                            me.start = me.min;\r\n                            me.end = me.max;\r\n                        }\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        me.ticksAsNumbers = me.ticks.slice();\r\n                        me.zeroLineIndex = me.ticks.indexOf(0);\r\n\r\n                        Chart.Scale.prototype.convertTicksToLabels.call(me);\r\n                    }\r\n                });\r\n            };\r\n\r\n        }, {}],\r\n        47: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n\r\n                var defaultConfig = {\r\n                    position: 'left',\r\n\r\n                    // label settings\r\n                    ticks: {\r\n                        callback: Chart.Ticks.formatters.logarithmic\r\n                    }\r\n                };\r\n\r\n                var LogarithmicScale = Chart.Scale.extend({\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n                        var chart = me.chart;\r\n                        var data = chart.data;\r\n                        var datasets = data.datasets;\r\n                        var getValueOrDefault = helpers.getValueOrDefault;\r\n                        var isHorizontal = me.isHorizontal();\r\n\r\n                        function IDMatches(meta) {\r\n                            return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\r\n                        }\r\n\r\n                        // Calculate Range\r\n                        me.min = null;\r\n                        me.max = null;\r\n                        me.minNotZero = null;\r\n\r\n                        var hasStacks = opts.stacked;\r\n                        if (hasStacks === undefined) {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                if (hasStacks) {\r\n                                    return;\r\n                                }\r\n\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\r\n                                    meta.stack !== undefined) {\r\n                                    hasStacks = true;\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        if (opts.stacked || hasStacks) {\r\n                            var valuesPerStack = {};\r\n\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                var key = [\r\n                                    meta.type,\r\n                                    // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\r\n                                    ((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\r\n                                    meta.stack\r\n                                ].join('.');\r\n\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    if (valuesPerStack[key] === undefined) {\r\n                                        valuesPerStack[key] = [];\r\n                                    }\r\n\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var values = valuesPerStack[key];\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        values[index] = values[index] || 0;\r\n\r\n                                        if (opts.relativePoints) {\r\n                                            values[index] = 100;\r\n                                        } else {\r\n                                            // Don't need to split positive and negative since the log scale can't handle a 0 crossing\r\n                                            values[index] += value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            helpers.each(valuesPerStack, function(valuesForType) {\r\n                                var minVal = helpers.min(valuesForType);\r\n                                var maxVal = helpers.max(valuesForType);\r\n                                me.min = me.min === null ? minVal : Math.min(me.min, minVal);\r\n                                me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\r\n                            });\r\n\r\n                        } else {\r\n                            helpers.each(datasets, function(dataset, datasetIndex) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n                                if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\r\n                                    helpers.each(dataset.data, function(rawValue, index) {\r\n                                        var value = +me.getRightValue(rawValue);\r\n                                        if (isNaN(value) || meta.data[index].hidden) {\r\n                                            return;\r\n                                        }\r\n\r\n                                        if (me.min === null) {\r\n                                            me.min = value;\r\n                                        } else if (value < me.min) {\r\n                                            me.min = value;\r\n                                        }\r\n\r\n                                        if (me.max === null) {\r\n                                            me.max = value;\r\n                                        } else if (value > me.max) {\r\n                                            me.max = value;\r\n                                        }\r\n\r\n                                        if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\r\n                                            me.minNotZero = value;\r\n                                        }\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                        me.min = getValueOrDefault(tickOpts.min, me.min);\r\n                        me.max = getValueOrDefault(tickOpts.max, me.max);\r\n\r\n                        if (me.min === me.max) {\r\n                            if (me.min !== 0 && me.min !== null) {\r\n                                me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\r\n                                me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\r\n                            } else {\r\n                                me.min = 1;\r\n                                me.max = 10;\r\n                            }\r\n                        }\r\n                    },\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        var generationOptions = {\r\n                            min: tickOpts.min,\r\n                            max: tickOpts.max\r\n                        };\r\n                        var ticks = me.ticks = Chart.Ticks.generators.logarithmic(generationOptions, me);\r\n\r\n                        if (!me.isHorizontal()) {\r\n                            // We are in a vertical orientation. The top value is the highest. So reverse the array\r\n                            ticks.reverse();\r\n                        }\r\n\r\n                        // At this point, we need to update our max and min given the tick values since we have expanded the\r\n                        // range of the scale\r\n                        me.max = helpers.max(ticks);\r\n                        me.min = helpers.min(ticks);\r\n\r\n                        if (tickOpts.reverse) {\r\n                            ticks.reverse();\r\n\r\n                            me.start = me.max;\r\n                            me.end = me.min;\r\n                        } else {\r\n                            me.start = me.min;\r\n                            me.end = me.max;\r\n                        }\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        this.tickValues = this.ticks.slice();\r\n\r\n                        Chart.Scale.prototype.convertTicksToLabels.call(this);\r\n                    },\r\n                    // Get the correct tooltip label\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForValue(this.tickValues[index]);\r\n                    },\r\n                    getPixelForValue: function(value) {\r\n                        var me = this;\r\n                        var innerDimension;\r\n                        var pixel;\r\n\r\n                        var start = me.start;\r\n                        var newVal = +me.getRightValue(value);\r\n                        var range;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            range = helpers.log10(me.end) - helpers.log10(start); // todo: if start === 0\r\n                            if (newVal === 0) {\r\n                                pixel = me.left;\r\n                            } else {\r\n                                innerDimension = me.width;\r\n                                pixel = me.left + (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n                            }\r\n                        } else {\r\n                            // Bottom - top since pixels increase downward on a screen\r\n                            innerDimension = me.height;\r\n                            if (start === 0 && !tickOpts.reverse) {\r\n                                range = helpers.log10(me.end) - helpers.log10(me.minNotZero);\r\n                                if (newVal === start) {\r\n                                    pixel = me.bottom;\r\n                                } else if (newVal === me.minNotZero) {\r\n                                    pixel = me.bottom - innerDimension * 0.02;\r\n                                } else {\r\n                                    pixel = me.bottom - innerDimension * 0.02 - (innerDimension * 0.98 / range * (helpers.log10(newVal) - helpers.log10(me.minNotZero)));\r\n                                }\r\n                            } else if (me.end === 0 && tickOpts.reverse) {\r\n                                range = helpers.log10(me.start) - helpers.log10(me.minNotZero);\r\n                                if (newVal === me.end) {\r\n                                    pixel = me.top;\r\n                                } else if (newVal === me.minNotZero) {\r\n                                    pixel = me.top + innerDimension * 0.02;\r\n                                } else {\r\n                                    pixel = me.top + innerDimension * 0.02 + (innerDimension * 0.98 / range * (helpers.log10(newVal) - helpers.log10(me.minNotZero)));\r\n                                }\r\n                            } else if (newVal === 0) {\r\n                                pixel = tickOpts.reverse ? me.top : me.bottom;\r\n                            } else {\r\n                                range = helpers.log10(me.end) - helpers.log10(start);\r\n                                innerDimension = me.height;\r\n                                pixel = me.bottom - (innerDimension / range * (helpers.log10(newVal) - helpers.log10(start)));\r\n                            }\r\n                        }\r\n                        return pixel;\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var range = helpers.log10(me.end) - helpers.log10(me.start);\r\n                        var value, innerDimension;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            innerDimension = me.width;\r\n                            value = me.start * Math.pow(10, (pixel - me.left) * range / innerDimension);\r\n                        } else { // todo: if start === 0\r\n                            innerDimension = me.height;\r\n                            value = Math.pow(10, (me.bottom - pixel) * range / innerDimension) / me.start;\r\n                        }\r\n                        return value;\r\n                    }\r\n                });\r\n                Chart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\r\n\r\n            };\r\n\r\n        }, {}],\r\n        48: [function(require, module, exports) {\r\n            'use strict';\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n                var globalDefaults = Chart.defaults.global;\r\n\r\n                var defaultConfig = {\r\n                    display: true,\r\n\r\n                    // Boolean - Whether to animate scaling the chart from the centre\r\n                    animate: true,\r\n                    position: 'chartArea',\r\n\r\n                    angleLines: {\r\n                        display: true,\r\n                        color: 'rgba(0, 0, 0, 0.1)',\r\n                        lineWidth: 1\r\n                    },\r\n\r\n                    gridLines: {\r\n                        circular: false\r\n                    },\r\n\r\n                    // label settings\r\n                    ticks: {\r\n                        // Boolean - Show a backdrop to the scale label\r\n                        showLabelBackdrop: true,\r\n\r\n                        // String - The colour of the label backdrop\r\n                        backdropColor: 'rgba(255,255,255,0.75)',\r\n\r\n                        // Number - The backdrop padding above & below the label in pixels\r\n                        backdropPaddingY: 2,\r\n\r\n                        // Number - The backdrop padding to the side of the label in pixels\r\n                        backdropPaddingX: 2,\r\n\r\n                        callback: Chart.Ticks.formatters.linear\r\n                    },\r\n\r\n                    pointLabels: {\r\n                        // Boolean - if true, show point labels\r\n                        display: true,\r\n\r\n                        // Number - Point label font size in pixels\r\n                        fontSize: 10,\r\n\r\n                        // Function - Used to convert point labels\r\n                        callback: function(label) {\r\n                            return label;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                function getValueCount(scale) {\r\n                    var opts = scale.options;\r\n                    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\r\n                }\r\n\r\n                function getPointLabelFontOptions(scale) {\r\n                    var pointLabelOptions = scale.options.pointLabels;\r\n                    var fontSize = helpers.getValueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\r\n                    var fontStyle = helpers.getValueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\r\n                    var fontFamily = helpers.getValueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\r\n                    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\r\n\r\n                    return {\r\n                        size: fontSize,\r\n                        style: fontStyle,\r\n                        family: fontFamily,\r\n                        font: font\r\n                    };\r\n                }\r\n\r\n                function measureLabelSize(ctx, fontSize, label) {\r\n                    if (helpers.isArray(label)) {\r\n                        return {\r\n                            w: helpers.longestText(ctx, ctx.font, label),\r\n                            h: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\r\n                        };\r\n                    }\r\n\r\n                    return {\r\n                        w: ctx.measureText(label).width,\r\n                        h: fontSize\r\n                    };\r\n                }\r\n\r\n                function determineLimits(angle, pos, size, min, max) {\r\n                    if (angle === min || angle === max) {\r\n                        return {\r\n                            start: pos - (size / 2),\r\n                            end: pos + (size / 2)\r\n                        };\r\n                    } else if (angle < min || angle > max) {\r\n                        return {\r\n                            start: pos - size - 5,\r\n                            end: pos\r\n                        };\r\n                    }\r\n\r\n                    return {\r\n                        start: pos,\r\n                        end: pos + size + 5\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Helper function to fit a radial linear scale with point labels\r\n                 */\r\n                function fitWithPointLabels(scale) {\r\n                    /*\r\n                     * Right, this is really confusing and there is a lot of maths going on here\r\n                     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\r\n                     *\r\n                     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\r\n                     *\r\n                     * Solution:\r\n                     *\r\n                     * We assume the radius of the polygon is half the size of the canvas at first\r\n                     * at each index we check if the text overlaps.\r\n                     *\r\n                     * Where it does, we store that angle and that index.\r\n                     *\r\n                     * After finding the largest index and angle we calculate how much we need to remove\r\n                     * from the shape radius to move the point inwards by that x.\r\n                     *\r\n                     * We average the left and right distances to get the maximum shape radius that can fit in the box\r\n                     * along with labels.\r\n                     *\r\n                     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\r\n                     * on each side, removing that from the size, halving it and adding the left x protrusion width.\r\n                     *\r\n                     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\r\n                     * and position it in the most space efficient manner\r\n                     *\r\n                     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\r\n                     */\r\n\r\n                    var plFont = getPointLabelFontOptions(scale);\r\n\r\n                    // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\r\n                    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\r\n                    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\r\n                    var furthestLimits = {\r\n                        r: scale.width,\r\n                        l: 0,\r\n                        t: scale.height,\r\n                        b: 0\r\n                    };\r\n                    var furthestAngles = {};\r\n                    var i;\r\n                    var textSize;\r\n                    var pointPosition;\r\n\r\n                    scale.ctx.font = plFont.font;\r\n                    scale._pointLabelSizes = [];\r\n\r\n                    var valueCount = getValueCount(scale);\r\n                    for (i = 0; i < valueCount; i++) {\r\n                        pointPosition = scale.getPointPosition(i, largestPossibleRadius);\r\n                        textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\r\n                        scale._pointLabelSizes[i] = textSize;\r\n\r\n                        // Add quarter circle to make degree 0 mean top of circle\r\n                        var angleRadians = scale.getIndexAngle(i);\r\n                        var angle = helpers.toDegrees(angleRadians) % 360;\r\n                        var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\r\n                        var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\r\n\r\n                        if (hLimits.start < furthestLimits.l) {\r\n                            furthestLimits.l = hLimits.start;\r\n                            furthestAngles.l = angleRadians;\r\n                        }\r\n\r\n                        if (hLimits.end > furthestLimits.r) {\r\n                            furthestLimits.r = hLimits.end;\r\n                            furthestAngles.r = angleRadians;\r\n                        }\r\n\r\n                        if (vLimits.start < furthestLimits.t) {\r\n                            furthestLimits.t = vLimits.start;\r\n                            furthestAngles.t = angleRadians;\r\n                        }\r\n\r\n                        if (vLimits.end > furthestLimits.b) {\r\n                            furthestLimits.b = vLimits.end;\r\n                            furthestAngles.b = angleRadians;\r\n                        }\r\n                    }\r\n\r\n                    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\r\n                }\r\n\r\n                /**\r\n                 * Helper function to fit a radial linear scale with no point labels\r\n                 */\r\n                function fit(scale) {\r\n                    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\r\n                    scale.drawingArea = Math.round(largestPossibleRadius);\r\n                    scale.setCenterPoint(0, 0, 0, 0);\r\n                }\r\n\r\n                function getTextAlignForAngle(angle) {\r\n                    if (angle === 0 || angle === 180) {\r\n                        return 'center';\r\n                    } else if (angle < 180) {\r\n                        return 'left';\r\n                    }\r\n\r\n                    return 'right';\r\n                }\r\n\r\n                function fillText(ctx, text, position, fontSize) {\r\n                    if (helpers.isArray(text)) {\r\n                        var y = position.y;\r\n                        var spacing = 1.5 * fontSize;\r\n\r\n                        for (var i = 0; i < text.length; ++i) {\r\n                            ctx.fillText(text[i], position.x, y);\r\n                            y += spacing;\r\n                        }\r\n                    } else {\r\n                        ctx.fillText(text, position.x, position.y);\r\n                    }\r\n                }\r\n\r\n                function adjustPointPositionForLabelHeight(angle, textSize, position) {\r\n                    if (angle === 90 || angle === 270) {\r\n                        position.y -= (textSize.h / 2);\r\n                    } else if (angle > 270 || angle < 90) {\r\n                        position.y -= textSize.h;\r\n                    }\r\n                }\r\n\r\n                function drawPointLabels(scale) {\r\n                    var ctx = scale.ctx;\r\n                    var getValueOrDefault = helpers.getValueOrDefault;\r\n                    var opts = scale.options;\r\n                    var angleLineOpts = opts.angleLines;\r\n                    var pointLabelOpts = opts.pointLabels;\r\n\r\n                    ctx.lineWidth = angleLineOpts.lineWidth;\r\n                    ctx.strokeStyle = angleLineOpts.color;\r\n\r\n                    var outerDistance = scale.getDistanceFromCenterForValue(opts.reverse ? scale.min : scale.max);\r\n\r\n                    // Point Label Font\r\n                    var plFont = getPointLabelFontOptions(scale);\r\n\r\n                    ctx.textBaseline = 'top';\r\n\r\n                    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\r\n                        if (angleLineOpts.display) {\r\n                            var outerPosition = scale.getPointPosition(i, outerDistance);\r\n                            ctx.beginPath();\r\n                            ctx.moveTo(scale.xCenter, scale.yCenter);\r\n                            ctx.lineTo(outerPosition.x, outerPosition.y);\r\n                            ctx.stroke();\r\n                            ctx.closePath();\r\n                        }\r\n\r\n                        if (pointLabelOpts.display) {\r\n                            // Extra 3px out for some label spacing\r\n                            var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\r\n\r\n                            // Keep this in loop since we may support array properties here\r\n                            var pointLabelFontColor = getValueOrDefault(pointLabelOpts.fontColor, globalDefaults.defaultFontColor);\r\n                            ctx.font = plFont.font;\r\n                            ctx.fillStyle = pointLabelFontColor;\r\n\r\n                            var angleRadians = scale.getIndexAngle(i);\r\n                            var angle = helpers.toDegrees(angleRadians);\r\n                            ctx.textAlign = getTextAlignForAngle(angle);\r\n                            adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\r\n                            fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function drawRadiusLine(scale, gridLineOpts, radius, index) {\r\n                    var ctx = scale.ctx;\r\n                    ctx.strokeStyle = helpers.getValueAtIndexOrDefault(gridLineOpts.color, index - 1);\r\n                    ctx.lineWidth = helpers.getValueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\r\n\r\n                    if (scale.options.gridLines.circular) {\r\n                        // Draw circular arcs between the points\r\n                        ctx.beginPath();\r\n                        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\r\n                        ctx.closePath();\r\n                        ctx.stroke();\r\n                    } else {\r\n                        // Draw straight lines connecting each index\r\n                        var valueCount = getValueCount(scale);\r\n\r\n                        if (valueCount === 0) {\r\n                            return;\r\n                        }\r\n\r\n                        ctx.beginPath();\r\n                        var pointPosition = scale.getPointPosition(0, radius);\r\n                        ctx.moveTo(pointPosition.x, pointPosition.y);\r\n\r\n                        for (var i = 1; i < valueCount; i++) {\r\n                            pointPosition = scale.getPointPosition(i, radius);\r\n                            ctx.lineTo(pointPosition.x, pointPosition.y);\r\n                        }\r\n\r\n                        ctx.closePath();\r\n                        ctx.stroke();\r\n                    }\r\n                }\r\n\r\n                function numberOrZero(param) {\r\n                    return helpers.isNumber(param) ? param : 0;\r\n                }\r\n\r\n                var LinearRadialScale = Chart.LinearScaleBase.extend({\r\n                    setDimensions: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var tickOpts = opts.ticks;\r\n                        // Set the unconstrained dimension before label rotation\r\n                        me.width = me.maxWidth;\r\n                        me.height = me.maxHeight;\r\n                        me.xCenter = Math.round(me.width / 2);\r\n                        me.yCenter = Math.round(me.height / 2);\r\n\r\n                        var minSize = helpers.min([me.height, me.width]);\r\n                        var tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n                        me.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\r\n                    },\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var chart = me.chart;\r\n                        var min = Number.POSITIVE_INFINITY;\r\n                        var max = Number.NEGATIVE_INFINITY;\r\n\r\n                        helpers.each(chart.data.datasets, function(dataset, datasetIndex) {\r\n                            if (chart.isDatasetVisible(datasetIndex)) {\r\n                                var meta = chart.getDatasetMeta(datasetIndex);\r\n\r\n                                helpers.each(dataset.data, function(rawValue, index) {\r\n                                    var value = +me.getRightValue(rawValue);\r\n                                    if (isNaN(value) || meta.data[index].hidden) {\r\n                                        return;\r\n                                    }\r\n\r\n                                    min = Math.min(value, min);\r\n                                    max = Math.max(value, max);\r\n                                });\r\n                            }\r\n                        });\r\n\r\n                        me.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\r\n                        me.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\r\n\r\n                        // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\r\n                        me.handleTickRangeOptions();\r\n                    },\r\n                    getTickLimit: function() {\r\n                        var tickOpts = this.options.ticks;\r\n                        var tickFontSize = helpers.getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n                        return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\r\n\r\n                        // Point labels\r\n                        me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\r\n                    },\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\r\n                    },\r\n                    fit: function() {\r\n                        if (this.options.pointLabels.display) {\r\n                            fitWithPointLabels(this);\r\n                        } else {\r\n                            fit(this);\r\n                        }\r\n                    },\r\n                    /**\r\n                     * Set radius reductions and determine new radius and center point\r\n                     * @private\r\n                     */\r\n                    setReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\r\n                        var me = this;\r\n                        var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\r\n                        var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\r\n                        var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\r\n                        var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\r\n\r\n                        radiusReductionLeft = numberOrZero(radiusReductionLeft);\r\n                        radiusReductionRight = numberOrZero(radiusReductionRight);\r\n                        radiusReductionTop = numberOrZero(radiusReductionTop);\r\n                        radiusReductionBottom = numberOrZero(radiusReductionBottom);\r\n\r\n                        me.drawingArea = Math.min(\r\n                            Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\r\n                            Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\r\n                        me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\r\n                    },\r\n                    setCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\r\n                        var me = this;\r\n                        var maxRight = me.width - rightMovement - me.drawingArea,\r\n                            maxLeft = leftMovement + me.drawingArea,\r\n                            maxTop = topMovement + me.drawingArea,\r\n                            maxBottom = me.height - bottomMovement - me.drawingArea;\r\n\r\n                        me.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\r\n                        me.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\r\n                    },\r\n\r\n                    getIndexAngle: function(index) {\r\n                        var angleMultiplier = (Math.PI * 2) / getValueCount(this);\r\n                        var startAngle = this.chart.options && this.chart.options.startAngle ?\r\n                            this.chart.options.startAngle :\r\n                            0;\r\n\r\n                        var startAngleRadians = startAngle * Math.PI * 2 / 360;\r\n\r\n                        // Start from the top instead of right, so remove a quarter of the circle\r\n                        return index * angleMultiplier + startAngleRadians;\r\n                    },\r\n                    getDistanceFromCenterForValue: function(value) {\r\n                        var me = this;\r\n\r\n                        if (value === null) {\r\n                            return 0; // null always in center\r\n                        }\r\n\r\n                        // Take into account half font size + the yPadding of the top value\r\n                        var scalingFactor = me.drawingArea / (me.max - me.min);\r\n                        if (me.options.reverse) {\r\n                            return (me.max - value) * scalingFactor;\r\n                        }\r\n                        return (value - me.min) * scalingFactor;\r\n                    },\r\n                    getPointPosition: function(index, distanceFromCenter) {\r\n                        var me = this;\r\n                        var thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\r\n                        return {\r\n                            x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\r\n                            y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\r\n                        };\r\n                    },\r\n                    getPointPositionForValue: function(index, value) {\r\n                        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\r\n                    },\r\n\r\n                    getBasePosition: function() {\r\n                        var me = this;\r\n                        var min = me.min;\r\n                        var max = me.max;\r\n\r\n                        return me.getPointPositionForValue(0,\r\n                            me.beginAtZero ? 0 :\r\n                            min < 0 && max < 0 ? max :\r\n                            min > 0 && max > 0 ? min :\r\n                            0);\r\n                    },\r\n\r\n                    draw: function() {\r\n                        var me = this;\r\n                        var opts = me.options;\r\n                        var gridLineOpts = opts.gridLines;\r\n                        var tickOpts = opts.ticks;\r\n                        var getValueOrDefault = helpers.getValueOrDefault;\r\n\r\n                        if (opts.display) {\r\n                            var ctx = me.ctx;\r\n\r\n                            // Tick Font\r\n                            var tickFontSize = getValueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\r\n                            var tickFontStyle = getValueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\r\n                            var tickFontFamily = getValueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\r\n                            var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\r\n\r\n                            helpers.each(me.ticks, function(label, index) {\r\n                                // Don't draw a centre value (if it is minimum)\r\n                                if (index > 0 || opts.reverse) {\r\n                                    var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\r\n                                    var yHeight = me.yCenter - yCenterOffset;\r\n\r\n                                    // Draw circular lines around the scale\r\n                                    if (gridLineOpts.display && index !== 0) {\r\n                                        drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\r\n                                    }\r\n\r\n                                    if (tickOpts.display) {\r\n                                        var tickFontColor = getValueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\r\n                                        ctx.font = tickLabelFont;\r\n\r\n                                        if (tickOpts.showLabelBackdrop) {\r\n                                            var labelWidth = ctx.measureText(label).width;\r\n                                            ctx.fillStyle = tickOpts.backdropColor;\r\n                                            ctx.fillRect(\r\n                                                me.xCenter - labelWidth / 2 - tickOpts.backdropPaddingX,\r\n                                                yHeight - tickFontSize / 2 - tickOpts.backdropPaddingY,\r\n                                                labelWidth + tickOpts.backdropPaddingX * 2,\r\n                                                tickFontSize + tickOpts.backdropPaddingY * 2\r\n                                            );\r\n                                        }\r\n\r\n                                        ctx.textAlign = 'center';\r\n                                        ctx.textBaseline = 'middle';\r\n                                        ctx.fillStyle = tickFontColor;\r\n                                        ctx.fillText(label, me.xCenter, yHeight);\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                            if (opts.angleLines.display || opts.pointLabels.display) {\r\n                                drawPointLabels(me);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                Chart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\r\n\r\n            };\r\n\r\n        }, {}],\r\n        49: [function(require, module, exports) {\r\n            /* global window: false */\r\n            'use strict';\r\n\r\n            var moment = require(1);\r\n            moment = typeof(moment) === 'function' ? moment : window.moment;\r\n\r\n            module.exports = function(Chart) {\r\n\r\n                var helpers = Chart.helpers;\r\n                var interval = {\r\n                    millisecond: {\r\n                        size: 1,\r\n                        steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\r\n                    },\r\n                    second: {\r\n                        size: 1000,\r\n                        steps: [1, 2, 5, 10, 30]\r\n                    },\r\n                    minute: {\r\n                        size: 60000,\r\n                        steps: [1, 2, 5, 10, 30]\r\n                    },\r\n                    hour: {\r\n                        size: 3600000,\r\n                        steps: [1, 2, 3, 6, 12]\r\n                    },\r\n                    day: {\r\n                        size: 86400000,\r\n                        steps: [1, 2, 5]\r\n                    },\r\n                    week: {\r\n                        size: 604800000,\r\n                        maxStep: 4\r\n                    },\r\n                    month: {\r\n                        size: 2.628e9,\r\n                        maxStep: 3\r\n                    },\r\n                    quarter: {\r\n                        size: 7.884e9,\r\n                        maxStep: 4\r\n                    },\r\n                    year: {\r\n                        size: 3.154e10,\r\n                        maxStep: false\r\n                    }\r\n                };\r\n\r\n                var defaultConfig = {\r\n                    position: 'bottom',\r\n\r\n                    time: {\r\n                        parser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\r\n                        format: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\r\n                        unit: false, // false == automatic or override with week, month, year, etc.\r\n                        round: false, // none, or override with week, month, year, etc.\r\n                        displayFormat: false, // DEPRECATED\r\n                        isoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\r\n                        minUnit: 'millisecond',\r\n\r\n                        // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\r\n                        displayFormats: {\r\n                            millisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\r\n                            second: 'h:mm:ss a', // 11:20:01 AM\r\n                            minute: 'h:mm:ss a', // 11:20:01 AM\r\n                            hour: 'MMM D, hA', // Sept 4, 5PM\r\n                            day: 'll', // Sep 4 2015\r\n                            week: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\r\n                            month: 'MMM YYYY', // Sept 2015\r\n                            quarter: '[Q]Q - YYYY', // Q3\r\n                            year: 'YYYY' // 2015\r\n                        },\r\n                    },\r\n                    ticks: {\r\n                        autoSkip: false\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Helper function to parse time to a moment object\r\n                 * @param axis {TimeAxis} the time axis\r\n                 * @param label {Date|string|number|Moment} The thing to parse\r\n                 * @return {Moment} parsed time\r\n                 */\r\n                function parseTime(axis, label) {\r\n                    var timeOpts = axis.options.time;\r\n                    if (typeof timeOpts.parser === 'string') {\r\n                        return moment(label, timeOpts.parser);\r\n                    }\r\n                    if (typeof timeOpts.parser === 'function') {\r\n                        return timeOpts.parser(label);\r\n                    }\r\n                    if (typeof label.getMonth === 'function' || typeof label === 'number') {\r\n                        // Date objects\r\n                        return moment(label);\r\n                    }\r\n                    if (label.isValid && label.isValid()) {\r\n                        // Moment support\r\n                        return label;\r\n                    }\r\n                    var format = timeOpts.format;\r\n                    if (typeof format !== 'string' && format.call) {\r\n                        // Custom parsing (return an instance of moment)\r\n                        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\r\n                        return format(label);\r\n                    }\r\n                    // Moment format parsing\r\n                    return moment(label, format);\r\n                }\r\n\r\n                /**\r\n                 * Figure out which is the best unit for the scale\r\n                 * @param minUnit {String} minimum unit to use\r\n                 * @param min {Number} scale minimum\r\n                 * @param max {Number} scale maximum\r\n                 * @return {String} the unit to use\r\n                 */\r\n                function determineUnit(minUnit, min, max, maxTicks) {\r\n                    var units = Object.keys(interval);\r\n                    var unit;\r\n                    var numUnits = units.length;\r\n\r\n                    for (var i = units.indexOf(minUnit); i < numUnits; i++) {\r\n                        unit = units[i];\r\n                        var unitDetails = interval[unit];\r\n                        var steps = (unitDetails.steps && unitDetails.steps[unitDetails.steps.length - 1]) || unitDetails.maxStep;\r\n                        if (steps === undefined || Math.ceil((max - min) / (steps * unitDetails.size)) <= maxTicks) {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    return unit;\r\n                }\r\n\r\n                /**\r\n                 * Determines how we scale the unit\r\n                 * @param min {Number} the scale minimum\r\n                 * @param max {Number} the scale maximum\r\n                 * @param unit {String} the unit determined by the {@see determineUnit} method\r\n                 * @return {Number} the axis step size as a multiple of unit\r\n                 */\r\n                function determineStepSize(min, max, unit, maxTicks) {\r\n                    // Using our unit, figoure out what we need to scale as\r\n                    var unitDefinition = interval[unit];\r\n                    var unitSizeInMilliSeconds = unitDefinition.size;\r\n                    var sizeInUnits = Math.ceil((max - min) / unitSizeInMilliSeconds);\r\n                    var multiplier = 1;\r\n                    var range = max - min;\r\n\r\n                    if (unitDefinition.steps) {\r\n                        // Have an array of steps\r\n                        var numSteps = unitDefinition.steps.length;\r\n                        for (var i = 0; i < numSteps && sizeInUnits > maxTicks; i++) {\r\n                            multiplier = unitDefinition.steps[i];\r\n                            sizeInUnits = Math.ceil(range / (unitSizeInMilliSeconds * multiplier));\r\n                        }\r\n                    } else {\r\n                        while (sizeInUnits > maxTicks && maxTicks > 0) {\r\n                            ++multiplier;\r\n                            sizeInUnits = Math.ceil(range / (unitSizeInMilliSeconds * multiplier));\r\n                        }\r\n                    }\r\n\r\n                    return multiplier;\r\n                }\r\n\r\n                /**\r\n                 * Helper for generating axis labels.\r\n                 * @param options {ITimeGeneratorOptions} the options for generation\r\n                 * @param dataRange {IRange} the data range\r\n                 * @param niceRange {IRange} the pretty range to display\r\n                 * @return {Number[]} ticks\r\n                 */\r\n                function generateTicks(options, dataRange, niceRange) {\r\n                    var ticks = [];\r\n                    if (options.maxTicks) {\r\n                        var stepSize = options.stepSize;\r\n                        ticks.push(options.min !== undefined ? options.min : niceRange.min);\r\n                        var cur = moment(niceRange.min);\r\n                        while (cur.add(stepSize, options.unit).valueOf() < niceRange.max) {\r\n                            ticks.push(cur.valueOf());\r\n                        }\r\n                        var realMax = options.max || niceRange.max;\r\n                        if (ticks[ticks.length - 1] !== realMax) {\r\n                            ticks.push(realMax);\r\n                        }\r\n                    }\r\n                    return ticks;\r\n                }\r\n\r\n                /**\r\n                 * @function Chart.Ticks.generators.time\r\n                 * @param options {ITimeGeneratorOptions} the options for generation\r\n                 * @param dataRange {IRange} the data range\r\n                 * @return {Number[]} ticks\r\n                 */\r\n                Chart.Ticks.generators.time = function(options, dataRange) {\r\n                    var niceMin;\r\n                    var niceMax;\r\n                    var isoWeekday = options.isoWeekday;\r\n                    if (options.unit === 'week' && isoWeekday !== false) {\r\n                        niceMin = moment(dataRange.min).startOf('isoWeek').isoWeekday(isoWeekday).valueOf();\r\n                        niceMax = moment(dataRange.max).startOf('isoWeek').isoWeekday(isoWeekday);\r\n                        if (dataRange.max - niceMax > 0) {\r\n                            niceMax.add(1, 'week');\r\n                        }\r\n                        niceMax = niceMax.valueOf();\r\n                    } else {\r\n                        niceMin = moment(dataRange.min).startOf(options.unit).valueOf();\r\n                        niceMax = moment(dataRange.max).startOf(options.unit);\r\n                        if (dataRange.max - niceMax > 0) {\r\n                            niceMax.add(1, options.unit);\r\n                        }\r\n                        niceMax = niceMax.valueOf();\r\n                    }\r\n                    return generateTicks(options, dataRange, {\r\n                        min: niceMin,\r\n                        max: niceMax\r\n                    });\r\n                };\r\n\r\n                var TimeScale = Chart.Scale.extend({\r\n                    initialize: function() {\r\n                        if (!moment) {\r\n                            throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\r\n                        }\r\n\r\n                        Chart.Scale.prototype.initialize.call(this);\r\n                    },\r\n                    determineDataLimits: function() {\r\n                        var me = this;\r\n                        var timeOpts = me.options.time;\r\n\r\n                        // We store the data range as unix millisecond timestamps so dataMin and dataMax will always be integers.\r\n                        var dataMin = Number.MAX_SAFE_INTEGER;\r\n                        var dataMax = Number.MIN_SAFE_INTEGER;\r\n\r\n                        var chartData = me.chart.data;\r\n                        var parsedData = {\r\n                            labels: [],\r\n                            datasets: []\r\n                        };\r\n\r\n                        var timestamp;\r\n\r\n                        helpers.each(chartData.labels, function(label, labelIndex) {\r\n                            var labelMoment = parseTime(me, label);\r\n\r\n                            if (labelMoment.isValid()) {\r\n                                // We need to round the time\r\n                                if (timeOpts.round) {\r\n                                    labelMoment.startOf(timeOpts.round);\r\n                                }\r\n\r\n                                timestamp = labelMoment.valueOf();\r\n                                dataMin = Math.min(timestamp, dataMin);\r\n                                dataMax = Math.max(timestamp, dataMax);\r\n\r\n                                // Store this value for later\r\n                                parsedData.labels[labelIndex] = timestamp;\r\n                            }\r\n                        });\r\n\r\n                        helpers.each(chartData.datasets, function(dataset, datasetIndex) {\r\n                            var timestamps = [];\r\n\r\n                            if (typeof dataset.data[0] === 'object' && dataset.data[0] !== null && me.chart.isDatasetVisible(datasetIndex)) {\r\n                                // We have potential point data, so we need to parse this\r\n                                helpers.each(dataset.data, function(value, dataIndex) {\r\n                                    var dataMoment = parseTime(me, me.getRightValue(value));\r\n\r\n                                    if (dataMoment.isValid()) {\r\n                                        if (timeOpts.round) {\r\n                                            dataMoment.startOf(timeOpts.round);\r\n                                        }\r\n\r\n                                        timestamp = dataMoment.valueOf();\r\n                                        dataMin = Math.min(timestamp, dataMin);\r\n                                        dataMax = Math.max(timestamp, dataMax);\r\n                                        timestamps[dataIndex] = timestamp;\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                // We have no x coordinates, so use the ones from the labels\r\n                                timestamps = parsedData.labels.slice();\r\n                            }\r\n\r\n                            parsedData.datasets[datasetIndex] = timestamps;\r\n                        });\r\n\r\n                        me.dataMin = dataMin;\r\n                        me.dataMax = dataMax;\r\n                        me._parsedData = parsedData;\r\n                    },\r\n                    buildTicks: function() {\r\n                        var me = this;\r\n                        var timeOpts = me.options.time;\r\n\r\n                        var minTimestamp;\r\n                        var maxTimestamp;\r\n                        var dataMin = me.dataMin;\r\n                        var dataMax = me.dataMax;\r\n\r\n                        if (timeOpts.min) {\r\n                            var minMoment = parseTime(me, timeOpts.min);\r\n                            if (timeOpts.round) {\r\n                                minMoment.round(timeOpts.round);\r\n                            }\r\n                            minTimestamp = minMoment.valueOf();\r\n                        }\r\n\r\n                        if (timeOpts.max) {\r\n                            maxTimestamp = parseTime(me, timeOpts.max).valueOf();\r\n                        }\r\n\r\n                        var maxTicks = me.getLabelCapacity(minTimestamp || dataMin);\r\n                        var unit = timeOpts.unit || determineUnit(timeOpts.minUnit, minTimestamp || dataMin, maxTimestamp || dataMax, maxTicks);\r\n                        me.displayFormat = timeOpts.displayFormats[unit];\r\n\r\n                        var stepSize = timeOpts.stepSize || determineStepSize(minTimestamp || dataMin, maxTimestamp || dataMax, unit, maxTicks);\r\n                        me.ticks = Chart.Ticks.generators.time({\r\n                            maxTicks: maxTicks,\r\n                            min: minTimestamp,\r\n                            max: maxTimestamp,\r\n                            stepSize: stepSize,\r\n                            unit: unit,\r\n                            isoWeekday: timeOpts.isoWeekday\r\n                        }, {\r\n                            min: dataMin,\r\n                            max: dataMax\r\n                        });\r\n\r\n                        // At this point, we need to update our max and min given the tick values since we have expanded the\r\n                        // range of the scale\r\n                        me.max = helpers.max(me.ticks);\r\n                        me.min = helpers.min(me.ticks);\r\n                    },\r\n                    // Get tooltip label\r\n                    getLabelForIndex: function(index, datasetIndex) {\r\n                        var me = this;\r\n                        var label = me.chart.data.labels && index < me.chart.data.labels.length ? me.chart.data.labels[index] : '';\r\n                        var value = me.chart.data.datasets[datasetIndex].data[index];\r\n\r\n                        if (value !== null && typeof value === 'object') {\r\n                            label = me.getRightValue(value);\r\n                        }\r\n\r\n                        // Format nicely\r\n                        if (me.options.time.tooltipFormat) {\r\n                            label = parseTime(me, label).format(me.options.time.tooltipFormat);\r\n                        }\r\n\r\n                        return label;\r\n                    },\r\n                    // Function to format an individual tick mark\r\n                    tickFormatFunction: function(tick, index, ticks) {\r\n                        var formattedTick = tick.format(this.displayFormat);\r\n                        var tickOpts = this.options.ticks;\r\n                        var callback = helpers.getValueOrDefault(tickOpts.callback, tickOpts.userCallback);\r\n\r\n                        if (callback) {\r\n                            return callback(formattedTick, index, ticks);\r\n                        }\r\n                        return formattedTick;\r\n                    },\r\n                    convertTicksToLabels: function() {\r\n                        var me = this;\r\n                        me.ticksAsTimestamps = me.ticks;\r\n                        me.ticks = me.ticks.map(function(tick) {\r\n                            return moment(tick);\r\n                        }).map(me.tickFormatFunction, me);\r\n                    },\r\n                    getPixelForOffset: function(offset) {\r\n                        var me = this;\r\n                        var epochWidth = me.max - me.min;\r\n                        var decimal = epochWidth ? (offset - me.min) / epochWidth : 0;\r\n\r\n                        if (me.isHorizontal()) {\r\n                            var valueOffset = (me.width * decimal);\r\n                            return me.left + Math.round(valueOffset);\r\n                        }\r\n\r\n                        var heightOffset = (me.height * decimal);\r\n                        return me.top + Math.round(heightOffset);\r\n                    },\r\n                    getPixelForValue: function(value, index, datasetIndex) {\r\n                        var me = this;\r\n                        var offset = null;\r\n                        if (index !== undefined && datasetIndex !== undefined) {\r\n                            offset = me._parsedData.datasets[datasetIndex][index];\r\n                        }\r\n\r\n                        if (offset === null) {\r\n                            if (!value || !value.isValid) {\r\n                                // not already a moment object\r\n                                value = parseTime(me, me.getRightValue(value));\r\n                            }\r\n\r\n                            if (value && value.isValid && value.isValid()) {\r\n                                offset = value.valueOf();\r\n                            }\r\n                        }\r\n\r\n                        if (offset !== null) {\r\n                            return me.getPixelForOffset(offset);\r\n                        }\r\n                    },\r\n                    getPixelForTick: function(index) {\r\n                        return this.getPixelForOffset(this.ticksAsTimestamps[index]);\r\n                    },\r\n                    getValueForPixel: function(pixel) {\r\n                        var me = this;\r\n                        var innerDimension = me.isHorizontal() ? me.width : me.height;\r\n                        var offset = (pixel - (me.isHorizontal() ? me.left : me.top)) / innerDimension;\r\n                        return moment(me.min + (offset * (me.max - me.min)));\r\n                    },\r\n                    // Crude approximation of what the label width might be\r\n                    getLabelWidth: function(label) {\r\n                        var me = this;\r\n                        var ticks = me.options.ticks;\r\n\r\n                        var tickLabelWidth = me.ctx.measureText(label).width;\r\n                        var cosRotation = Math.cos(helpers.toRadians(ticks.maxRotation));\r\n                        var sinRotation = Math.sin(helpers.toRadians(ticks.maxRotation));\r\n                        var tickFontSize = helpers.getValueOrDefault(ticks.fontSize, Chart.defaults.global.defaultFontSize);\r\n                        return (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\r\n                    },\r\n                    getLabelCapacity: function(exampleTime) {\r\n                        var me = this;\r\n\r\n                        me.displayFormat = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\r\n                        var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, []);\r\n                        var tickLabelWidth = me.getLabelWidth(exampleLabel);\r\n\r\n                        var innerWidth = me.isHorizontal() ? me.width : me.height;\r\n                        var labelCapacity = innerWidth / tickLabelWidth;\r\n                        return labelCapacity;\r\n                    }\r\n                });\r\n                Chart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\r\n\r\n            };\r\n\r\n        }, { \"1\": 1 }]\r\n    }, {}, [7])(7)\r\n});","/*! jQuery v2.2.4 | (c) jQuery Foundation | jquery.org/license */\r\n!function(a,b){\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){var c=[],d=a.document,e=c.slice,f=c.concat,g=c.push,h=c.indexOf,i={},j=i.toString,k=i.hasOwnProperty,l={},m=\"2.2.4\",n=function(a,b){return new n.fn.init(a,b)},o=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,p=/^-ms-/,q=/-([\\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:\"\",length:0,toArray:function(){return e.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:e.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a){return n.each(this,a)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(e.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:g,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for(\"boolean\"==typeof g&&(j=g,g=arguments[h]||{},h++),\"object\"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(a=arguments[h]))for(b in a)c=g[b],d=a[b],g!==d&&(j&&d&&(n.isPlainObject(d)||(e=n.isArray(d)))?(e?(e=!1,f=c&&n.isArray(c)?c:[]):f=c&&n.isPlainObject(c)?c:{},g[b]=n.extend(j,f,d)):void 0!==d&&(g[b]=d));return g},n.extend({expando:\"jQuery\"+(m+Math.random()).replace(/\\D/g,\"\"),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return\"function\"===n.type(a)},isArray:Array.isArray,isWindow:function(a){return null!=a&&a===a.window},isNumeric:function(a){var b=a&&a.toString();return!n.isArray(a)&&b-parseFloat(b)+1>=0},isPlainObject:function(a){var b;if(\"object\"!==n.type(a)||a.nodeType||n.isWindow(a))return!1;if(a.constructor&&!k.call(a,\"constructor\")&&!k.call(a.constructor.prototype||{},\"isPrototypeOf\"))return!1;for(b in a);return void 0===b||k.call(a,b)},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},type:function(a){return null==a?a+\"\":\"object\"==typeof a||\"function\"==typeof a?i[j.call(a)]||\"object\":typeof a},globalEval:function(a){var b,c=eval;a=n.trim(a),a&&(1===a.indexOf(\"use strict\")?(b=d.createElement(\"script\"),b.text=a,d.head.appendChild(b).parentNode.removeChild(b)):c(a))},camelCase:function(a){return a.replace(p,\"ms-\").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b){var c,d=0;if(s(a)){for(c=a.length;c>d;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?\"\":(a+\"\").replace(o,\"\")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,\"string\"==typeof a?[a]:a):g.call(c,a)),c},inArray:function(a,b,c){return null==b?-1:h.call(b,a,c)},merge:function(a,b){for(var c=+b.length,d=0,e=a.length;c>d;d++)a[e++]=b[d];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,g=0,h=[];if(s(a))for(d=a.length;d>g;g++)e=b(a[g],g,c),null!=e&&h.push(e);else for(g in a)e=b(a[g],g,c),null!=e&&h.push(e);return f.apply([],h)},guid:1,proxy:function(a,b){var c,d,f;return\"string\"==typeof b&&(c=a[b],b=a,a=c),n.isFunction(a)?(d=e.call(arguments,2),f=function(){return a.apply(b||this,d.concat(e.call(arguments)))},f.guid=a.guid=a.guid||n.guid++,f):void 0},now:Date.now,support:l}),\"function\"==typeof Symbol&&(n.fn[Symbol.iterator]=c[Symbol.iterator]),n.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"),function(a,b){i[\"[object \"+b+\"]\"]=b.toLowerCase()});function s(a){var b=!!a&&\"length\"in a&&a.length,c=n.type(a);return\"function\"===c||n.isWindow(a)?!1:\"array\"===c||0===b||\"number\"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=\"sizzle\"+1*new Date,v=a.document,w=0,x=0,y=ga(),z=ga(),A=ga(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K=\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",L=\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",M=\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",N=\"\\\\[\"+L+\"*(\"+M+\")(?:\"+L+\"*([*^$|!~]?=)\"+L+\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\"+M+\"))|)\"+L+\"*\\\\]\",O=\":(\"+M+\")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"+N+\")*)|.*)\\\\)|)\",P=new RegExp(L+\"+\",\"g\"),Q=new RegExp(\"^\"+L+\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"+L+\"+$\",\"g\"),R=new RegExp(\"^\"+L+\"*,\"+L+\"*\"),S=new RegExp(\"^\"+L+\"*([>+~]|\"+L+\")\"+L+\"*\"),T=new RegExp(\"=\"+L+\"*([^\\\\]'\\\"]*?)\"+L+\"*\\\\]\",\"g\"),U=new RegExp(O),V=new RegExp(\"^\"+M+\"$\"),W={ID:new RegExp(\"^#(\"+M+\")\"),CLASS:new RegExp(\"^\\\\.(\"+M+\")\"),TAG:new RegExp(\"^(\"+M+\"|[*])\"),ATTR:new RegExp(\"^\"+N),PSEUDO:new RegExp(\"^\"+O),CHILD:new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"+L+\"*(even|odd|(([+-]|)(\\\\d*)n|)\"+L+\"*(?:([+-]|)\"+L+\"*(\\\\d+)|))\"+L+\"*\\\\)|)\",\"i\"),bool:new RegExp(\"^(?:\"+K+\")$\",\"i\"),needsContext:new RegExp(\"^\"+L+\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"+L+\"*((?:-\\\\d)?\\\\d*)\"+L+\"*\\\\)|)(?=[^-]|$)\",\"i\")},X=/^(?:input|select|textarea|button)$/i,Y=/^h\\d$/i,Z=/^[^{]+\\{\\s*\\[native \\w/,$=/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,_=/[+~]/,aa=/'|\\\\/g,ba=new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\"+L+\"?|(\"+L+\")|.)\",\"ig\"),ca=function(a,b,c){var d=\"0x\"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},da=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(ea){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],\"string\"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+\" \"]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if(\"object\"!==b.nodeName.toLowerCase()){(k=b.getAttribute(\"id\"))?k=k.replace(aa,\"\\\\$&\"):b.setAttribute(\"id\",k=u),r=g(a),h=r.length,l=V.test(k)?\"#\"+k:\"[id='\"+k+\"']\";while(h--)r[h]=l+\" \"+qa(r[h]);s=r.join(\",\"),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute(\"id\")}}}return i(a.replace(Q,\"$1\"),b,d,e)}function ga(){var a=[];function b(c,e){return a.push(c+\" \")>d.cacheLength&&delete b[a.shift()],b[c+\" \"]=e}return b}function ha(a){return a[u]=!0,a}function ia(a){var b=n.createElement(\"div\");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ja(a,b){var c=a.split(\"|\"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function la(a){return function(b){var c=b.nodeName.toLowerCase();return\"input\"===c&&b.type===a}}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return(\"input\"===c||\"button\"===c)&&b.type===a}}function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function oa(a){return a&&\"undefined\"!=typeof a.getElementsByTagName&&a}c=fa.support={},f=fa.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?\"HTML\"!==b.nodeName:!1},m=fa.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener(\"unload\",da,!1):e.attachEvent&&e.attachEvent(\"onunload\",da)),c.attributes=ia(function(a){return a.className=\"i\",!a.getAttribute(\"className\")}),c.getElementsByTagName=ia(function(a){return a.appendChild(n.createComment(\"\")),!a.getElementsByTagName(\"*\").length}),c.getElementsByClassName=Z.test(n.getElementsByClassName),c.getById=ia(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(\"undefined\"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ba,ca);return function(a){return a.getAttribute(\"id\")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ba,ca);return function(a){var c=\"undefined\"!=typeof a.getAttributeNode&&a.getAttributeNode(\"id\");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return\"undefined\"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if(\"*\"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return\"undefined\"!=typeof b.getElementsByClassName&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=Z.test(n.querySelectorAll))&&(ia(function(a){o.appendChild(a).innerHTML=\"<a id='\"+u+\"'></a><select id='\"+u+\"-\\r\\\\' msallowcapture=''><option selected=''></option></select>\",a.querySelectorAll(\"[msallowcapture^='']\").length&&q.push(\"[*^$]=\"+L+\"*(?:''|\\\"\\\")\"),a.querySelectorAll(\"[selected]\").length||q.push(\"\\\\[\"+L+\"*(?:value|\"+K+\")\"),a.querySelectorAll(\"[id~=\"+u+\"-]\").length||q.push(\"~=\"),a.querySelectorAll(\":checked\").length||q.push(\":checked\"),a.querySelectorAll(\"a#\"+u+\"+*\").length||q.push(\".#.+[+~]\")}),ia(function(a){var b=n.createElement(\"input\");b.setAttribute(\"type\",\"hidden\"),a.appendChild(b).setAttribute(\"name\",\"D\"),a.querySelectorAll(\"[name=d]\").length&&q.push(\"name\"+L+\"*[*^$|!~]?=\"),a.querySelectorAll(\":enabled\").length||q.push(\":enabled\",\":disabled\"),a.querySelectorAll(\"*,:x\"),q.push(\",.*:\")})),(c.matchesSelector=Z.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ia(function(a){c.disconnectedMatch=s.call(a,\"div\"),s.call(a,\"[s!='']:x\"),r.push(\"!=\",O)}),q=q.length&&new RegExp(q.join(\"|\")),r=r.length&&new RegExp(r.join(\"|\")),b=Z.test(o.compareDocumentPosition),t=b||Z.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return ka(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?ka(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},fa.matches=function(a,b){return fa(a,null,null,b)},fa.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(T,\"='$1']\"),c.matchesSelector&&p&&!A[b+\" \"]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return fa(b,n,null,[a]).length>0},fa.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},fa.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},fa.error=function(a){throw new Error(\"Syntax error, unrecognized expression: \"+a)},fa.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=fa.getText=function(a){var b,c=\"\",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if(\"string\"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=fa.selectors={cacheLength:50,createPseudo:ha,match:W,attrHandle:{},find:{},relative:{\">\":{dir:\"parentNode\",first:!0},\" \":{dir:\"parentNode\"},\"+\":{dir:\"previousSibling\",first:!0},\"~\":{dir:\"previousSibling\"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ba,ca),a[3]=(a[3]||a[4]||a[5]||\"\").replace(ba,ca),\"~=\"===a[2]&&(a[3]=\" \"+a[3]+\" \"),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),\"nth\"===a[1].slice(0,3)?(a[3]||fa.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*(\"even\"===a[3]||\"odd\"===a[3])),a[5]=+(a[7]+a[8]||\"odd\"===a[3])):a[3]&&fa.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return W.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||\"\":c&&U.test(c)&&(b=g(c,!0))&&(b=c.indexOf(\")\",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ba,ca).toLowerCase();return\"*\"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+\" \"];return b||(b=new RegExp(\"(^|\"+L+\")\"+a+\"(\"+L+\"|$)\"))&&y(a,function(a){return b.test(\"string\"==typeof a.className&&a.className||\"undefined\"!=typeof a.getAttribute&&a.getAttribute(\"class\")||\"\")})},ATTR:function(a,b,c){return function(d){var e=fa.attr(d,a);return null==e?\"!=\"===b:b?(e+=\"\",\"=\"===b?e===c:\"!=\"===b?e!==c:\"^=\"===b?c&&0===e.indexOf(c):\"*=\"===b?c&&e.indexOf(c)>-1:\"$=\"===b?c&&e.slice(-c.length)===c:\"~=\"===b?(\" \"+e.replace(P,\" \")+\" \").indexOf(c)>-1:\"|=\"===b?e===c||e.slice(0,c.length+1)===c+\"-\":!1):!0}},CHILD:function(a,b,c,d,e){var f=\"nth\"!==a.slice(0,3),g=\"last\"!==a.slice(-4),h=\"of-type\"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?\"nextSibling\":\"previousSibling\",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p=\"only\"===a&&!o&&\"nextSibling\"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||fa.error(\"unsupported pseudo: \"+a);return e[u]?e(b):e.length>1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ha(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ha(function(a){var b=[],c=[],d=h(a.replace(Q,\"$1\"));return d[u]?ha(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ha(function(a){return function(b){return fa(a,b).length>0}}),contains:ha(function(a){return a=a.replace(ba,ca),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ha(function(a){return V.test(a||\"\")||fa.error(\"unsupported lang: \"+a),a=a.replace(ba,ca).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Y.test(a.nodeName)},input:function(a){return X.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&\"button\"===a.type||\"button\"===b},text:function(a){var b;return\"input\"===a.nodeName.toLowerCase()&&\"text\"===a.type&&(null==(b=a.getAttribute(\"type\"))||\"text\"===b.toLowerCase())},first:na(function(){return[0]}),last:na(function(a,b){return[b-1]}),eq:na(function(a,b,c){return[0>c?c+b:c]}),even:na(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:na(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:na(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:na(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=la(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=ma(b);function pa(){}pa.prototype=d.filters=d.pseudos,d.setFilters=new pa,g=fa.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+\" \"];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=R.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=S.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(Q,\" \")}),h=h.slice(c.length));for(g in d.filter)!(e=W[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?fa.error(a):z(a,i).slice(0)};function qa(a){for(var b=0,c=a.length,d=\"\";c>b;b++)d+=a[b].value;return d}function ra(a,b,c){var d=b.dir,e=c&&\"parentNode\"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||\"*\",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[\" \"],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:\" \"===a[i-2].type?\"*\":\"\"})).replace(Q,\"$1\"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s=\"0\",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG(\"*\",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}return h=fa.compile=function(a,b){var c,d=[],e=[],f=A[a+\" \"];if(!f){b||(b=g(a)),c=b.length;while(c--)f=wa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,xa(e,d)),f.selector=a}return f},i=fa.select=function(a,b,e,f){var i,j,k,l,m,n=\"function\"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&\"ID\"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ba,ca),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=W.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(ba,ca),_.test(j[0].type)&&oa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&qa(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,!b||_.test(a)&&oa(b.parentNode)||b),e},c.sortStable=u.split(\"\").sort(B).join(\"\")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ia(function(a){return 1&a.compareDocumentPosition(n.createElement(\"div\"))}),ia(function(a){return a.innerHTML=\"<a href='#'></a>\",\"#\"===a.firstChild.getAttribute(\"href\")})||ja(\"type|href|height|width\",function(a,b,c){return c?void 0:a.getAttribute(b,\"type\"===b.toLowerCase()?1:2)}),c.attributes&&ia(function(a){return a.innerHTML=\"<input/>\",a.firstChild.setAttribute(\"value\",\"\"),\"\"===a.firstChild.getAttribute(\"value\")})||ja(\"value\",function(a,b,c){return c||\"input\"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ia(function(a){return null==a.getAttribute(\"disabled\")})||ja(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),fa}(a);n.find=t,n.expr=t.selectors,n.expr[\":\"]=n.expr.pseudos,n.uniqueSort=n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},w=n.expr.match.needsContext,x=/^<([\\w-]+)\\s*\\/?>(?:<\\/\\1>|)$/,y=/^.[^:#\\[\\.,]*$/;function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if(\"string\"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return h.call(b,a)>-1!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=this.length,d=[],e=this;if(\"string\"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;c>b;b++)if(n.contains(e[b],this))return!0}));for(b=0;c>b;b++)n.find(a,e[b],d);return d=this.pushStack(c>1?n.unique(d):d),d.selector=this.selector?this.selector+\" \"+a:a,d},filter:function(a){return this.pushStack(z(this,a||[],!1))},not:function(a){return this.pushStack(z(this,a||[],!0))},is:function(a){return!!z(this,\"string\"==typeof a&&w.test(a)?n(a):a||[],!1).length}});var A,B=/^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,C=n.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||A,\"string\"==typeof a){if(e=\"<\"===a[0]&&\">\"===a[a.length-1]&&a.length>=3?[null,a,null]:B.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),x.test(e[1])&&n.isPlainObject(b))for(e in b)n.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&f.parentNode&&(this.length=1,this[0]=f),this.context=d,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?void 0!==c.ready?c.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};C.prototype=n.fn,A=n(d);var D=/^(?:parents|prev(?:Until|All))/,E={children:!0,contents:!0,next:!0,prev:!0};n.fn.extend({has:function(a){var b=n(a,this),c=b.length;return this.filter(function(){for(var a=0;c>a;a++)if(n.contains(this,b[a]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=w.test(a)||\"string\"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.uniqueSort(f):f)},index:function(a){return a?\"string\"==typeof a?h.call(n(a),this[0]):h.call(this,a.jquery?a[0]:a):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.uniqueSort(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function F(a,b){while((a=a[b])&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return u(a,\"parentNode\")},parentsUntil:function(a,b,c){return u(a,\"parentNode\",c)},next:function(a){return F(a,\"nextSibling\")},prev:function(a){return F(a,\"previousSibling\")},nextAll:function(a){return u(a,\"nextSibling\")},prevAll:function(a){return u(a,\"previousSibling\")},nextUntil:function(a,b,c){return u(a,\"nextSibling\",c)},prevUntil:function(a,b,c){return u(a,\"previousSibling\",c)},siblings:function(a){return v((a.parentNode||{}).firstChild,a)},children:function(a){return v(a.firstChild)},contents:function(a){return a.contentDocument||n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return\"Until\"!==a.slice(-5)&&(d=c),d&&\"string\"==typeof d&&(e=n.filter(d,e)),this.length>1&&(E[a]||n.uniqueSort(e),D.test(a)&&e.reverse()),this.pushStack(e)}});var G=/\\S+/g;function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a=\"string\"==typeof a?H(a):n.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:\"\")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function d(b){n.each(b,function(b,c){n.isFunction(c)?a.unique&&j.has(c)||f.push(c):c&&c.length&&\"string\"!==n.type(c)&&d(c)})}(arguments),c&&!b&&i()),this},remove:function(){return n.each(arguments,function(a,b){var c;while((c=n.inArray(b,f,c))>-1)f.splice(c,1),h>=c&&h--}),this},has:function(a){return a?n.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c=\"\",this},disabled:function(){return!f},lock:function(){return e=g=[],c||(f=c=\"\"),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j},n.extend({Deferred:function(a){var b=[[\"resolve\",\"done\",n.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",n.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",n.Callbacks(\"memory\")]],c=\"pending\",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().progress(c.notify).done(c.resolve).fail(c.reject):c[f[0]+\"With\"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+\"With\"](this===e?d:this,arguments),this},e[f[0]+\"With\"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=e.call(arguments),d=c.length,f=1!==d||a&&n.isFunction(a.promise)?d:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(d>1)for(i=new Array(d),j=new Array(d),k=new Array(d);d>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().progress(h(b,j,i)).done(h(b,k,c)).fail(g.reject):--f;return f||g.resolveWith(k,c),g.promise()}});var I;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(I.resolveWith(d,[n]),n.fn.triggerHandler&&(n(d).triggerHandler(\"ready\"),n(d).off(\"ready\"))))}});function J(){d.removeEventListener(\"DOMContentLoaded\",J),a.removeEventListener(\"load\",J),n.ready()}n.ready.promise=function(b){return I||(I=n.Deferred(),\"complete\"===d.readyState||\"loading\"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(n.ready):(d.addEventListener(\"DOMContentLoaded\",J),a.addEventListener(\"load\",J))),I.promise(b)},n.ready.promise();var K=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===n.type(c)){e=!0;for(h in c)K(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},L=function(a){return 1===a.nodeType||9===a.nodeType||!+a.nodeType};function M(){this.expando=n.expando+M.uid++}M.uid=1,M.prototype={register:function(a,b){var c=b||{};return a.nodeType?a[this.expando]=c:Object.defineProperty(a,this.expando,{value:c,writable:!0,configurable:!0}),a[this.expando]},cache:function(a){if(!L(a))return{};var b=a[this.expando];return b||(b={},L(a)&&(a.nodeType?a[this.expando]=b:Object.defineProperty(a,this.expando,{value:b,configurable:!0}))),b},set:function(a,b,c){var d,e=this.cache(a);if(\"string\"==typeof b)e[b]=c;else for(d in b)e[d]=b[d];return e},get:function(a,b){return void 0===b?this.cache(a):a[this.expando]&&a[this.expando][b]},access:function(a,b,c){var d;return void 0===b||b&&\"string\"==typeof b&&void 0===c?(d=this.get(a,b),void 0!==d?d:this.get(a,n.camelCase(b))):(this.set(a,b,c),void 0!==c?c:b)},remove:function(a,b){var c,d,e,f=a[this.expando];if(void 0!==f){if(void 0===b)this.register(a);else{n.isArray(b)?d=b.concat(b.map(n.camelCase)):(e=n.camelCase(b),b in f?d=[b,e]:(d=e,d=d in f?[d]:d.match(G)||[])),c=d.length;while(c--)delete f[d[c]]}(void 0===b||n.isEmptyObject(f))&&(a.nodeType?a[this.expando]=void 0:delete a[this.expando])}},hasData:function(a){var b=a[this.expando];return void 0!==b&&!n.isEmptyObject(b)}};var N=new M,O=new M,P=/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,Q=/[A-Z]/g;function R(a,b,c){var d;if(void 0===c&&1===a.nodeType)if(d=\"data-\"+b.replace(Q,\"-$&\").toLowerCase(),c=a.getAttribute(d),\"string\"==typeof c){try{c=\"true\"===c?!0:\"false\"===c?!1:\"null\"===c?null:+c+\"\"===c?+c:P.test(c)?n.parseJSON(c):c;\r\n}catch(e){}O.set(a,b,c)}else c=void 0;return c}n.extend({hasData:function(a){return O.hasData(a)||N.hasData(a)},data:function(a,b,c){return O.access(a,b,c)},removeData:function(a,b){O.remove(a,b)},_data:function(a,b,c){return N.access(a,b,c)},_removeData:function(a,b){N.remove(a,b)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=O.get(f),1===f.nodeType&&!N.get(f,\"hasDataAttrs\"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf(\"data-\")&&(d=n.camelCase(d.slice(5)),R(f,d,e[d])));N.set(f,\"hasDataAttrs\",!0)}return e}return\"object\"==typeof a?this.each(function(){O.set(this,a)}):K(this,function(b){var c,d;if(f&&void 0===b){if(c=O.get(f,a)||O.get(f,a.replace(Q,\"-$&\").toLowerCase()),void 0!==c)return c;if(d=n.camelCase(a),c=O.get(f,d),void 0!==c)return c;if(c=R(f,d,void 0),void 0!==c)return c}else d=n.camelCase(a),this.each(function(){var c=O.get(this,d);O.set(this,d,b),a.indexOf(\"-\")>-1&&void 0!==c&&O.set(this,a,b)})},null,b,arguments.length>1,null,!0)},removeData:function(a){return this.each(function(){O.remove(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||\"fx\")+\"queue\",d=N.get(a,b),c&&(!d||n.isArray(c)?d=N.access(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||\"fx\";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return N.get(a,c)||N.access(a,c,{empty:n.Callbacks(\"once memory\").add(function(){N.remove(a,[b+\"queue\",c])})})}}),n.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),\"fx\"===a&&\"inprogress\"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||\"fx\",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};\"string\"!=typeof a&&(b=a,a=void 0),a=a||\"fx\";while(g--)c=N.get(f[g],a+\"queueHooks\"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var S=/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,T=new RegExp(\"^(?:([+-])=|)(\"+S+\")([a-z%]*)$\",\"i\"),U=[\"Top\",\"Right\",\"Bottom\",\"Left\"],V=function(a,b){return a=b||a,\"none\"===n.css(a,\"display\")||!n.contains(a.ownerDocument,a)};function W(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,\"\")},i=h(),j=c&&c[3]||(n.cssNumber[b]?\"\":\"px\"),k=(n.cssNumber[b]||\"px\"!==j&&+i)&&T.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||\".5\",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}var X=/^(?:checkbox|radio)$/i,Y=/<([\\w:-]+)/,Z=/^$|\\/(?:java|ecma)script/i,$={option:[1,\"<select multiple='multiple'>\",\"</select>\"],thead:[1,\"<table>\",\"</table>\"],col:[2,\"<table><colgroup>\",\"</colgroup></table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],_default:[0,\"\",\"\"]};$.optgroup=$.option,$.tbody=$.tfoot=$.colgroup=$.caption=$.thead,$.th=$.td;function _(a,b){var c=\"undefined\"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||\"*\"):\"undefined\"!=typeof a.querySelectorAll?a.querySelectorAll(b||\"*\"):[];return void 0===b||b&&n.nodeName(a,b)?n.merge([a],c):c}function aa(a,b){for(var c=0,d=a.length;d>c;c++)N.set(a[c],\"globalEval\",!b||N.get(b[c],\"globalEval\"))}var ba=/<|&#?\\w+;/;function ca(a,b,c,d,e){for(var f,g,h,i,j,k,l=b.createDocumentFragment(),m=[],o=0,p=a.length;p>o;o++)if(f=a[o],f||0===f)if(\"object\"===n.type(f))n.merge(m,f.nodeType?[f]:f);else if(ba.test(f)){g=g||l.appendChild(b.createElement(\"div\")),h=(Y.exec(f)||[\"\",\"\"])[1].toLowerCase(),i=$[h]||$._default,g.innerHTML=i[1]+n.htmlPrefilter(f)+i[2],k=i[0];while(k--)g=g.lastChild;n.merge(m,g.childNodes),g=l.firstChild,g.textContent=\"\"}else m.push(b.createTextNode(f));l.textContent=\"\",o=0;while(f=m[o++])if(d&&n.inArray(f,d)>-1)e&&e.push(f);else if(j=n.contains(f.ownerDocument,f),g=_(l.appendChild(f),\"script\"),j&&aa(g),c){k=0;while(f=g[k++])Z.test(f.type||\"\")&&c.push(f)}return l}!function(){var a=d.createDocumentFragment(),b=a.appendChild(d.createElement(\"div\")),c=d.createElement(\"input\");c.setAttribute(\"type\",\"radio\"),c.setAttribute(\"checked\",\"checked\"),c.setAttribute(\"name\",\"t\"),b.appendChild(c),l.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,b.innerHTML=\"<textarea>x</textarea>\",l.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue}();var da=/^key/,ea=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,fa=/^([^.]*)(?:\\.(.+)|)/;function ga(){return!0}function ha(){return!1}function ia(){try{return d.activeElement}catch(a){}}function ja(a,b,c,d,e,f){var g,h;if(\"object\"==typeof b){\"string\"!=typeof c&&(d=d||c,c=void 0);for(h in b)ja(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&(\"string\"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=ha;else if(!e)return a;return 1===f&&(g=e,e=function(a){return n().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=n.guid++)),a.each(function(){n.event.add(this,b,e,d,c)})}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=N.get(a);if(r){c.handler&&(f=c,c=f.handler,e=f.selector),c.guid||(c.guid=n.guid++),(i=r.events)||(i=r.events={}),(g=r.handle)||(g=r.handle=function(b){return\"undefined\"!=typeof n&&n.event.triggered!==b.type?n.event.dispatch.apply(a,arguments):void 0}),b=(b||\"\").match(G)||[\"\"],j=b.length;while(j--)h=fa.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o&&(l=n.event.special[o]||{},o=(e?l.delegateType:l.bindType)||o,l=n.event.special[o]||{},k=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(\".\")},f),(m=i[o])||(m=i[o]=[],m.delegateCount=0,l.setup&&l.setup.call(a,d,p,g)!==!1||a.addEventListener&&a.addEventListener(o,g)),l.add&&(l.add.call(a,k),k.handler.guid||(k.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,k):m.push(k),n.event.global[o]=!0)}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=N.hasData(a)&&N.get(a);if(r&&(i=r.events)){b=(b||\"\").match(G)||[\"\"],j=b.length;while(j--)if(h=fa.exec(b[j])||[],o=q=h[1],p=(h[2]||\"\").split(\".\").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=i[o]||[],h=h[2]&&new RegExp(\"(^|\\\\.)\"+p.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"),g=f=m.length;while(f--)k=m[f],!e&&q!==k.origType||c&&c.guid!==k.guid||h&&!h.test(k.namespace)||d&&d!==k.selector&&(\"**\"!==d||!k.selector)||(m.splice(f,1),k.selector&&m.delegateCount--,l.remove&&l.remove.call(a,k));g&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete i[o])}else for(o in i)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(i)&&N.remove(a,\"handle events\")}},dispatch:function(a){a=n.event.fix(a);var b,c,d,f,g,h=[],i=e.call(arguments),j=(N.get(this,\"events\")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())a.rnamespace&&!a.rnamespace.test(g.namespace)||(a.handleObj=g,a.data=g.data,d=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==d&&(a.result=d)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(\"click\"!==a.type||isNaN(a.button)||a.button<1))for(;i!==this;i=i.parentNode||this)if(1===i.nodeType&&(i.disabled!==!0||\"click\"!==a.type)){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+\" \",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>-1:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},props:\"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),fixHooks:{},keyHooks:{props:\"char charCode key keyCode\".split(\" \"),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),filter:function(a,b){var c,e,f,g=b.button;return null==a.pageX&&null!=b.clientX&&(c=a.target.ownerDocument||d,e=c.documentElement,f=c.body,a.pageX=b.clientX+(e&&e.scrollLeft||f&&f.scrollLeft||0)-(e&&e.clientLeft||f&&f.clientLeft||0),a.pageY=b.clientY+(e&&e.scrollTop||f&&f.scrollTop||0)-(e&&e.clientTop||f&&f.clientTop||0)),a.which||void 0===g||(a.which=1&g?1:2&g?3:4&g?2:0),a}},fix:function(a){if(a[n.expando])return a;var b,c,e,f=a.type,g=a,h=this.fixHooks[f];h||(this.fixHooks[f]=h=ea.test(f)?this.mouseHooks:da.test(f)?this.keyHooks:{}),e=h.props?this.props.concat(h.props):this.props,a=new n.Event(g),b=e.length;while(b--)c=e[b],a[c]=g[c];return a.target||(a.target=d),3===a.target.nodeType&&(a.target=a.target.parentNode),h.filter?h.filter(a,g):a},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==ia()&&this.focus?(this.focus(),!1):void 0},delegateType:\"focusin\"},blur:{trigger:function(){return this===ia()&&this.blur?(this.blur(),!1):void 0},delegateType:\"focusout\"},click:{trigger:function(){return\"checkbox\"===this.type&&this.click&&n.nodeName(this,\"input\")?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,\"a\")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}}},n.removeEvent=function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?ga:ha):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={constructor:n.Event,isDefaultPrevented:ha,isPropagationStopped:ha,isImmediatePropagationStopped:ha,isSimulated:!1,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=ga,a&&!this.isSimulated&&a.preventDefault()},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=ga,a&&!this.isSimulated&&a.stopPropagation()},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=ga,a&&!this.isSimulated&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\",pointerenter:\"pointerover\",pointerleave:\"pointerout\"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||n.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),n.fn.extend({on:function(a,b,c,d){return ja(this,a,b,c,d)},one:function(a,b,c,d){return ja(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+\".\"+d.namespace:d.origType,d.selector,d.handler),this;if(\"object\"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return b!==!1&&\"function\"!=typeof b||(c=b,b=void 0),c===!1&&(c=ha),this.each(function(){n.event.remove(this,a,c,b)})}});var ka=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:-]+)[^>]*)\\/>/gi,la=/<script|<style|<link/i,ma=/checked\\s*(?:[^=]|=\\s*.checked.)/i,na=/^true\\/(.*)/,oa=/^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;function pa(a,b){return n.nodeName(a,\"table\")&&n.nodeName(11!==b.nodeType?b:b.firstChild,\"tr\")?a.getElementsByTagName(\"tbody\")[0]||a.appendChild(a.ownerDocument.createElement(\"tbody\")):a}function qa(a){return a.type=(null!==a.getAttribute(\"type\"))+\"/\"+a.type,a}function ra(a){var b=na.exec(a.type);return b?a.type=b[1]:a.removeAttribute(\"type\"),a}function sa(a,b){var c,d,e,f,g,h,i,j;if(1===b.nodeType){if(N.hasData(a)&&(f=N.access(a),g=N.set(b,f),j=f.events)){delete g.handle,g.events={};for(e in j)for(c=0,d=j[e].length;d>c;c++)n.event.add(b,e,j[e][c])}O.hasData(a)&&(h=O.access(a),i=n.extend({},h),O.set(b,i))}}function ta(a,b){var c=b.nodeName.toLowerCase();\"input\"===c&&X.test(a.type)?b.checked=a.checked:\"input\"!==c&&\"textarea\"!==c||(b.defaultValue=a.defaultValue)}function ua(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&\"string\"==typeof q&&!l.checkClone&&ma.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),ua(f,b,c,d)});if(o&&(e=ca(b,a[0].ownerDocument,!1,a,d),g=e.firstChild,1===e.childNodes.length&&(e=g),g||d)){for(h=n.map(_(e,\"script\"),qa),i=h.length;o>m;m++)j=e,m!==p&&(j=n.clone(j,!0,!0),i&&n.merge(h,_(j,\"script\"))),c.call(a[m],j,m);if(i)for(k=h[h.length-1].ownerDocument,n.map(h,ra),m=0;i>m;m++)j=h[m],Z.test(j.type||\"\")&&!N.access(j,\"globalEval\")&&n.contains(k,j)&&(j.src?n._evalUrl&&n._evalUrl(j.src):n.globalEval(j.textContent.replace(oa,\"\")))}return a}function va(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(_(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&aa(_(d,\"script\")),d.parentNode.removeChild(d));return a}n.extend({htmlPrefilter:function(a){return a.replace(ka,\"<$1></$2>\")},clone:function(a,b,c){var d,e,f,g,h=a.cloneNode(!0),i=n.contains(a.ownerDocument,a);if(!(l.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(g=_(h),f=_(a),d=0,e=f.length;e>d;d++)ta(f[d],g[d]);if(b)if(c)for(f=f||_(a),g=g||_(h),d=0,e=f.length;e>d;d++)sa(f[d],g[d]);else sa(a,h);return g=_(h,\"script\"),g.length>0&&aa(g,!i&&_(a,\"script\")),h},cleanData:function(a){for(var b,c,d,e=n.event.special,f=0;void 0!==(c=a[f]);f++)if(L(c)){if(b=c[N.expando]){if(b.events)for(d in b.events)e[d]?n.event.remove(c,d):n.removeEvent(c,d,b.handle);c[N.expando]=void 0}c[O.expando]&&(c[O.expando]=void 0)}}}),n.fn.extend({domManip:ua,detach:function(a){return va(this,a,!0)},remove:function(a){return va(this,a)},text:function(a){return K(this,function(a){return void 0===a?n.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=a)})},null,a,arguments.length)},append:function(){return ua(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=pa(this,a);b.appendChild(a)}})},prepend:function(){return ua(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=pa(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return ua(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return ua(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++)1===a.nodeType&&(n.cleanData(_(a,!1)),a.textContent=\"\");return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return K(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a&&1===b.nodeType)return b.innerHTML;if(\"string\"==typeof a&&!la.test(a)&&!$[(Y.exec(a)||[\"\",\"\"])[1].toLowerCase()]){a=n.htmlPrefilter(a);try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(_(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return ua(this,arguments,function(b){var c=this.parentNode;n.inArray(this,a)<0&&(n.cleanData(_(this)),c&&c.replaceChild(b,this))},a)}}),n.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(a,b){n.fn[a]=function(a){for(var c,d=[],e=n(a),f=e.length-1,h=0;f>=h;h++)c=h===f?this:this.clone(!0),n(e[h])[b](c),g.apply(d,c.get());return this.pushStack(d)}});var wa,xa={HTML:\"block\",BODY:\"block\"};function ya(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],\"display\");return c.detach(),d}function za(a){var b=d,c=xa[a];return c||(c=ya(a,b),\"none\"!==c&&c||(wa=(wa||n(\"<iframe frameborder='0' width='0' height='0'/>\")).appendTo(b.documentElement),b=wa[0].contentDocument,b.write(),b.close(),c=ya(a,b),wa.detach()),xa[a]=c),c}var Aa=/^margin/,Ba=new RegExp(\"^(\"+S+\")(?!px)[a-z%]+$\",\"i\"),Ca=function(b){var c=b.ownerDocument.defaultView;return c&&c.opener||(c=a),c.getComputedStyle(b)},Da=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e},Ea=d.documentElement;!function(){var b,c,e,f,g=d.createElement(\"div\"),h=d.createElement(\"div\");if(h.style){h.style.backgroundClip=\"content-box\",h.cloneNode(!0).style.backgroundClip=\"\",l.clearCloneStyle=\"content-box\"===h.style.backgroundClip,g.style.cssText=\"border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute\",g.appendChild(h);function i(){h.style.cssText=\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%\",h.innerHTML=\"\",Ea.appendChild(g);var d=a.getComputedStyle(h);b=\"1%\"!==d.top,f=\"2px\"===d.marginLeft,c=\"4px\"===d.width,h.style.marginRight=\"50%\",e=\"4px\"===d.marginRight,Ea.removeChild(g)}n.extend(l,{pixelPosition:function(){return i(),b},boxSizingReliable:function(){return null==c&&i(),c},pixelMarginRight:function(){return null==c&&i(),e},reliableMarginLeft:function(){return null==c&&i(),f},reliableMarginRight:function(){var b,c=h.appendChild(d.createElement(\"div\"));return c.style.cssText=h.style.cssText=\"-webkit-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0\",c.style.marginRight=c.style.width=\"0\",h.style.width=\"1px\",Ea.appendChild(g),b=!parseFloat(a.getComputedStyle(c).marginRight),Ea.removeChild(g),h.removeChild(c),b}})}}();function Fa(a,b,c){var d,e,f,g,h=a.style;return c=c||Ca(a),g=c?c.getPropertyValue(b)||c[b]:void 0,\"\"!==g&&void 0!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),c&&!l.pixelMarginRight()&&Ba.test(g)&&Aa.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f),void 0!==g?g+\"\":g}function Ga(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}var Ha=/^(none|table(?!-c[ea]).+)/,Ia={position:\"absolute\",visibility:\"hidden\",display:\"block\"},Ja={letterSpacing:\"0\",fontWeight:\"400\"},Ka=[\"Webkit\",\"O\",\"Moz\",\"ms\"],La=d.createElement(\"div\").style;function Ma(a){if(a in La)return a;var b=a[0].toUpperCase()+a.slice(1),c=Ka.length;while(c--)if(a=Ka[c]+b,a in La)return a}function Na(a,b,c){var d=T.exec(b);return d?Math.max(0,d[2]-(c||0))+(d[3]||\"px\"):b}function Oa(a,b,c,d,e){for(var f=c===(d?\"border\":\"content\")?4:\"width\"===b?1:0,g=0;4>f;f+=2)\"margin\"===c&&(g+=n.css(a,c+U[f],!0,e)),d?(\"content\"===c&&(g-=n.css(a,\"padding\"+U[f],!0,e)),\"margin\"!==c&&(g-=n.css(a,\"border\"+U[f]+\"Width\",!0,e))):(g+=n.css(a,\"padding\"+U[f],!0,e),\"padding\"!==c&&(g+=n.css(a,\"border\"+U[f]+\"Width\",!0,e)));return g}function Pa(a,b,c){var d=!0,e=\"width\"===b?a.offsetWidth:a.offsetHeight,f=Ca(a),g=\"border-box\"===n.css(a,\"boxSizing\",!1,f);if(0>=e||null==e){if(e=Fa(a,b,f),(0>e||null==e)&&(e=a.style[b]),Ba.test(e))return e;d=g&&(l.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Oa(a,b,c||(g?\"border\":\"content\"),d,f)+\"px\"}function Qa(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=N.get(d,\"olddisplay\"),c=d.style.display,b?(f[g]||\"none\"!==c||(d.style.display=\"\"),\"\"===d.style.display&&V(d)&&(f[g]=N.access(d,\"olddisplay\",za(d.nodeName)))):(e=V(d),\"none\"===c&&e||N.set(d,\"olddisplay\",e?c:n.css(d,\"display\"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&\"none\"!==d.style.display&&\"\"!==d.style.display||(d.style.display=b?f[g]||\"\":\"none\"));return a}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Fa(a,\"opacity\");return\"\"===c?\"1\":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{\"float\":\"cssFloat\"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;return b=n.cssProps[h]||(n.cssProps[h]=Ma(h)||h),g=n.cssHooks[b]||n.cssHooks[h],void 0===c?g&&\"get\"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b]:(f=typeof c,\"string\"===f&&(e=T.exec(c))&&e[1]&&(c=W(a,b,e),f=\"number\"),null!=c&&c===c&&(\"number\"===f&&(c+=e&&e[3]||(n.cssNumber[h]?\"\":\"px\")),l.clearCloneStyle||\"\"!==c||0!==b.indexOf(\"background\")||(i[b]=\"inherit\"),g&&\"set\"in g&&void 0===(c=g.set(a,c,d))||(i[b]=c)),void 0)}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=Ma(h)||h),g=n.cssHooks[b]||n.cssHooks[h],g&&\"get\"in g&&(e=g.get(a,!0,c)),void 0===e&&(e=Fa(a,b,d)),\"normal\"===e&&b in Ja&&(e=Ja[b]),\"\"===c||c?(f=parseFloat(e),c===!0||isFinite(f)?f||0:e):e}}),n.each([\"height\",\"width\"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?Ha.test(n.css(a,\"display\"))&&0===a.offsetWidth?Da(a,Ia,function(){return Pa(a,b,d)}):Pa(a,b,d):void 0},set:function(a,c,d){var e,f=d&&Ca(a),g=d&&Oa(a,b,d,\"border-box\"===n.css(a,\"boxSizing\",!1,f),f);return g&&(e=T.exec(c))&&\"px\"!==(e[3]||\"px\")&&(a.style[b]=c,c=n.css(a,b)),Na(a,c,g)}}}),n.cssHooks.marginLeft=Ga(l.reliableMarginLeft,function(a,b){return b?(parseFloat(Fa(a,\"marginLeft\"))||a.getBoundingClientRect().left-Da(a,{marginLeft:0},function(){return a.getBoundingClientRect().left}))+\"px\":void 0}),n.cssHooks.marginRight=Ga(l.reliableMarginRight,function(a,b){return b?Da(a,{display:\"inline-block\"},Fa,[a,\"marginRight\"]):void 0}),n.each({margin:\"\",padding:\"\",border:\"Width\"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f=\"string\"==typeof c?c.split(\" \"):[c];4>d;d++)e[a+U[d]+b]=f[d]||f[d-2]||f[0];return e}},Aa.test(a)||(n.cssHooks[a+b].set=Na)}),n.fn.extend({css:function(a,b){return K(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=Ca(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return Qa(this,!0)},hide:function(){return Qa(this)},toggle:function(a){return\"boolean\"==typeof a?a?this.show():this.hide():this.each(function(){V(this)?n(this).show():n(this).hide()})}});function Ra(a,b,c,d,e){return new Ra.prototype.init(a,b,c,d,e)}n.Tween=Ra,Ra.prototype={constructor:Ra,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||n.easing._default,this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?\"\":\"px\")},cur:function(){var a=Ra.propHooks[this.prop];return a&&a.get?a.get(this):Ra.propHooks._default.get(this)},run:function(a){var b,c=Ra.propHooks[this.prop];return this.options.duration?this.pos=b=n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Ra.propHooks._default.set(this),this}},Ra.prototype.init.prototype=Ra.prototype,Ra.propHooks={_default:{get:function(a){var b;return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(b=n.css(a.elem,a.prop,\"\"),b&&\"auto\"!==b?b:0)},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):1!==a.elem.nodeType||null==a.elem.style[n.cssProps[a.prop]]&&!n.cssHooks[a.prop]?a.elem[a.prop]=a.now:n.style(a.elem,a.prop,a.now+a.unit)}}},Ra.propHooks.scrollTop=Ra.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:\"swing\"},n.fx=Ra.prototype.init,n.fx.step={};var Sa,Ta,Ua=/^(?:toggle|show|hide)$/,Va=/queueHooks$/;function Wa(){return a.setTimeout(function(){Sa=void 0}),Sa=n.now()}function Xa(a,b){var c,d=0,e={height:a};for(b=b?1:0;4>d;d+=2-b)c=U[d],e[\"margin\"+c]=e[\"padding\"+c]=a;return b&&(e.opacity=e.width=a),e}function Ya(a,b,c){for(var d,e=(_a.tweeners[b]||[]).concat(_a.tweeners[\"*\"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function Za(a,b,c){var d,e,f,g,h,i,j,k,l=this,m={},o=a.style,p=a.nodeType&&V(a),q=N.get(a,\"fxshow\");c.queue||(h=n._queueHooks(a,\"fx\"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,l.always(function(){l.always(function(){h.unqueued--,n.queue(a,\"fx\").length||h.empty.fire()})})),1===a.nodeType&&(\"height\"in b||\"width\"in b)&&(c.overflow=[o.overflow,o.overflowX,o.overflowY],j=n.css(a,\"display\"),k=\"none\"===j?N.get(a,\"olddisplay\")||za(a.nodeName):j,\"inline\"===k&&\"none\"===n.css(a,\"float\")&&(o.display=\"inline-block\")),c.overflow&&(o.overflow=\"hidden\",l.always(function(){o.overflow=c.overflow[0],o.overflowX=c.overflow[1],o.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],Ua.exec(e)){if(delete b[d],f=f||\"toggle\"===e,e===(p?\"hide\":\"show\")){if(\"show\"!==e||!q||void 0===q[d])continue;p=!0}m[d]=q&&q[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(m))\"inline\"===(\"none\"===j?za(a.nodeName):j)&&(o.display=j);else{q?\"hidden\"in q&&(p=q.hidden):q=N.access(a,\"fxshow\",{}),f&&(q.hidden=!p),p?n(a).show():l.done(function(){n(a).hide()}),l.done(function(){var b;N.remove(a,\"fxshow\");for(b in m)n.style(a,b,m[b])});for(d in m)g=Ya(p?q[d]:0,d,l),d in q||(q[d]=g.start,p&&(g.end=g.start,g.start=\"width\"===d||\"height\"===d?1:0))}}function $a(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&\"expand\"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function _a(a,b,c){var d,e,f=0,g=_a.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=Sa||Wa(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:Sa||Wa(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for($a(k,j.opts.specialEasing);g>f;f++)if(d=_a.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,Ya,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(_a,{tweeners:{\"*\":[function(a,b){var c=this.createTween(a,b);return W(c.elem,a,T.exec(b),c),c}]},tweener:function(a,b){n.isFunction(a)?(b=a,a=[\"*\"]):a=a.match(G);for(var c,d=0,e=a.length;e>d;d++)c=a[d],_a.tweeners[c]=_a.tweeners[c]||[],_a.tweeners[c].unshift(b)},prefilters:[Za],prefilter:function(a,b){b?_a.prefilters.unshift(a):_a.prefilters.push(a)}}),n.speed=function(a,b,c){var d=a&&\"object\"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:\"number\"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,null!=d.queue&&d.queue!==!0||(d.queue=\"fx\"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(V).css(\"opacity\",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=_a(this,n.extend({},a),f);(e||N.get(this,\"finish\"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return\"string\"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||\"fx\",[]),this.each(function(){var b=!0,e=null!=a&&a+\"queueHooks\",f=n.timers,g=N.get(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&Va.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));!b&&c||n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||\"fx\"),this.each(function(){var b,c=N.get(this),d=c[a+\"queue\"],e=c[a+\"queueHooks\"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each([\"toggle\",\"show\",\"hide\"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||\"boolean\"==typeof a?c.apply(this,arguments):this.animate(Xa(b,!0),a,d,e)}}),n.each({slideDown:Xa(\"show\"),slideUp:Xa(\"hide\"),slideToggle:Xa(\"toggle\"),fadeIn:{opacity:\"show\"},fadeOut:{opacity:\"hide\"},fadeToggle:{opacity:\"toggle\"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=0,c=n.timers;for(Sa=n.now();b<c.length;b++)a=c[b],a()||c[b]!==a||c.splice(b--,1);c.length||n.fx.stop(),Sa=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){Ta||(Ta=a.setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){a.clearInterval(Ta),Ta=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(b,c){return b=n.fx?n.fx.speeds[b]||b:b,c=c||\"fx\",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a=d.createElement(\"input\"),b=d.createElement(\"select\"),c=b.appendChild(d.createElement(\"option\"));a.type=\"checkbox\",l.checkOn=\"\"!==a.value,l.optSelected=c.selected,b.disabled=!0,l.optDisabled=!c.disabled,a=d.createElement(\"input\"),a.value=\"t\",a.type=\"radio\",l.radioValue=\"t\"===a.value}();var ab,bb=n.expr.attrHandle;n.fn.extend({attr:function(a,b){return K(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return\"undefined\"==typeof a.getAttribute?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),e=n.attrHooks[b]||(n.expr.match.bool.test(b)?ab:void 0)),void 0!==c?null===c?void n.removeAttr(a,b):e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+\"\"),c):e&&\"get\"in e&&null!==(d=e.get(a,b))?d:(d=n.find.attr(a,b),null==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!l.radioValue&&\"radio\"===b&&n.nodeName(a,\"input\")){var c=a.value;return a.setAttribute(\"type\",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(G);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)&&(a[d]=!1),a.removeAttribute(c)}}),ab={set:function(a,b,c){return b===!1?n.removeAttr(a,c):a.setAttribute(c,c),c}},n.each(n.expr.match.bool.source.match(/\\w+/g),function(a,b){var c=bb[b]||n.find.attr;bb[b]=function(a,b,d){var e,f;return d||(f=bb[b],bb[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,bb[b]=f),e}});var cb=/^(?:input|select|textarea|button)$/i,db=/^(?:a|area)$/i;n.fn.extend({prop:function(a,b){return K(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return this.each(function(){delete this[n.propFix[a]||a]})}}),n.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&n.isXMLDoc(a)||(b=n.propFix[b]||b,e=n.propHooks[b]),\r\nvoid 0!==c?e&&\"set\"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&\"get\"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=n.find.attr(a,\"tabindex\");return b?parseInt(b,10):cb.test(a.nodeName)||db.test(a.nodeName)&&a.href?0:-1}}},propFix:{\"for\":\"htmlFor\",\"class\":\"className\"}}),l.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&b.parentNode&&b.parentNode.selectedIndex,null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),n.each([\"tabIndex\",\"readOnly\",\"maxLength\",\"cellSpacing\",\"cellPadding\",\"rowSpan\",\"colSpan\",\"useMap\",\"frameBorder\",\"contentEditable\"],function(){n.propFix[this.toLowerCase()]=this});var eb=/[\\t\\r\\n\\f]/g;function fb(a){return a.getAttribute&&a.getAttribute(\"class\")||\"\"}n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,fb(this)))});if(\"string\"==typeof a&&a){b=a.match(G)||[];while(c=this[i++])if(e=fb(c),d=1===c.nodeType&&(\" \"+e+\" \").replace(eb,\" \")){g=0;while(f=b[g++])d.indexOf(\" \"+f+\" \")<0&&(d+=f+\" \");h=n.trim(d),e!==h&&c.setAttribute(\"class\",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,fb(this)))});if(!arguments.length)return this.attr(\"class\",\"\");if(\"string\"==typeof a&&a){b=a.match(G)||[];while(c=this[i++])if(e=fb(c),d=1===c.nodeType&&(\" \"+e+\" \").replace(eb,\" \")){g=0;while(f=b[g++])while(d.indexOf(\" \"+f+\" \")>-1)d=d.replace(\" \"+f+\" \",\" \");h=n.trim(d),e!==h&&c.setAttribute(\"class\",h)}}return this},toggleClass:function(a,b){var c=typeof a;return\"boolean\"==typeof b&&\"string\"===c?b?this.addClass(a):this.removeClass(a):n.isFunction(a)?this.each(function(c){n(this).toggleClass(a.call(this,c,fb(this),b),b)}):this.each(function(){var b,d,e,f;if(\"string\"===c){d=0,e=n(this),f=a.match(G)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&\"boolean\"!==c||(b=fb(this),b&&N.set(this,\"__className__\",b),this.setAttribute&&this.setAttribute(\"class\",b||a===!1?\"\":N.get(this,\"__className__\")||\"\"))})},hasClass:function(a){var b,c,d=0;b=\" \"+a+\" \";while(c=this[d++])if(1===c.nodeType&&(\" \"+fb(c)+\" \").replace(eb,\" \").indexOf(b)>-1)return!0;return!1}});var gb=/\\r/g,hb=/[\\x20\\t\\r\\n\\f]+/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e=\"\":\"number\"==typeof e?e+=\"\":n.isArray(e)&&(e=n.map(e,function(a){return null==a?\"\":a+\"\"})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&\"set\"in b&&void 0!==b.set(this,e,\"value\")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&\"get\"in b&&void 0!==(c=b.get(e,\"value\"))?c:(c=e.value,\"string\"==typeof c?c.replace(gb,\"\"):null==c?\"\":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,\"value\");return null!=b?b:n.trim(n.text(a)).replace(hb,\" \")}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f=\"select-one\"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],(c.selected||i===e)&&(l.optDisabled?!c.disabled:null===c.getAttribute(\"disabled\"))&&(!c.parentNode.disabled||!n.nodeName(c.parentNode,\"optgroup\"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)d=e[g],(d.selected=n.inArray(n.valHooks.option.get(d),f)>-1)&&(c=!0);return c||(a.selectedIndex=-1),f}}}}),n.each([\"radio\",\"checkbox\"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>-1:void 0}},l.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute(\"value\")?\"on\":a.value})});var ib=/^(?:focusinfocus|focusoutblur)$/;n.extend(n.event,{trigger:function(b,c,e,f){var g,h,i,j,l,m,o,p=[e||d],q=k.call(b,\"type\")?b.type:b,r=k.call(b,\"namespace\")?b.namespace.split(\".\"):[];if(h=i=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!ib.test(q+n.event.triggered)&&(q.indexOf(\".\")>-1&&(r=q.split(\".\"),q=r.shift(),r.sort()),l=q.indexOf(\":\")<0&&\"on\"+q,b=b[n.expando]?b:new n.Event(q,\"object\"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=r.join(\".\"),b.rnamespace=b.namespace?new RegExp(\"(^|\\\\.)\"+r.join(\"\\\\.(?:.*\\\\.|)\")+\"(\\\\.|$)\"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:n.makeArray(c,[b]),o=n.event.special[q]||{},f||!o.trigger||o.trigger.apply(e,c)!==!1)){if(!f&&!o.noBubble&&!n.isWindow(e)){for(j=o.delegateType||q,ib.test(j+q)||(h=h.parentNode);h;h=h.parentNode)p.push(h),i=h;i===(e.ownerDocument||d)&&p.push(i.defaultView||i.parentWindow||a)}g=0;while((h=p[g++])&&!b.isPropagationStopped())b.type=g>1?j:o.bindType||q,m=(N.get(h,\"events\")||{})[b.type]&&N.get(h,\"handle\"),m&&m.apply(h,c),m=l&&h[l],m&&m.apply&&L(h)&&(b.result=m.apply(h,c),b.result===!1&&b.preventDefault());return b.type=q,f||b.isDefaultPrevented()||o._default&&o._default.apply(p.pop(),c)!==!1||!L(e)||l&&n.isFunction(e[q])&&!n.isWindow(e)&&(i=e[l],i&&(e[l]=null),n.event.triggered=q,e[q](),n.event.triggered=void 0,i&&(e[l]=i)),b.result}},simulate:function(a,b,c){var d=n.extend(new n.Event,c,{type:a,isSimulated:!0});n.event.trigger(d,null,b)}}),n.fn.extend({trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}}),n.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),l.focusin=\"onfocusin\"in a,l.focusin||n.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a))};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=N.access(d,b);e||d.addEventListener(a,c,!0),N.access(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=N.access(d,b)-1;e?N.access(d,b,e):(d.removeEventListener(a,c,!0),N.remove(d,b))}}});var jb=a.location,kb=n.now(),lb=/\\?/;n.parseJSON=function(a){return JSON.parse(a+\"\")},n.parseXML=function(b){var c;if(!b||\"string\"!=typeof b)return null;try{c=(new a.DOMParser).parseFromString(b,\"text/xml\")}catch(d){c=void 0}return c&&!c.getElementsByTagName(\"parsererror\").length||n.error(\"Invalid XML: \"+b),c};var mb=/#.*$/,nb=/([?&])_=[^&]*/,ob=/^(.*?):[ \\t]*([^\\r\\n]*)$/gm,pb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,qb=/^(?:GET|HEAD)$/,rb=/^\\/\\//,sb={},tb={},ub=\"*/\".concat(\"*\"),vb=d.createElement(\"a\");vb.href=jb.href;function wb(a){return function(b,c){\"string\"!=typeof b&&(c=b,b=\"*\");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])\"+\"===d[0]?(d=d.slice(1)||\"*\",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function xb(a,b,c,d){var e={},f=a===tb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return\"string\"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e[\"*\"]&&g(\"*\")}function yb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(c in b)void 0!==b[c]&&((e[c]?a:d||(d={}))[c]=b[c]);return d&&n.extend(!0,a,d),a}function zb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while(\"*\"===i[0])i.shift(),void 0===d&&(d=a.mimeType||b.getResponseHeader(\"Content-Type\"));if(d)for(e in h)if(h[e]&&h[e].test(d)){i.unshift(e);break}if(i[0]in c)f=i[0];else{for(e in c){if(!i[0]||a.converters[e+\" \"+i[0]]){f=e;break}g||(g=e)}f=f||g}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function Ab(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if(\"*\"===f)f=i;else if(\"*\"!==i&&i!==f){if(g=j[i+\" \"+f]||j[\"* \"+f],!g)for(e in j)if(h=e.split(\" \"),h[1]===f&&(g=j[i+\" \"+h[0]]||j[\"* \"+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a[\"throws\"])b=g(b);else try{b=g(b)}catch(l){return{state:\"parsererror\",error:g?l:\"No conversion from \"+i+\" to \"+f}}}return{state:\"success\",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:jb.href,type:\"GET\",isLocal:pb.test(jb.protocol),global:!0,processData:!0,async:!0,contentType:\"application/x-www-form-urlencoded; charset=UTF-8\",accepts:{\"*\":ub,text:\"text/plain\",html:\"text/html\",xml:\"application/xml, text/xml\",json:\"application/json, text/javascript\"},contents:{xml:/\\bxml\\b/,html:/\\bhtml/,json:/\\bjson\\b/},responseFields:{xml:\"responseXML\",text:\"responseText\",json:\"responseJSON\"},converters:{\"* text\":String,\"text html\":!0,\"text json\":n.parseJSON,\"text xml\":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?yb(yb(a,n.ajaxSettings),b):yb(n.ajaxSettings,a)},ajaxPrefilter:wb(sb),ajaxTransport:wb(tb),ajax:function(b,c){\"object\"==typeof b&&(c=b,b=void 0),c=c||{};var e,f,g,h,i,j,k,l,m=n.ajaxSetup({},c),o=m.context||m,p=m.context&&(o.nodeType||o.jquery)?n(o):n.event,q=n.Deferred(),r=n.Callbacks(\"once memory\"),s=m.statusCode||{},t={},u={},v=0,w=\"canceled\",x={readyState:0,getResponseHeader:function(a){var b;if(2===v){if(!h){h={};while(b=ob.exec(g))h[b[1].toLowerCase()]=b[2]}b=h[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===v?g:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return v||(a=u[c]=u[c]||a,t[a]=b),this},overrideMimeType:function(a){return v||(m.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>v)for(b in a)s[b]=[s[b],a[b]];else x.always(a[x.status]);return this},abort:function(a){var b=a||w;return e&&e.abort(b),z(0,b),this}};if(q.promise(x).complete=r.add,x.success=x.done,x.error=x.fail,m.url=((b||m.url||jb.href)+\"\").replace(mb,\"\").replace(rb,jb.protocol+\"//\"),m.type=c.method||c.type||m.method||m.type,m.dataTypes=n.trim(m.dataType||\"*\").toLowerCase().match(G)||[\"\"],null==m.crossDomain){j=d.createElement(\"a\");try{j.href=m.url,j.href=j.href,m.crossDomain=vb.protocol+\"//\"+vb.host!=j.protocol+\"//\"+j.host}catch(y){m.crossDomain=!0}}if(m.data&&m.processData&&\"string\"!=typeof m.data&&(m.data=n.param(m.data,m.traditional)),xb(sb,m,c,x),2===v)return x;k=n.event&&m.global,k&&0===n.active++&&n.event.trigger(\"ajaxStart\"),m.type=m.type.toUpperCase(),m.hasContent=!qb.test(m.type),f=m.url,m.hasContent||(m.data&&(f=m.url+=(lb.test(f)?\"&\":\"?\")+m.data,delete m.data),m.cache===!1&&(m.url=nb.test(f)?f.replace(nb,\"$1_=\"+kb++):f+(lb.test(f)?\"&\":\"?\")+\"_=\"+kb++)),m.ifModified&&(n.lastModified[f]&&x.setRequestHeader(\"If-Modified-Since\",n.lastModified[f]),n.etag[f]&&x.setRequestHeader(\"If-None-Match\",n.etag[f])),(m.data&&m.hasContent&&m.contentType!==!1||c.contentType)&&x.setRequestHeader(\"Content-Type\",m.contentType),x.setRequestHeader(\"Accept\",m.dataTypes[0]&&m.accepts[m.dataTypes[0]]?m.accepts[m.dataTypes[0]]+(\"*\"!==m.dataTypes[0]?\", \"+ub+\"; q=0.01\":\"\"):m.accepts[\"*\"]);for(l in m.headers)x.setRequestHeader(l,m.headers[l]);if(m.beforeSend&&(m.beforeSend.call(o,x,m)===!1||2===v))return x.abort();w=\"abort\";for(l in{success:1,error:1,complete:1})x[l](m[l]);if(e=xb(tb,m,c,x)){if(x.readyState=1,k&&p.trigger(\"ajaxSend\",[x,m]),2===v)return x;m.async&&m.timeout>0&&(i=a.setTimeout(function(){x.abort(\"timeout\")},m.timeout));try{v=1,e.send(t,z)}catch(y){if(!(2>v))throw y;z(-1,y)}}else z(-1,\"No Transport\");function z(b,c,d,h){var j,l,t,u,w,y=c;2!==v&&(v=2,i&&a.clearTimeout(i),e=void 0,g=h||\"\",x.readyState=b>0?4:0,j=b>=200&&300>b||304===b,d&&(u=zb(m,x,d)),u=Ab(m,u,x,j),j?(m.ifModified&&(w=x.getResponseHeader(\"Last-Modified\"),w&&(n.lastModified[f]=w),w=x.getResponseHeader(\"etag\"),w&&(n.etag[f]=w)),204===b||\"HEAD\"===m.type?y=\"nocontent\":304===b?y=\"notmodified\":(y=u.state,l=u.data,t=u.error,j=!t)):(t=y,!b&&y||(y=\"error\",0>b&&(b=0))),x.status=b,x.statusText=(c||y)+\"\",j?q.resolveWith(o,[l,y,x]):q.rejectWith(o,[x,y,t]),x.statusCode(s),s=void 0,k&&p.trigger(j?\"ajaxSuccess\":\"ajaxError\",[x,m,j?l:t]),r.fireWith(o,[x,y]),k&&(p.trigger(\"ajaxComplete\",[x,m]),--n.active||n.event.trigger(\"ajaxStop\")))}return x},getJSON:function(a,b,c){return n.get(a,b,c,\"json\")},getScript:function(a,b){return n.get(a,void 0,b,\"script\")}}),n.each([\"get\",\"post\"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax(n.extend({url:a,type:b,dataType:e,data:c,success:d},n.isPlainObject(a)&&a))}}),n._evalUrl=function(a){return n.ajax({url:a,type:\"GET\",dataType:\"script\",async:!1,global:!1,\"throws\":!0})},n.fn.extend({wrapAll:function(a){var b;return n.isFunction(a)?this.each(function(b){n(this).wrapAll(a.call(this,b))}):(this[0]&&(b=n(a,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstElementChild)a=a.firstElementChild;return a}).append(this)),this)},wrapInner:function(a){return n.isFunction(a)?this.each(function(b){n(this).wrapInner(a.call(this,b))}):this.each(function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,\"body\")||n(this).replaceWith(this.childNodes)}).end()}}),n.expr.filters.hidden=function(a){return!n.expr.filters.visible(a)},n.expr.filters.visible=function(a){return a.offsetWidth>0||a.offsetHeight>0||a.getClientRects().length>0};var Bb=/%20/g,Cb=/\\[\\]$/,Db=/\\r?\\n/g,Eb=/^(?:submit|button|image|reset|file)$/i,Fb=/^(?:input|select|textarea|keygen)/i;function Gb(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||Cb.test(a)?d(a,e):Gb(a+\"[\"+(\"object\"==typeof e&&null!=e?b:\"\")+\"]\",e,c,d)});else if(c||\"object\"!==n.type(b))d(a,b);else for(e in b)Gb(a+\"[\"+e+\"]\",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?\"\":b,d[d.length]=encodeURIComponent(a)+\"=\"+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)Gb(c,a[c],b,e);return d.join(\"&\").replace(Bb,\"+\")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,\"elements\");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(\":disabled\")&&Fb.test(this.nodeName)&&!Eb.test(a)&&(this.checked||!X.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(Db,\"\\r\\n\")}}):{name:b.name,value:c.replace(Db,\"\\r\\n\")}}).get()}}),n.ajaxSettings.xhr=function(){try{return new a.XMLHttpRequest}catch(b){}};var Hb={0:200,1223:204},Ib=n.ajaxSettings.xhr();l.cors=!!Ib&&\"withCredentials\"in Ib,l.ajax=Ib=!!Ib,n.ajaxTransport(function(b){var c,d;return l.cors||Ib&&!b.crossDomain?{send:function(e,f){var g,h=b.xhr();if(h.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(g in b.xhrFields)h[g]=b.xhrFields[g];b.mimeType&&h.overrideMimeType&&h.overrideMimeType(b.mimeType),b.crossDomain||e[\"X-Requested-With\"]||(e[\"X-Requested-With\"]=\"XMLHttpRequest\");for(g in e)h.setRequestHeader(g,e[g]);c=function(a){return function(){c&&(c=d=h.onload=h.onerror=h.onabort=h.onreadystatechange=null,\"abort\"===a?h.abort():\"error\"===a?\"number\"!=typeof h.status?f(0,\"error\"):f(h.status,h.statusText):f(Hb[h.status]||h.status,h.statusText,\"text\"!==(h.responseType||\"text\")||\"string\"!=typeof h.responseText?{binary:h.response}:{text:h.responseText},h.getAllResponseHeaders()))}},h.onload=c(),d=h.onerror=c(\"error\"),void 0!==h.onabort?h.onabort=d:h.onreadystatechange=function(){4===h.readyState&&a.setTimeout(function(){c&&d()})},c=c(\"abort\");try{h.send(b.hasContent&&b.data||null)}catch(i){if(c)throw i}},abort:function(){c&&c()}}:void 0}),n.ajaxSetup({accepts:{script:\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"},contents:{script:/\\b(?:java|ecma)script\\b/},converters:{\"text script\":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter(\"script\",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type=\"GET\")}),n.ajaxTransport(\"script\",function(a){if(a.crossDomain){var b,c;return{send:function(e,f){b=n(\"<script>\").prop({charset:a.scriptCharset,src:a.url}).on(\"load error\",c=function(a){b.remove(),c=null,a&&f(\"error\"===a.type?404:200,a.type)}),d.head.appendChild(b[0])},abort:function(){c&&c()}}}});var Jb=[],Kb=/(=)\\?(?=&|$)|\\?\\?/;n.ajaxSetup({jsonp:\"callback\",jsonpCallback:function(){var a=Jb.pop()||n.expando+\"_\"+kb++;return this[a]=!0,a}}),n.ajaxPrefilter(\"json jsonp\",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(Kb.test(b.url)?\"url\":\"string\"==typeof b.data&&0===(b.contentType||\"\").indexOf(\"application/x-www-form-urlencoded\")&&Kb.test(b.data)&&\"data\");return h||\"jsonp\"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(Kb,\"$1\"+e):b.jsonp!==!1&&(b.url+=(lb.test(b.url)?\"&\":\"?\")+b.jsonp+\"=\"+e),b.converters[\"script json\"]=function(){return g||n.error(e+\" was not called\"),g[0]},b.dataTypes[0]=\"json\",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?n(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,Jb.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),\"script\"):void 0}),n.parseHTML=function(a,b,c){if(!a||\"string\"!=typeof a)return null;\"boolean\"==typeof b&&(c=b,b=!1),b=b||d;var e=x.exec(a),f=!c&&[];return e?[b.createElement(e[1])]:(e=ca([a],b,f),f&&f.length&&n(f).remove(),n.merge([],e.childNodes))};var Lb=n.fn.load;n.fn.load=function(a,b,c){if(\"string\"!=typeof a&&Lb)return Lb.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(\" \");return h>-1&&(d=n.trim(a.slice(h)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&\"object\"==typeof b&&(e=\"POST\"),g.length>0&&n.ajax({url:a,type:e||\"GET\",dataType:\"html\",data:b}).done(function(a){f=arguments,g.html(d?n(\"<div>\").append(n.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},n.each([\"ajaxStart\",\"ajaxStop\",\"ajaxComplete\",\"ajaxError\",\"ajaxSuccess\",\"ajaxSend\"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};function Mb(a){return n.isWindow(a)?a:9===a.nodeType&&a.defaultView}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,\"position\"),l=n(a),m={};\"static\"===k&&(a.style.position=\"relative\"),h=l.offset(),f=n.css(a,\"top\"),i=n.css(a,\"left\"),j=(\"absolute\"===k||\"fixed\"===k)&&(f+i).indexOf(\"auto\")>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,n.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),\"using\"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d=this[0],e={top:0,left:0},f=d&&d.ownerDocument;if(f)return b=f.documentElement,n.contains(b,d)?(e=d.getBoundingClientRect(),c=Mb(f),{top:e.top+c.pageYOffset-b.clientTop,left:e.left+c.pageXOffset-b.clientLeft}):e},position:function(){if(this[0]){var a,b,c=this[0],d={top:0,left:0};return\"fixed\"===n.css(c,\"position\")?b=c.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],\"html\")||(d=a.offset()),d.top+=n.css(a[0],\"borderTopWidth\",!0),d.left+=n.css(a[0],\"borderLeftWidth\",!0)),{top:b.top-d.top-n.css(c,\"marginTop\",!0),left:b.left-d.left-n.css(c,\"marginLeft\",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&\"static\"===n.css(a,\"position\"))a=a.offsetParent;return a||Ea})}}),n.each({scrollLeft:\"pageXOffset\",scrollTop:\"pageYOffset\"},function(a,b){var c=\"pageYOffset\"===b;n.fn[a]=function(d){return K(this,function(a,d,e){var f=Mb(a);return void 0===e?f?f[b]:a[d]:void(f?f.scrollTo(c?f.pageXOffset:e,c?e:f.pageYOffset):a[d]=e)},a,d,arguments.length)}}),n.each([\"top\",\"left\"],function(a,b){n.cssHooks[b]=Ga(l.pixelPosition,function(a,c){return c?(c=Fa(a,b),Ba.test(c)?n(a).position()[b]+\"px\":c):void 0})}),n.each({Height:\"height\",Width:\"width\"},function(a,b){n.each({padding:\"inner\"+a,content:b,\"\":\"outer\"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||\"boolean\"!=typeof d),g=c||(d===!0||e===!0?\"margin\":\"border\");return K(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement[\"client\"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body[\"scroll\"+a],e[\"scroll\"+a],b.body[\"offset\"+a],e[\"offset\"+a],e[\"client\"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,\"**\"):this.off(b,a||\"**\",c)},size:function(){return this.length}}),n.fn.andSelf=n.fn.addBack,\"function\"==typeof define&&define.amd&&define(\"jquery\",[],function(){return n});var Nb=a.jQuery,Ob=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=Ob),b&&a.jQuery===n&&(a.jQuery=Nb),n},b||(a.jQuery=a.$=n),n});","var ctx = document.getElementById('myChart').getContext('2d');\r\nlet draw = Chart.controllers.line.prototype.draw;\r\nChart.controllers.line.prototype.draw = function() {\r\n    let chart = this.chart;\r\n    let ctx = chart.ctx;\r\n    let _stroke = ctx.stroke;\r\n    ctx.stroke = function() {\r\n        ctx.save();\r\n        ctx.shadowColor = ctx.strokeStyle;\r\n        ctx.shadowBlur = 15;\r\n        ctx.shadowOffsetX = 6;\r\n        ctx.shadowOffsetY = 3;\r\n        _stroke.apply(this, arguments);\r\n        ctx.restore();\r\n    };\r\n    draw.apply(this, arguments);\r\n    ctx.stroke = _stroke;\r\n};\r\nvar chart = new Chart(ctx, {\r\n    // The type of chart we want to create\r\n    type: 'line', // also try bar or other graph types\r\n\r\n    // The data for our dataset\r\n    data: {\r\n        labels: [\"Jun 2016\", \"Jul 2016\", \"Aug 2016\", \"Sep 2016\", \"Oct 2016\", \"Nov 2016\", \"Dec 2016\"],\r\n        // Information about the dataset\r\n        datasets: [{\r\n            backgroundColor: 'transparent',\r\n            borderColor: '#9470b7',\r\n            data: [40, 80, 20, 90, 30, 80, 40],\r\n            borderWidth: 2,\r\n            stepSize: 20\r\n        }]\r\n    },\r\n    // Configuration options\r\n    options: {\r\n        layout: {\r\n            padding: {\r\n                left: 0,\r\n                right: 0,\r\n                bottom: -10\r\n            }\r\n        },\r\n        // layout: {\r\n        //     padding: 10,\r\n        // },\r\n        legend: {\r\n            display: false,\r\n        },\r\n        title: {\r\n            display: false,\r\n        },\r\n        scales: {\r\n\r\n            yAxes: [{\r\n                angleLines: {\r\n                    display: false\r\n                },\r\n                ticks: {\r\n                    display: false,\r\n                    stepSize: 20,\r\n                    beginAtZero: true,\r\n                },\r\n                gridLines: {\r\n                    display: true,\r\n                    drawBorder: false,\r\n\r\n                },\r\n                scaleLabel: {\r\n                    display: false,\r\n                    labelString: 'Precipitation in mm'\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                angleLines: {\r\n                    display: false\r\n                },\r\n                ticks: {\r\n                    display: false,\r\n                    stepSize: 20,\r\n                    beginAtZero: true,\r\n\r\n                },\r\n                gridLines: {\r\n                    display: false,\r\n                    drawBorder: false,\r\n                },\r\n                scaleLabel: {\r\n                    display: false,\r\n                }\r\n            }]\r\n        }\r\n    }\r\n});\r\n\r\n\r\n/*dchart js start here*/\r\nvar ctx = document.getElementById(\"dChart\").getContext('2d');\r\n\r\nvar dChart = new Chart(ctx, {\r\n    type: 'doughnut',\r\n    data: {\r\n        labels: [\"Completed\", \"Pending\"],\r\n        datasets: [{\r\n            data: [500, 120], // Specify the data values array\r\n\r\n            // borderColor: ['#2196f38c', '#f443368c', '#3f51b570', '#00968896'], // Add custom color border \r\n            backgroundColor: ['#64329c', '#ced4da'], // Add custom color background (Points and Fill)\r\n            borderWidth: 1 // Specify bar border width\r\n        }]\r\n    },\r\n    options: {\r\n\r\n        datasetRadiusBuffer: 25,\r\n        cutoutPercentage: 75,\r\n        responsive: true, // Instruct chart js to respond nicely.\r\n        maintainAspectRatio: false, // Add to prevent default behaviour of full-width/height \r\n        legend: {\r\n            position: 'bottom',\r\n\r\n            labels: {\r\n                boxWidth: 20,\r\n            }\r\n        },\r\n    }\r\n});\r\n/*dchart js end here*/\r\n\r\n$(\".search\").on('click', function() {\r\n    $(\".search-box\").toggleClass('active');\r\n    $('.search-box input').focus();\r\n});\r\n$(\".side-menu-toggle\").on('click', function() {\r\n    $(\"body\").toggleClass('menu-close');\r\n});\r\n$('.count-number').each(function() {\r\n    $(this).prop('Counter', 0).animate({\r\n        Counter: $(this).text()\r\n    }, {\r\n        duration: 3000,\r\n        easing: 'swing',\r\n        step: function(now) {\r\n            $(this).text(Math.ceil(now));\r\n        }\r\n    });\r\n});"]}